--- File: .gitignore ---
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules

# next.js
/.next/
/out/

# production
/build

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files
# .env*.local
# .env*.development.local
# .env*.test.local
# .env*.production.local

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

--- File: components.json ---
{
  "$schema": "https://ui.shadcn.com/schema.json",
  "style": "default",
  "rsc": true,
  "tsx": true,
  "tailwind": {
    "config": "tailwind.config.ts",
    "css": "app/globals.css",
    "baseColor": "neutral",
    "cssVariables": true,
    "prefix": ""
  },
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils",
    "ui": "@/components/ui",
    "lib": "@/lib",
    "hooks": "@/hooks"
  },
  "iconLibrary": "lucide"
}

--- File: next-env.d.ts ---
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/app/api-reference/config/typescript for more information.


--- File: next.config.mjs ---
/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: true,
  // swcMinify: true, // Removed: swcMinify is enabled by default in Next.js 15+
  eslint: {
    ignoreDuringBuilds: true,
  },
  typescript: {
    ignoreBuildErrors: true,
  },
  images: {
    unoptimized: true,
  },
  // webpack: (config, { isServer }) => {
  //   // Monaco Editor uses CSS files which need to be handled.
  //   // This is often handled by @monaco-editor/react automatically with Next.js,
  //   // but if you encounter issues with CSS loading, you might need a custom webpack config.
  //   // For now, let's assume the default handling is sufficient.
  //   // If not, you might need something like:
  //   // if (!isServer) {
  //   //   config.module.rules.push({
  //   //     test: /\.css$/,
  //   //     use: ['style-loader', 'css-loader'],
  //   //   });
  //   // }
  //   return config;
  // },
}

export default nextConfig

--- File: package.json ---
{
  "name": "my-v0-project",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@alloc/quick-lru": "^5.2.0",
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.0",
    "@hookform/resolvers": "^3.10.0",
    "@iconify/react": "^6.0.0",
    "@monaco-editor/react": "^4.6.0",
    "@radix-ui/react-accordion": "^1.2.2",
    "@radix-ui/react-alert-dialog": "^1.1.4",
    "@radix-ui/react-aspect-ratio": "^1.1.1",
    "@radix-ui/react-avatar": "^1.1.2",
    "@radix-ui/react-checkbox": "^1.1.3",
    "@radix-ui/react-collapsible": "^1.1.2",
    "@radix-ui/react-context-menu": "^2.2.4",
    "@radix-ui/react-dialog": "^1.1.4",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-hover-card": "^1.1.4",
    "@radix-ui/react-label": "^2.1.1",
    "@radix-ui/react-menubar": "^1.1.4",
    "@radix-ui/react-navigation-menu": "^1.2.3",
    "@radix-ui/react-popover": "^1.1.4",
    "@radix-ui/react-progress": "^1.1.1",
    "@radix-ui/react-radio-group": "^1.2.2",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.2.2",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.1.2",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.4",
    "@radix-ui/react-toggle": "^1.1.1",
    "@radix-ui/react-toggle-group": "^1.1.1",
    "@radix-ui/react-tooltip": "^1.1.6",
    "@types/react-syntax-highlighter": "^15.5.13",
    "add": "^2.0.6",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.0.4",
    "date-fns": "^3.6.0",
    "embla-carousel-react": "^8.5.1",
    "file-icons-js": "^1.1.0",
    "framer-motion": "^11.0.8",
    "input-otp": "^1.4.1",
    "jotai": "^2.7.0",
    "katex": "^0.16.22",
    "lucide-react": "^0.454.0",
    "material-icon-theme": "^5.23.0",
    "mdi-material-ui": "^7.9.4",
    "monaco-editor": "^0.50.0",
    "monaco-themes": "^0.4.5",
    "next": "15.2.4",
    "next-themes": "^0.4.6",
    "react": "^18.2.0",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.2.0",
    "react-file-icon": "^1.6.0",
    "react-hook-form": "^7.56.4",
    "react-markdown": "^10.1.0",
    "react-resizable-panels": "^2.1.9",
    "react-spring": "^9.7.3",
    "react-syntax-highlighter": "^15.6.1",
    "react-virtuoso": "^4.7.2",
    "recharts": "^2.15.0",
    "rehype-katex": "^7.0.1",
    "rehype-raw": "^7.0.0",
    "remark-gfm": "^4.0.1",
    "remark-math": "^6.0.0",
    "shiki": "^1.1.7",
    "sonner": "^1.7.4",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "uuid": "^11.1.0",
    "vaul": "^0.9.9",
    "zod": "^3.25.20",
    "zustand": "^4.5.2"
  },
  "devDependencies": {
    "@tailwindcss/typography": "^0.5.16",
    "@types/katex": "^0.16.7",
    "@types/node": "^22.15.21",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "@types/uuid": "^10.0.0",
    "autoprefixer": "^10.4.21",
    "postcss": "^8.5.3",
    "tailwindcss": "^3.4.17",
    "typescript": "^5.8.3"
  }
}

--- File: pnpm-lock.yaml ---
lockfileVersion: '9.0'

settings:
  autoInstallPeers: true
  excludeLinksFromLockfile: false

importers:

  .:
    dependencies:
      '@alloc/quick-lru':
        specifier: ^5.2.0
        version: 5.2.0
      '@emotion/react':
        specifier: ^11.14.0
        version: 11.14.0(@types/react@18.3.22)(react@18.3.1)
      '@emotion/styled':
        specifier: ^11.14.0
        version: 11.14.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react@18.3.1)
      '@hookform/resolvers':
        specifier: ^3.10.0
        version: 3.10.0(react-hook-form@7.56.4(react@18.3.1))
      '@iconify/react':
        specifier: ^6.0.0
        version: 6.0.0(react@18.3.1)
      '@monaco-editor/react':
        specifier: ^4.6.0
        version: 4.7.0(monaco-editor@0.50.0)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-accordion':
        specifier: ^1.2.2
        version: 1.2.11(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-alert-dialog':
        specifier: ^1.1.4
        version: 1.1.14(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-aspect-ratio':
        specifier: ^1.1.1
        version: 1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-avatar':
        specifier: ^1.1.2
        version: 1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-checkbox':
        specifier: ^1.1.3
        version: 1.3.2(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-collapsible':
        specifier: ^1.1.2
        version: 1.1.11(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-context-menu':
        specifier: ^2.2.4
        version: 2.2.15(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-dialog':
        specifier: ^1.1.4
        version: 1.1.14(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-dropdown-menu':
        specifier: ^2.1.15
        version: 2.1.15(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-hover-card':
        specifier: ^1.1.4
        version: 1.1.14(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-label':
        specifier: ^2.1.1
        version: 2.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-menubar':
        specifier: ^1.1.4
        version: 1.1.15(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-navigation-menu':
        specifier: ^1.2.3
        version: 1.2.13(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-popover':
        specifier: ^1.1.4
        version: 1.1.14(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-progress':
        specifier: ^1.1.1
        version: 1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-radio-group':
        specifier: ^1.2.2
        version: 1.3.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-scroll-area':
        specifier: ^1.2.9
        version: 1.2.9(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-select':
        specifier: ^2.2.5
        version: 2.2.5(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-separator':
        specifier: ^1.1.7
        version: 1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-slider':
        specifier: ^1.2.2
        version: 1.3.5(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-slot':
        specifier: ^1.2.3
        version: 1.2.3(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-switch':
        specifier: ^1.1.2
        version: 1.2.5(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-tabs':
        specifier: ^1.1.12
        version: 1.1.12(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-toast':
        specifier: ^1.2.4
        version: 1.2.14(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-toggle':
        specifier: ^1.1.1
        version: 1.1.9(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-toggle-group':
        specifier: ^1.1.1
        version: 1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-tooltip':
        specifier: ^1.1.6
        version: 1.2.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@types/react-syntax-highlighter':
        specifier: ^15.5.13
        version: 15.5.13
      add:
        specifier: ^2.0.6
        version: 2.0.6
      class-variance-authority:
        specifier: ^0.7.1
        version: 0.7.1
      clsx:
        specifier: ^2.1.1
        version: 2.1.1
      cmdk:
        specifier: ^1.0.4
        version: 1.1.1(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      date-fns:
        specifier: ^3.6.0
        version: 3.6.0
      embla-carousel-react:
        specifier: ^8.5.1
        version: 8.6.0(react@18.3.1)
      file-icons-js:
        specifier: ^1.1.0
        version: 1.1.0
      framer-motion:
        specifier: ^11.0.8
        version: 11.18.2(@emotion/is-prop-valid@1.3.1)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      input-otp:
        specifier: ^1.4.1
        version: 1.4.2(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      jotai:
        specifier: ^2.7.0
        version: 2.12.4(@types/react@18.3.22)(react@18.3.1)
      katex:
        specifier: ^0.16.22
        version: 0.16.22
      lucide-react:
        specifier: ^0.454.0
        version: 0.454.0(react@18.3.1)
      material-icon-theme:
        specifier: ^5.23.0
        version: 5.23.0
      mdi-material-ui:
        specifier: ^7.9.4
        version: 7.9.4(@mui/material@7.1.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@emotion/styled@11.14.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)
      monaco-editor:
        specifier: ^0.50.0
        version: 0.50.0
      monaco-themes:
        specifier: ^0.4.5
        version: 0.4.5
      next:
        specifier: 15.2.4
        version: 15.2.4(@babel/core@7.27.1)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      next-themes:
        specifier: ^0.4.6
        version: 0.4.6(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      react:
        specifier: ^18.2.0
        version: 18.3.1
      react-day-picker:
        specifier: ^8.10.1
        version: 8.10.1(date-fns@3.6.0)(react@18.3.1)
      react-dom:
        specifier: ^18.2.0
        version: 18.3.1(react@18.3.1)
      react-file-icon:
        specifier: ^1.6.0
        version: 1.6.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      react-hook-form:
        specifier: ^7.56.4
        version: 7.56.4(react@18.3.1)
      react-markdown:
        specifier: ^10.1.0
        version: 10.1.0(@types/react@18.3.22)(react@18.3.1)
      react-resizable-panels:
        specifier: ^2.1.9
        version: 2.1.9(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      react-spring:
        specifier: ^9.7.3
        version: 9.7.5(@react-three/fiber@9.1.2(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react-native@0.79.2(@babel/core@7.27.1)(@types/react@18.3.22)(react@18.3.1))(react@18.3.1)(three@0.176.0))(konva@9.3.20)(react-dom@18.3.1(react@18.3.1))(react-konva@18.2.10(@types/react@18.3.22)(konva@9.3.20)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-native@0.79.2(@babel/core@7.27.1)(@types/react@18.3.22)(react@18.3.1))(react-zdog@1.2.2)(react@18.3.1)(three@0.176.0)(zdog@1.1.3)
      react-syntax-highlighter:
        specifier: ^15.6.1
        version: 15.6.1(react@18.3.1)
      react-virtuoso:
        specifier: ^4.7.2
        version: 4.12.7(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      recharts:
        specifier: ^2.15.0
        version: 2.15.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      rehype-katex:
        specifier: ^7.0.1
        version: 7.0.1
      rehype-raw:
        specifier: ^7.0.0
        version: 7.0.0
      remark-gfm:
        specifier: ^4.0.1
        version: 4.0.1
      remark-math:
        specifier: ^6.0.0
        version: 6.0.0
      shiki:
        specifier: ^1.1.7
        version: 1.29.2
      sonner:
        specifier: ^1.7.4
        version: 1.7.4(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      tailwind-merge:
        specifier: ^2.6.0
        version: 2.6.0
      tailwindcss-animate:
        specifier: ^1.0.7
        version: 1.0.7(tailwindcss@3.4.17)
      uuid:
        specifier: ^11.1.0
        version: 11.1.0
      vaul:
        specifier: ^0.9.9
        version: 0.9.9(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      zod:
        specifier: ^3.25.20
        version: 3.25.28
      zustand:
        specifier: ^4.5.2
        version: 4.5.7(@types/react@18.3.22)(react@18.3.1)
    devDependencies:
      '@tailwindcss/typography':
        specifier: ^0.5.16
        version: 0.5.16(tailwindcss@3.4.17)
      '@types/katex':
        specifier: ^0.16.7
        version: 0.16.7
      '@types/node':
        specifier: ^22.15.21
        version: 22.15.21
      '@types/react':
        specifier: ^18.2.0
        version: 18.3.22
      '@types/react-dom':
        specifier: ^18.2.0
        version: 18.3.7(@types/react@18.3.22)
      '@types/uuid':
        specifier: ^10.0.0
        version: 10.0.0
      autoprefixer:
        specifier: ^10.4.21
        version: 10.4.21(postcss@8.5.3)
      postcss:
        specifier: ^8.5.3
        version: 8.5.3
      tailwindcss:
        specifier: ^3.4.17
        version: 3.4.17
      typescript:
        specifier: ^5.8.3
        version: 5.8.3

packages:

  '@alloc/quick-lru@5.2.0':
    resolution: {integrity: sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==}
    engines: {node: '>=10'}

  '@ampproject/remapping@2.3.0':
    resolution: {integrity: sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==}
    engines: {node: '>=6.0.0'}

  '@babel/code-frame@7.27.1':
    resolution: {integrity: sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==}
    engines: {node: '>=6.9.0'}

  '@babel/compat-data@7.27.2':
    resolution: {integrity: sha512-TUtMJYRPyUb/9aU8f3K0mjmjf6M9N5Woshn2CS6nqJSeJtTtQcpLUXjGt9vbF8ZGff0El99sWkLgzwW3VXnxZQ==}
    engines: {node: '>=6.9.0'}

  '@babel/core@7.27.1':
    resolution: {integrity: sha512-IaaGWsQqfsQWVLqMn9OB92MNN7zukfVA4s7KKAI0KfrrDsZ0yhi5uV4baBuLuN7n3vsZpwP8asPPcVwApxvjBQ==}
    engines: {node: '>=6.9.0'}

  '@babel/generator@7.27.1':
    resolution: {integrity: sha512-UnJfnIpc/+JO0/+KRVQNGU+y5taA5vCbwN8+azkX6beii/ZF+enZJSOKo11ZSzGJjlNfJHfQtmQT8H+9TXPG2w==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-compilation-targets@7.27.2':
    resolution: {integrity: sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-module-imports@7.27.1':
    resolution: {integrity: sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-module-transforms@7.27.1':
    resolution: {integrity: sha512-9yHn519/8KvTU5BjTVEEeIM3w9/2yXNKoD82JifINImhpKkARMJKPP59kLo+BafpdN5zgNeIcS4jsGDmd3l58g==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0

  '@babel/helper-plugin-utils@7.27.1':
    resolution: {integrity: sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-string-parser@7.27.1':
    resolution: {integrity: sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-validator-identifier@7.27.1':
    resolution: {integrity: sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==}
    engines: {node: '>=6.9.0'}

  '@babel/helper-validator-option@7.27.1':
    resolution: {integrity: sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==}
    engines: {node: '>=6.9.0'}

  '@babel/helpers@7.27.1':
    resolution: {integrity: sha512-FCvFTm0sWV8Fxhpp2McP5/W53GPllQ9QeQ7SiqGWjMf/LVG07lFa5+pgK05IRhVwtvafT22KF+ZSnM9I545CvQ==}
    engines: {node: '>=6.9.0'}

  '@babel/parser@7.27.2':
    resolution: {integrity: sha512-QYLs8299NA7WM/bZAdp+CviYYkVoYXlDW2rzliy3chxd1PQjej7JORuMJDJXJUb9g0TT+B99EwaVLKmX+sPXWw==}
    engines: {node: '>=6.0.0'}
    hasBin: true

  '@babel/plugin-syntax-async-generators@7.8.4':
    resolution: {integrity: sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-bigint@7.8.3':
    resolution: {integrity: sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfntVwe/N6dCXpU+zL3Npg==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-class-properties@7.12.13':
    resolution: {integrity: sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-class-static-block@7.14.5':
    resolution: {integrity: sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-import-attributes@7.27.1':
    resolution: {integrity: sha512-oFT0FrKHgF53f4vOsZGi2Hh3I35PfSmVs4IBFLFj4dnafP+hIWDLg3VyKmUHfLoLHlyxY4C7DGtmHuJgn+IGww==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-import-meta@7.10.4':
    resolution: {integrity: sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-json-strings@7.8.3':
    resolution: {integrity: sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-logical-assignment-operators@7.10.4':
    resolution: {integrity: sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-nullish-coalescing-operator@7.8.3':
    resolution: {integrity: sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-numeric-separator@7.10.4':
    resolution: {integrity: sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-object-rest-spread@7.8.3':
    resolution: {integrity: sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-optional-catch-binding@7.8.3':
    resolution: {integrity: sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-optional-chaining@7.8.3':
    resolution: {integrity: sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-private-property-in-object@7.14.5':
    resolution: {integrity: sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/plugin-syntax-top-level-await@7.14.5':
    resolution: {integrity: sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==}
    engines: {node: '>=6.9.0'}
    peerDependencies:
      '@babel/core': ^7.0.0-0

  '@babel/runtime@7.27.1':
    resolution: {integrity: sha512-1x3D2xEk2fRo3PAhwQwu5UubzgiVWSXTBfWpVd2Mx2AzRqJuDJCsgaDVZ7HB5iGzDW1Hl1sWN2mFyKjmR9uAog==}
    engines: {node: '>=6.9.0'}

  '@babel/template@7.27.2':
    resolution: {integrity: sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==}
    engines: {node: '>=6.9.0'}

  '@babel/traverse@7.27.1':
    resolution: {integrity: sha512-ZCYtZciz1IWJB4U61UPu4KEaqyfj+r5T1Q5mqPo+IBpcG9kHv30Z0aD8LXPgC1trYa6rK0orRyAhqUgk4MjmEg==}
    engines: {node: '>=6.9.0'}

  '@babel/types@7.27.1':
    resolution: {integrity: sha512-+EzkxvLNfiUeKMgy/3luqfsCWFRXLb7U6wNQTk60tovuckwB15B191tJWvpp4HjiQWdJkCxO3Wbvc6jlk3Xb2Q==}
    engines: {node: '>=6.9.0'}

  '@emnapi/runtime@1.4.3':
    resolution: {integrity: sha512-pBPWdu6MLKROBX05wSNKcNb++m5Er+KQ9QkB+WVM+pW2Kx9hoSrVTnu3BdkI5eBLZoKu/J6mW/B6i6bJB2ytXQ==}

  '@emotion/babel-plugin@11.13.5':
    resolution: {integrity: sha512-pxHCpT2ex+0q+HH91/zsdHkw/lXd468DIN2zvfvLtPKLLMo6gQj7oLObq8PhkrxOZb/gGCq03S3Z7PDhS8pduQ==}

  '@emotion/cache@11.14.0':
    resolution: {integrity: sha512-L/B1lc/TViYk4DcpGxtAVbx0ZyiKM5ktoIyafGkH6zg/tj+mA+NE//aPYKG0k8kCHSHVJrpLpcAlOBEXQ3SavA==}

  '@emotion/hash@0.9.2':
    resolution: {integrity: sha512-MyqliTZGuOm3+5ZRSaaBGP3USLw6+EGykkwZns2EPC5g8jJ4z9OrdZY9apkl3+UP9+sdz76YYkwCKP5gh8iY3g==}

  '@emotion/is-prop-valid@1.3.1':
    resolution: {integrity: sha512-/ACwoqx7XQi9knQs/G0qKvv5teDMhD7bXYns9N/wM8ah8iNb8jZ2uNO0YOgiq2o2poIvVtJS2YALasQuMSQ7Kw==}

  '@emotion/memoize@0.9.0':
    resolution: {integrity: sha512-30FAj7/EoJ5mwVPOWhAyCX+FPfMDrVecJAM+Iw9NRoSl4BBAQeqj4cApHHUXOVvIPgLVDsCFoz/hGD+5QQD1GQ==}

  '@emotion/react@11.14.0':
    resolution: {integrity: sha512-O000MLDBDdk/EohJPFUqvnp4qnHeYkVP5B0xEG0D/L7cOKP9kefu2DXn8dj74cQfsEzUqh+sr1RzFqiL1o+PpA==}
    peerDependencies:
      '@types/react': '*'
      react: '>=16.8.0'
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@emotion/serialize@1.3.3':
    resolution: {integrity: sha512-EISGqt7sSNWHGI76hC7x1CksiXPahbxEOrC5RjmFRJTqLyEK9/9hZvBbiYn70dw4wuwMKiEMCUlR6ZXTSWQqxA==}

  '@emotion/sheet@1.4.0':
    resolution: {integrity: sha512-fTBW9/8r2w3dXWYM4HCB1Rdp8NLibOw2+XELH5m5+AkWiL/KqYX6dc0kKYlaYyKjrQ6ds33MCdMPEwgs2z1rqg==}

  '@emotion/styled@11.14.0':
    resolution: {integrity: sha512-XxfOnXFffatap2IyCeJyNov3kiDQWoR08gPUQxvbL7fxKryGBKUZUkG6Hz48DZwVrJSVh9sJboyV1Ds4OW6SgA==}
    peerDependencies:
      '@emotion/react': ^11.0.0-rc.0
      '@types/react': '*'
      react: '>=16.8.0'
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@emotion/unitless@0.10.0':
    resolution: {integrity: sha512-dFoMUuQA20zvtVTuxZww6OHoJYgrzfKM1t52mVySDJnMSEa08ruEvdYQbhvyu6soU+NeLVd3yKfTfT0NeV6qGg==}

  '@emotion/use-insertion-effect-with-fallbacks@1.2.0':
    resolution: {integrity: sha512-yJMtVdH59sxi/aVJBpk9FQq+OR8ll5GT8oWd57UpeaKEVGab41JWaCFA7FRLoMLloOZF/c/wsPoe+bfGmRKgDg==}
    peerDependencies:
      react: '>=16.8.0'

  '@emotion/utils@1.4.2':
    resolution: {integrity: sha512-3vLclRofFziIa3J2wDh9jjbkUz9qk5Vi3IZ/FSTKViB0k+ef0fPV7dYrUIugbgupYDx7v9ud/SjrtEP8Y4xLoA==}

  '@emotion/weak-memoize@0.4.0':
    resolution: {integrity: sha512-snKqtPW01tN0ui7yu9rGv69aJXr/a/Ywvl11sUjNtEcRc+ng/mQriFL0wLXMef74iHa/EkftbDzU9F8iFbH+zg==}

  '@floating-ui/core@1.7.0':
    resolution: {integrity: sha512-FRdBLykrPPA6P76GGGqlex/e7fbe0F1ykgxHYNXQsH/iTEtjMj/f9bpY5oQqbjt5VgZvgz/uKXbGuROijh3VLA==}

  '@floating-ui/dom@1.7.0':
    resolution: {integrity: sha512-lGTor4VlXcesUMh1cupTUTDoCxMb0V6bm3CnxHzQcw8Eaf1jQbgQX4i02fYgT0vJ82tb5MZ4CZk1LRGkktJCzg==}

  '@floating-ui/react-dom@2.1.2':
    resolution: {integrity: sha512-06okr5cgPzMNBy+Ycse2A6udMi4bqwW/zgBF/rwjcNqWkyr82Mcg8b0vjX8OJpZFy/FKjJmw6wV7t44kK6kW7A==}
    peerDependencies:
      react: '>=16.8.0'
      react-dom: '>=16.8.0'

  '@floating-ui/utils@0.2.9':
    resolution: {integrity: sha512-MDWhGtE+eHw5JW7lq4qhc5yRLS11ERl1c7Z6Xd0a58DozHES6EnNNwUWbMiG4J9Cgj053Bhk8zvlhFYKVhULwg==}

  '@hookform/resolvers@3.10.0':
    resolution: {integrity: sha512-79Dv+3mDF7i+2ajj7SkypSKHhl1cbln1OGavqrsF7p6mbUv11xpqpacPsGDCTRvCSjEEIez2ef1NveSVL3b0Ag==}
    peerDependencies:
      react-hook-form: ^7.0.0

  '@iconify/react@6.0.0':
    resolution: {integrity: sha512-eqNscABVZS8eCpZLU/L5F5UokMS9mnCf56iS1nM9YYHdH8ZxqZL9zyjSwW60IOQFsXZkilbBiv+1paMXBhSQnw==}
    peerDependencies:
      react: '>=16'

  '@iconify/types@2.0.0':
    resolution: {integrity: sha512-+wluvCrRhXrhyOmRDJ3q8mux9JkKy5SJ/v8ol2tu4FVjyYvtEzkc/3pK15ET6RKg4b4w4BmTk1+gsCUhf21Ykg==}

  '@img/sharp-darwin-arm64@0.33.5':
    resolution: {integrity: sha512-UT4p+iz/2H4twwAoLCqfA9UH5pI6DggwKEGuaPy7nCVQ8ZsiY5PIcrRvD1DzuY3qYL07NtIQcWnBSY/heikIFQ==}
    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
    cpu: [arm64]
    os: [darwin]

  '@img/sharp-darwin-x64@0.33.5':
    resolution: {integrity: sha512-fyHac4jIc1ANYGRDxtiqelIbdWkIuQaI84Mv45KvGRRxSAa7o7d1ZKAOBaYbnepLC1WqxfpimdeWfvqqSGwR2Q==}
    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
    cpu: [x64]
    os: [darwin]

  '@img/sharp-libvips-darwin-arm64@1.0.4':
    resolution: {integrity: sha512-XblONe153h0O2zuFfTAbQYAX2JhYmDHeWikp1LM9Hul9gVPjFY427k6dFEcOL72O01QxQsWi761svJ/ev9xEDg==}
    cpu: [arm64]
    os: [darwin]

  '@img/sharp-libvips-darwin-x64@1.0.4':
    resolution: {integrity: sha512-xnGR8YuZYfJGmWPvmlunFaWJsb9T/AO2ykoP3Fz/0X5XV2aoYBPkX6xqCQvUTKKiLddarLaxpzNe+b1hjeWHAQ==}
    cpu: [x64]
    os: [darwin]

  '@img/sharp-libvips-linux-arm64@1.0.4':
    resolution: {integrity: sha512-9B+taZ8DlyyqzZQnoeIvDVR/2F4EbMepXMc/NdVbkzsJbzkUjhXv/70GQJ7tdLA4YJgNP25zukcxpX2/SueNrA==}
    cpu: [arm64]
    os: [linux]

  '@img/sharp-libvips-linux-arm@1.0.5':
    resolution: {integrity: sha512-gvcC4ACAOPRNATg/ov8/MnbxFDJqf/pDePbBnuBDcjsI8PssmjoKMAz4LtLaVi+OnSb5FK/yIOamqDwGmXW32g==}
    cpu: [arm]
    os: [linux]

  '@img/sharp-libvips-linux-s390x@1.0.4':
    resolution: {integrity: sha512-u7Wz6ntiSSgGSGcjZ55im6uvTrOxSIS8/dgoVMoiGE9I6JAfU50yH5BoDlYA1tcuGS7g/QNtetJnxA6QEsCVTA==}
    cpu: [s390x]
    os: [linux]

  '@img/sharp-libvips-linux-x64@1.0.4':
    resolution: {integrity: sha512-MmWmQ3iPFZr0Iev+BAgVMb3ZyC4KeFc3jFxnNbEPas60e1cIfevbtuyf9nDGIzOaW9PdnDciJm+wFFaTlj5xYw==}
    cpu: [x64]
    os: [linux]

  '@img/sharp-libvips-linuxmusl-arm64@1.0.4':
    resolution: {integrity: sha512-9Ti+BbTYDcsbp4wfYib8Ctm1ilkugkA/uscUn6UXK1ldpC1JjiXbLfFZtRlBhjPZ5o1NCLiDbg8fhUPKStHoTA==}
    cpu: [arm64]
    os: [linux]

  '@img/sharp-libvips-linuxmusl-x64@1.0.4':
    resolution: {integrity: sha512-viYN1KX9m+/hGkJtvYYp+CCLgnJXwiQB39damAO7WMdKWlIhmYTfHjwSbQeUK/20vY154mwezd9HflVFM1wVSw==}
    cpu: [x64]
    os: [linux]

  '@img/sharp-linux-arm64@0.33.5':
    resolution: {integrity: sha512-JMVv+AMRyGOHtO1RFBiJy/MBsgz0x4AWrT6QoEVVTyh1E39TrCUpTRI7mx9VksGX4awWASxqCYLCV4wBZHAYxA==}
    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
    cpu: [arm64]
    os: [linux]

  '@img/sharp-linux-arm@0.33.5':
    resolution: {integrity: sha512-JTS1eldqZbJxjvKaAkxhZmBqPRGmxgu+qFKSInv8moZ2AmT5Yib3EQ1c6gp493HvrvV8QgdOXdyaIBrhvFhBMQ==}
    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
    cpu: [arm]
    os: [linux]

  '@img/sharp-linux-s390x@0.33.5':
    resolution: {integrity: sha512-y/5PCd+mP4CA/sPDKl2961b+C9d+vPAveS33s6Z3zfASk2j5upL6fXVPZi7ztePZ5CuH+1kW8JtvxgbuXHRa4Q==}
    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
    cpu: [s390x]
    os: [linux]

  '@img/sharp-linux-x64@0.33.5':
    resolution: {integrity: sha512-opC+Ok5pRNAzuvq1AG0ar+1owsu842/Ab+4qvU879ippJBHvyY5n2mxF1izXqkPYlGuP/M556uh53jRLJmzTWA==}
    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
    cpu: [x64]
    os: [linux]

  '@img/sharp-linuxmusl-arm64@0.33.5':
    resolution: {integrity: sha512-XrHMZwGQGvJg2V/oRSUfSAfjfPxO+4DkiRh6p2AFjLQztWUuY/o8Mq0eMQVIY7HJ1CDQUJlxGGZRw1a5bqmd1g==}
    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
    cpu: [arm64]
    os: [linux]

  '@img/sharp-linuxmusl-x64@0.33.5':
    resolution: {integrity: sha512-WT+d/cgqKkkKySYmqoZ8y3pxx7lx9vVejxW/W4DOFMYVSkErR+w7mf2u8m/y4+xHe7yY9DAXQMWQhpnMuFfScw==}
    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
    cpu: [x64]
    os: [linux]

  '@img/sharp-wasm32@0.33.5':
    resolution: {integrity: sha512-ykUW4LVGaMcU9lu9thv85CbRMAwfeadCJHRsg2GmeRa/cJxsVY9Rbd57JcMxBkKHag5U/x7TSBpScF4U8ElVzg==}
    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
    cpu: [wasm32]

  '@img/sharp-win32-ia32@0.33.5':
    resolution: {integrity: sha512-T36PblLaTwuVJ/zw/LaH0PdZkRz5rd3SmMHX8GSmR7vtNSP5Z6bQkExdSK7xGWyxLw4sUknBuugTelgw2faBbQ==}
    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
    cpu: [ia32]
    os: [win32]

  '@img/sharp-win32-x64@0.33.5':
    resolution: {integrity: sha512-MpY/o8/8kj+EcnxwvrP4aTJSWw/aZ7JIGR4aBeZkZw5B7/Jn+tY9/VNwtcoGmdT7GfggGIU4kygOMSbYnOrAbg==}
    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}
    cpu: [x64]
    os: [win32]

  '@isaacs/cliui@8.0.2':
    resolution: {integrity: sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==}
    engines: {node: '>=12'}

  '@isaacs/ttlcache@1.4.1':
    resolution: {integrity: sha512-RQgQ4uQ+pLbqXfOmieB91ejmLwvSgv9nLx6sT6sD83s7umBypgg+OIBOBbEUiJXrfpnp9j0mRhYYdzp9uqq3lA==}
    engines: {node: '>=12'}

  '@istanbuljs/load-nyc-config@1.1.0':
    resolution: {integrity: sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==}
    engines: {node: '>=8'}

  '@istanbuljs/schema@0.1.3':
    resolution: {integrity: sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==}
    engines: {node: '>=8'}

  '@jest/create-cache-key-function@29.7.0':
    resolution: {integrity: sha512-4QqS3LY5PBmTRHj9sAg1HLoPzqAI0uOX6wI/TRqHIcOxlFidy6YEmCQJk6FSZjNLGCeubDMfmkWL+qaLKhSGQA==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  '@jest/environment@29.7.0':
    resolution: {integrity: sha512-aQIfHDq33ExsN4jP1NWGXhxgQ/wixs60gDiKO+XVMd8Mn0NWPWgc34ZQDTb2jKaUWQ7MuwoitXAsN2XVXNMpAw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  '@jest/fake-timers@29.7.0':
    resolution: {integrity: sha512-q4DH1Ha4TTFPdxLsqDXK1d3+ioSL7yL5oCMJZgDYm6i+6CygW5E5xVr/D1HdsGxjt1ZWSfUAs9OxSB/BNelWrQ==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  '@jest/schemas@29.6.3':
    resolution: {integrity: sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  '@jest/transform@29.7.0':
    resolution: {integrity: sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  '@jest/types@29.6.3':
    resolution: {integrity: sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  '@jridgewell/gen-mapping@0.3.8':
    resolution: {integrity: sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==}
    engines: {node: '>=6.0.0'}

  '@jridgewell/resolve-uri@3.1.2':
    resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}
    engines: {node: '>=6.0.0'}

  '@jridgewell/set-array@1.2.1':
    resolution: {integrity: sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==}
    engines: {node: '>=6.0.0'}

  '@jridgewell/source-map@0.3.6':
    resolution: {integrity: sha512-1ZJTZebgqllO79ue2bm3rIGud/bOe0pP5BjSRCRxxYkEZS8STV7zN84UBbiYu7jy+eCKSnVIUgoWWE/tt+shMQ==}

  '@jridgewell/sourcemap-codec@1.5.0':
    resolution: {integrity: sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==}

  '@jridgewell/trace-mapping@0.3.25':
    resolution: {integrity: sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==}

  '@monaco-editor/loader@1.5.0':
    resolution: {integrity: sha512-hKoGSM+7aAc7eRTRjpqAZucPmoNOC4UUbknb/VNoTkEIkCPhqV8LfbsgM1webRM7S/z21eHEx9Fkwx8Z/C/+Xw==}

  '@monaco-editor/react@4.7.0':
    resolution: {integrity: sha512-cyzXQCtO47ydzxpQtCGSQGOC8Gk3ZUeBXFAxD+CWXYFo5OqZyZUonFl0DwUlTyAfRHntBfw2p3w4s9R6oe1eCA==}
    peerDependencies:
      monaco-editor: '>= 0.25.0 < 1'
      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
      react-dom: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0

  '@mui/core-downloads-tracker@7.1.0':
    resolution: {integrity: sha512-E0OqhZv548Qdc0PwWhLVA2zmjJZSTvaL4ZhoswmI8NJEC1tpW2js6LLP827jrW9MEiXYdz3QS6+hask83w74yQ==}

  '@mui/material@7.1.0':
    resolution: {integrity: sha512-ahUJdrhEv+mCp4XHW+tHIEYzZMSRLg8z4AjUOsj44QpD1ZaMxQoVOG2xiHvLFdcsIPbgSRx1bg1eQSheHBgvtg==}
    engines: {node: '>=14.0.0'}
    peerDependencies:
      '@emotion/react': ^11.5.0
      '@emotion/styled': ^11.3.0
      '@mui/material-pigment-css': ^7.1.0
      '@types/react': ^17.0.0 || ^18.0.0 || ^19.0.0
      react: ^17.0.0 || ^18.0.0 || ^19.0.0
      react-dom: ^17.0.0 || ^18.0.0 || ^19.0.0
    peerDependenciesMeta:
      '@emotion/react':
        optional: true
      '@emotion/styled':
        optional: true
      '@mui/material-pigment-css':
        optional: true
      '@types/react':
        optional: true

  '@mui/private-theming@7.1.0':
    resolution: {integrity: sha512-4Kck4jxhqF6YxNwJdSae1WgDfXVg0lIH6JVJ7gtuFfuKcQCgomJxPvUEOySTFRPz1IZzwz5OAcToskRdffElDA==}
    engines: {node: '>=14.0.0'}
    peerDependencies:
      '@types/react': ^17.0.0 || ^18.0.0 || ^19.0.0
      react: ^17.0.0 || ^18.0.0 || ^19.0.0
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@mui/styled-engine@7.1.0':
    resolution: {integrity: sha512-m0mJ0c6iRC+f9hMeRe0W7zZX1wme3oUX0+XTVHjPG7DJz6OdQ6K/ggEOq7ZdwilcpdsDUwwMfOmvO71qDkYd2w==}
    engines: {node: '>=14.0.0'}
    peerDependencies:
      '@emotion/react': ^11.4.1
      '@emotion/styled': ^11.3.0
      react: ^17.0.0 || ^18.0.0 || ^19.0.0
    peerDependenciesMeta:
      '@emotion/react':
        optional: true
      '@emotion/styled':
        optional: true

  '@mui/system@7.1.0':
    resolution: {integrity: sha512-iedAWgRJMCxeMHvkEhsDlbvkK+qKf9me6ofsf7twk/jfT4P1ImVf7Rwb5VubEA0sikrVL+1SkoZM41M4+LNAVA==}
    engines: {node: '>=14.0.0'}
    peerDependencies:
      '@emotion/react': ^11.5.0
      '@emotion/styled': ^11.3.0
      '@types/react': ^17.0.0 || ^18.0.0 || ^19.0.0
      react: ^17.0.0 || ^18.0.0 || ^19.0.0
    peerDependenciesMeta:
      '@emotion/react':
        optional: true
      '@emotion/styled':
        optional: true
      '@types/react':
        optional: true

  '@mui/types@7.4.2':
    resolution: {integrity: sha512-edRc5JcLPsrlNFYyTPxds+d5oUovuUxnnDtpJUbP6WMeV4+6eaX/mqai1ZIWT62lCOe0nlrON0s9HDiv5en5bA==}
    peerDependencies:
      '@types/react': ^17.0.0 || ^18.0.0 || ^19.0.0
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@mui/utils@7.1.0':
    resolution: {integrity: sha512-/OM3S8kSHHmWNOP+NH9xEtpYSG10upXeQ0wLZnfDgmgadTAk5F4MQfFLyZ5FCRJENB3eRzltMmaNl6UtDnPovw==}
    engines: {node: '>=14.0.0'}
    peerDependencies:
      '@types/react': ^17.0.0 || ^18.0.0 || ^19.0.0
      react: ^17.0.0 || ^18.0.0 || ^19.0.0
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@next/env@15.2.4':
    resolution: {integrity: sha512-+SFtMgoiYP3WoSswuNmxJOCwi06TdWE733D+WPjpXIe4LXGULwEaofiiAy6kbS0+XjM5xF5n3lKuBwN2SnqD9g==}

  '@next/swc-darwin-arm64@15.2.4':
    resolution: {integrity: sha512-1AnMfs655ipJEDC/FHkSr0r3lXBgpqKo4K1kiwfUf3iE68rDFXZ1TtHdMvf7D0hMItgDZ7Vuq3JgNMbt/+3bYw==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [darwin]

  '@next/swc-darwin-x64@15.2.4':
    resolution: {integrity: sha512-3qK2zb5EwCwxnO2HeO+TRqCubeI/NgCe+kL5dTJlPldV/uwCnUgC7VbEzgmxbfrkbjehL4H9BPztWOEtsoMwew==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [darwin]

  '@next/swc-linux-arm64-gnu@15.2.4':
    resolution: {integrity: sha512-HFN6GKUcrTWvem8AZN7tT95zPb0GUGv9v0d0iyuTb303vbXkkbHDp/DxufB04jNVD+IN9yHy7y/6Mqq0h0YVaQ==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [linux]

  '@next/swc-linux-arm64-musl@15.2.4':
    resolution: {integrity: sha512-Oioa0SORWLwi35/kVB8aCk5Uq+5/ZIumMK1kJV+jSdazFm2NzPDztsefzdmzzpx5oGCJ6FkUC7vkaUseNTStNA==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [linux]

  '@next/swc-linux-x64-gnu@15.2.4':
    resolution: {integrity: sha512-yb5WTRaHdkgOqFOZiu6rHV1fAEK0flVpaIN2HB6kxHVSy/dIajWbThS7qON3W9/SNOH2JWkVCyulgGYekMePuw==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [linux]

  '@next/swc-linux-x64-musl@15.2.4':
    resolution: {integrity: sha512-Dcdv/ix6srhkM25fgXiyOieFUkz+fOYkHlydWCtB0xMST6X9XYI3yPDKBZt1xuhOytONsIFJFB08xXYsxUwJLw==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [linux]

  '@next/swc-win32-arm64-msvc@15.2.4':
    resolution: {integrity: sha512-dW0i7eukvDxtIhCYkMrZNQfNicPDExt2jPb9AZPpL7cfyUo7QSNl1DjsHjmmKp6qNAqUESyT8YFl/Aw91cNJJg==}
    engines: {node: '>= 10'}
    cpu: [arm64]
    os: [win32]

  '@next/swc-win32-x64-msvc@15.2.4':
    resolution: {integrity: sha512-SbnWkJmkS7Xl3kre8SdMF6F/XDh1DTFEhp0jRTj/uB8iPKoU2bb2NDfcu+iifv1+mxQEd1g2vvSxcZbXSKyWiQ==}
    engines: {node: '>= 10'}
    cpu: [x64]
    os: [win32]

  '@nodelib/fs.scandir@2.1.5':
    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}
    engines: {node: '>= 8'}

  '@nodelib/fs.stat@2.0.5':
    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}
    engines: {node: '>= 8'}

  '@nodelib/fs.walk@1.2.8':
    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}
    engines: {node: '>= 8'}

  '@pkgjs/parseargs@0.11.0':
    resolution: {integrity: sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==}
    engines: {node: '>=14'}

  '@popperjs/core@2.11.8':
    resolution: {integrity: sha512-P1st0aksCrn9sGZhp8GMYwBnQsbvAWsZAX44oXNNvLHGqAOcoVxmjZiohstwQ7SqKnbR47akdNi+uleWD8+g6A==}

  '@radix-ui/number@1.1.1':
    resolution: {integrity: sha512-MkKCwxlXTgz6CFoJx3pCwn07GKp36+aZyu/u2Ln2VrA5DcdyCZkASEDBTd8x5whTQQL5CiYf4prXKLcgQdv29g==}

  '@radix-ui/primitive@1.1.2':
    resolution: {integrity: sha512-XnbHrrprsNqZKQhStrSwgRUQzoCI1glLzdw79xiZPoofhGICeZRSQ3dIxAKH1gb3OHfNf4d6f+vAv3kil2eggA==}

  '@radix-ui/react-accordion@1.2.11':
    resolution: {integrity: sha512-l3W5D54emV2ues7jjeG1xcyN7S3jnK3zE2zHqgn0CmMsy9lNJwmgcrmaxS+7ipw15FAivzKNzH3d5EcGoFKw0A==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-alert-dialog@1.1.14':
    resolution: {integrity: sha512-IOZfZ3nPvN6lXpJTBCunFQPRSvK8MDgSc1FB85xnIpUKOw9en0dJj8JmCAxV7BiZdtYlUpmrQjoTFkVYtdoWzQ==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-arrow@1.1.7':
    resolution: {integrity: sha512-F+M1tLhO+mlQaOWspE8Wstg+z6PwxwRd8oQ8IXceWz92kfAmalTRf0EjrouQeo7QssEPfCn05B4Ihs1K9WQ/7w==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-aspect-ratio@1.1.7':
    resolution: {integrity: sha512-Yq6lvO9HQyPwev1onK1daHCHqXVLzPhSVjmsNjCa2Zcxy2f7uJD2itDtxknv6FzAKCwD1qQkeVDmX/cev13n/g==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-avatar@1.1.10':
    resolution: {integrity: sha512-V8piFfWapM5OmNCXTzVQY+E1rDa53zY+MQ4Y7356v4fFz6vqCyUtIz2rUD44ZEdwg78/jKmMJHj07+C/Z/rcog==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-checkbox@1.3.2':
    resolution: {integrity: sha512-yd+dI56KZqawxKZrJ31eENUwqc1QSqg4OZ15rybGjF2ZNwMO+wCyHzAVLRp9qoYJf7kYy0YpZ2b0JCzJ42HZpA==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-collapsible@1.1.11':
    resolution: {integrity: sha512-2qrRsVGSCYasSz1RFOorXwl0H7g7J1frQtgpQgYrt+MOidtPAINHn9CPovQXb83r8ahapdx3Tu0fa/pdFFSdPg==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-collection@1.1.7':
    resolution: {integrity: sha512-Fh9rGN0MoI4ZFUNyfFVNU4y9LUz93u9/0K+yLgA2bwRojxM8JU1DyvvMBabnZPBgMWREAJvU2jjVzq+LrFUglw==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-compose-refs@1.1.2':
    resolution: {integrity: sha512-z4eqJvfiNnFMHIIvXP3CY57y2WJs5g2v3X0zm9mEJkrkNv4rDxu+sg9Jh8EkXyeqBkB7SOcboo9dMVqhyrACIg==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@radix-ui/react-context-menu@2.2.15':
    resolution: {integrity: sha512-UsQUMjcYTsBjTSXw0P3GO0werEQvUY2plgRQuKoCTtkNr45q1DiL51j4m7gxhABzZ0BadoXNsIbg7F3KwiUBbw==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-context@1.1.2':
    resolution: {integrity: sha512-jCi/QKUM2r1Ju5a3J64TH2A5SpKAgh0LpknyqdQ4m6DCV0xJ2HG1xARRwNGPQfi1SLdLWZ1OJz6F4OMBBNiGJA==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@radix-ui/react-dialog@1.1.14':
    resolution: {integrity: sha512-+CpweKjqpzTmwRwcYECQcNYbI8V9VSQt0SNFKeEBLgfucbsLssU6Ppq7wUdNXEGb573bMjFhVjKVll8rmV6zMw==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-direction@1.1.1':
    resolution: {integrity: sha512-1UEWRX6jnOA2y4H5WczZ44gOOjTEmlqv1uNW4GAJEO5+bauCBhv8snY65Iw5/VOS/ghKN9gr2KjnLKxrsvoMVw==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@radix-ui/react-dismissable-layer@1.1.10':
    resolution: {integrity: sha512-IM1zzRV4W3HtVgftdQiiOmA0AdJlCtMLe00FXaHwgt3rAnNsIyDqshvkIW3hj/iu5hu8ERP7KIYki6NkqDxAwQ==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-dropdown-menu@2.1.15':
    resolution: {integrity: sha512-mIBnOjgwo9AH3FyKaSWoSu/dYj6VdhJ7frEPiGTeXCdUFHjl9h3mFh2wwhEtINOmYXWhdpf1rY2minFsmaNgVQ==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-focus-guards@1.1.2':
    resolution: {integrity: sha512-fyjAACV62oPV925xFCrH8DR5xWhg9KYtJT4s3u54jxp+L/hbpTY2kIeEFFbFe+a/HCE94zGQMZLIpVTPVZDhaA==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@radix-ui/react-focus-scope@1.1.7':
    resolution: {integrity: sha512-t2ODlkXBQyn7jkl6TNaw/MtVEVvIGelJDCG41Okq/KwUsJBwQ4XVZsHAVUkK4mBv3ewiAS3PGuUWuY2BoK4ZUw==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-hover-card@1.1.14':
    resolution: {integrity: sha512-CPYZ24Mhirm+g6D8jArmLzjYu4Eyg3TTUHswR26QgzXBHBe64BO/RHOJKzmF/Dxb4y4f9PKyJdwm/O/AhNkb+Q==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-id@1.1.1':
    resolution: {integrity: sha512-kGkGegYIdQsOb4XjsfM97rXsiHaBwco+hFI66oO4s9LU+PLAC5oJ7khdOVFxkhsmlbpUqDAvXw11CluXP+jkHg==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@radix-ui/react-label@2.1.7':
    resolution: {integrity: sha512-YT1GqPSL8kJn20djelMX7/cTRp/Y9w5IZHvfxQTVHrOqa2yMl7i/UfMqKRU5V7mEyKTrUVgJXhNQPVCG8PBLoQ==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-menu@2.1.15':
    resolution: {integrity: sha512-tVlmA3Vb9n8SZSd+YSbuFR66l87Wiy4du+YE+0hzKQEANA+7cWKH1WgqcEX4pXqxUFQKrWQGHdvEfw00TjFiew==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-menubar@1.1.15':
    resolution: {integrity: sha512-Z71C7LGD+YDYo3TV81paUs8f3Zbmkvg6VLRQpKYfzioOE6n7fOhA3ApK/V/2Odolxjoc4ENk8AYCjohCNayd5A==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-navigation-menu@1.2.13':
    resolution: {integrity: sha512-WG8wWfDiJlSF5hELjwfjSGOXcBR/ZMhBFCGYe8vERpC39CQYZeq1PQ2kaYHdye3V95d06H89KGMsVCIE4LWo3g==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-popover@1.1.14':
    resolution: {integrity: sha512-ODz16+1iIbGUfFEfKx2HTPKizg2MN39uIOV8MXeHnmdd3i/N9Wt7vU46wbHsqA0xoaQyXVcs0KIlBdOA2Y95bw==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-popper@1.2.7':
    resolution: {integrity: sha512-IUFAccz1JyKcf/RjB552PlWwxjeCJB8/4KxT7EhBHOJM+mN7LdW+B3kacJXILm32xawcMMjb2i0cIZpo+f9kiQ==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-portal@1.1.9':
    resolution: {integrity: sha512-bpIxvq03if6UNwXZ+HTK71JLh4APvnXntDc6XOX8UVq4XQOVl7lwok0AvIl+b8zgCw3fSaVTZMpAPPagXbKmHQ==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-presence@1.1.4':
    resolution: {integrity: sha512-ueDqRbdc4/bkaQT3GIpLQssRlFgWaL/U2z/S31qRwwLWoxHLgry3SIfCwhxeQNbirEUXFa+lq3RL3oBYXtcmIA==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-primitive@2.1.3':
    resolution: {integrity: sha512-m9gTwRkhy2lvCPe6QJp4d3G1TYEUHn/FzJUtq9MjH46an1wJU+GdoGC5VLof8RX8Ft/DlpshApkhswDLZzHIcQ==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-progress@1.1.7':
    resolution: {integrity: sha512-vPdg/tF6YC/ynuBIJlk1mm7Le0VgW6ub6J2UWnTQ7/D23KXcPI1qy+0vBkgKgd38RCMJavBXpB83HPNFMTb0Fg==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-radio-group@1.3.7':
    resolution: {integrity: sha512-9w5XhD0KPOrm92OTTE0SysH3sYzHsSTHNvZgUBo/VZ80VdYyB5RneDbc0dKpURS24IxkoFRu/hI0i4XyfFwY6g==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-roving-focus@1.1.10':
    resolution: {integrity: sha512-dT9aOXUen9JSsxnMPv/0VqySQf5eDQ6LCk5Sw28kamz8wSOW2bJdlX2Bg5VUIIcV+6XlHpWTIuTPCf/UNIyq8Q==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-scroll-area@1.2.9':
    resolution: {integrity: sha512-YSjEfBXnhUELsO2VzjdtYYD4CfQjvao+lhhrX5XsHD7/cyUNzljF1FHEbgTPN7LH2MClfwRMIsYlqTYpKTTe2A==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-select@2.2.5':
    resolution: {integrity: sha512-HnMTdXEVuuyzx63ME0ut4+sEMYW6oouHWNGUZc7ddvUWIcfCva/AMoqEW/3wnEllriMWBa0RHspCYnfCWJQYmA==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-separator@1.1.7':
    resolution: {integrity: sha512-0HEb8R9E8A+jZjvmFCy/J4xhbXy3TV+9XSnGJ3KvTtjlIUy/YQ/p6UYZvi7YbeoeXdyU9+Y3scizK6hkY37baA==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-slider@1.3.5':
    resolution: {integrity: sha512-rkfe2pU2NBAYfGaxa3Mqosi7VZEWX5CxKaanRv0vZd4Zhl9fvQrg0VM93dv3xGLGfrHuoTRF3JXH8nb9g+B3fw==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-slot@1.2.3':
    resolution: {integrity: sha512-aeNmHnBxbi2St0au6VBVC7JXFlhLlOnvIIlePNniyUNAClzmtAUEY8/pBiK3iHjufOlwA+c20/8jngo7xcrg8A==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@radix-ui/react-switch@1.2.5':
    resolution: {integrity: sha512-5ijLkak6ZMylXsaImpZ8u4Rlf5grRmoc0p0QeX9VJtlrM4f5m3nCTX8tWga/zOA8PZYIR/t0p2Mnvd7InrJ6yQ==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-tabs@1.1.12':
    resolution: {integrity: sha512-GTVAlRVrQrSw3cEARM0nAx73ixrWDPNZAruETn3oHCNP6SbZ/hNxdxp+u7VkIEv3/sFoLq1PfcHrl7Pnp0CDpw==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-toast@1.2.14':
    resolution: {integrity: sha512-nAP5FBxBJGQ/YfUB+r+O6USFVkWq3gAInkxyEnmvEV5jtSbfDhfa4hwX8CraCnbjMLsE7XSf/K75l9xXY7joWg==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-toggle-group@1.1.10':
    resolution: {integrity: sha512-kiU694Km3WFLTC75DdqgM/3Jauf3rD9wxeS9XtyWFKsBUeZA337lC+6uUazT7I1DhanZ5gyD5Stf8uf2dbQxOQ==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-toggle@1.1.9':
    resolution: {integrity: sha512-ZoFkBBz9zv9GWer7wIjvdRxmh2wyc2oKWw6C6CseWd6/yq1DK/l5lJ+wnsmFwJZbBYqr02mrf8A2q/CVCuM3ZA==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-tooltip@1.2.7':
    resolution: {integrity: sha512-Ap+fNYwKTYJ9pzqW+Xe2HtMRbQ/EeWkj2qykZ6SuEV4iS/o1bZI5ssJbk4D2r8XuDuOBVz/tIx2JObtuqU+5Zw==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/react-use-callback-ref@1.1.1':
    resolution: {integrity: sha512-FkBMwD+qbGQeMu1cOHnuGB6x4yzPjho8ap5WtbEJ26umhgqVXbhekKUQO+hZEL1vU92a3wHwdp0HAcqAUF5iDg==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@radix-ui/react-use-controllable-state@1.2.2':
    resolution: {integrity: sha512-BjasUjixPFdS+NKkypcyyN5Pmg83Olst0+c6vGov0diwTEo6mgdqVR6hxcEgFuh4QrAs7Rc+9KuGJ9TVCj0Zzg==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@radix-ui/react-use-effect-event@0.0.2':
    resolution: {integrity: sha512-Qp8WbZOBe+blgpuUT+lw2xheLP8q0oatc9UpmiemEICxGvFLYmHm9QowVZGHtJlGbS6A6yJ3iViad/2cVjnOiA==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@radix-ui/react-use-escape-keydown@1.1.1':
    resolution: {integrity: sha512-Il0+boE7w/XebUHyBjroE+DbByORGR9KKmITzbR7MyQ4akpORYP/ZmbhAr0DG7RmmBqoOnZdy2QlvajJ2QA59g==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@radix-ui/react-use-is-hydrated@0.1.0':
    resolution: {integrity: sha512-U+UORVEq+cTnRIaostJv9AGdV3G6Y+zbVd+12e18jQ5A3c0xL03IhnHuiU4UV69wolOQp5GfR58NW/EgdQhwOA==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@radix-ui/react-use-layout-effect@1.1.1':
    resolution: {integrity: sha512-RbJRS4UWQFkzHTTwVymMTUv8EqYhOp8dOOviLj2ugtTiXRaRQS7GLGxZTLL1jWhMeoSCf5zmcZkqTl9IiYfXcQ==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@radix-ui/react-use-previous@1.1.1':
    resolution: {integrity: sha512-2dHfToCj/pzca2Ck724OZ5L0EVrr3eHRNsG/b3xQJLA2hZpVCS99bLAX+hm1IHXDEnzU6by5z/5MIY794/a8NQ==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@radix-ui/react-use-rect@1.1.1':
    resolution: {integrity: sha512-QTYuDesS0VtuHNNvMh+CjlKJ4LJickCMUAqjlE3+j8w+RlRpwyX3apEQKGFzbZGdo7XNG1tXa+bQqIE7HIXT2w==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@radix-ui/react-use-size@1.1.1':
    resolution: {integrity: sha512-ewrXRDTAqAXlkl6t/fkXWNAhFX9I+CkKlw6zjEwk86RSPKwZr3xpBRso655aqYafwtnbpHLj6toFzmd6xdVptQ==}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@radix-ui/react-visually-hidden@1.2.3':
    resolution: {integrity: sha512-pzJq12tEaaIhqjbzpCuv/OypJY/BPavOofm+dbab+MHLajy277+1lLm6JFcGgF5eskJ6mquGirhXY2GD/8u8Ug==}
    peerDependencies:
      '@types/react': '*'
      '@types/react-dom': '*'
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true
      '@types/react-dom':
        optional: true

  '@radix-ui/rect@1.1.1':
    resolution: {integrity: sha512-HPwpGIzkl28mWyZqG52jiqDJ12waP11Pa1lGoiyUkIEuMLBP0oeK/C89esbXrxsky5we7dfd8U58nm0SgAWpVw==}

  '@react-native/assets-registry@0.79.2':
    resolution: {integrity: sha512-5h2Z7/+/HL/0h88s0JHOdRCW4CXMCJoROxqzHqxdrjGL6EBD1DdaB4ZqkCOEVSW4Vjhir5Qb97C8i/MPWEYPtg==}
    engines: {node: '>=18'}

  '@react-native/codegen@0.79.2':
    resolution: {integrity: sha512-8JTlGLuLi1p8Jx2N/enwwEd7/2CfrqJpv90Cp77QLRX3VHF2hdyavRIxAmXMwN95k+Me7CUuPtqn2X3IBXOWYg==}
    engines: {node: '>=18'}
    peerDependencies:
      '@babel/core': '*'

  '@react-native/community-cli-plugin@0.79.2':
    resolution: {integrity: sha512-E+YEY2dL+68HyR2iahsZdyBKBUi9QyPyaN9vsnda1jNgCjNpSPk2yAF5cXsho+zKK5ZQna3JSeE1Kbi2IfGJbw==}
    engines: {node: '>=18'}
    peerDependencies:
      '@react-native-community/cli': '*'
    peerDependenciesMeta:
      '@react-native-community/cli':
        optional: true

  '@react-native/debugger-frontend@0.79.2':
    resolution: {integrity: sha512-cGmC7X6kju76DopSBNc+PRAEetbd7TWF9J9o84hOp/xL3ahxR2kuxJy0oJX8Eg8oehhGGEXTuMKHzNa3rDBeSg==}
    engines: {node: '>=18'}

  '@react-native/dev-middleware@0.79.2':
    resolution: {integrity: sha512-9q4CpkklsAs1L0Bw8XYCoqqyBSrfRALGEw4/r0EkR38Y/6fVfNfdsjSns0pTLO6h0VpxswK34L/hm4uK3MoLHw==}
    engines: {node: '>=18'}

  '@react-native/gradle-plugin@0.79.2':
    resolution: {integrity: sha512-6MJFemrwR0bOT0QM+2BxX9k3/pvZQNmJ3Js5pF/6owsA0cUDiCO57otiEU8Fz+UywWEzn1FoQfOfQ8vt2GYmoA==}
    engines: {node: '>=18'}

  '@react-native/js-polyfills@0.79.2':
    resolution: {integrity: sha512-IaY87Ckd4GTPMkO1/Fe8fC1IgIx3vc3q9Tyt/6qS3Mtk9nC0x9q4kSR5t+HHq0/MuvGtu8HpdxXGy5wLaM+zUw==}
    engines: {node: '>=18'}

  '@react-native/normalize-colors@0.79.2':
    resolution: {integrity: sha512-+b+GNrupWrWw1okHnEENz63j7NSMqhKeFMOyzYLBwKcprG8fqJQhDIGXfizKdxeIa5NnGSAevKL1Ev1zJ56X8w==}

  '@react-native/virtualized-lists@0.79.2':
    resolution: {integrity: sha512-9G6ROJeP+rdw9Bvr5ruOlag11ET7j1z/En1riFFNo6W3xZvJY+alCuH1ttm12y9+zBm4n8jwCk4lGhjYaV4dKw==}
    engines: {node: '>=18'}
    peerDependencies:
      '@types/react': ^19.0.0
      react: '*'
      react-native: '*'
    peerDependenciesMeta:
      '@types/react':
        optional: true

  '@react-spring/animated@9.7.5':
    resolution: {integrity: sha512-Tqrwz7pIlsSDITzxoLS3n/v/YCUHQdOIKtOJf4yL6kYVSDTSmVK1LI1Q3M/uu2Sx4X3pIWF3xLUhlsA6SPNTNg==}
    peerDependencies:
      react: ^16.8.0 || ^17.0.0 || ^18.0.0

  '@react-spring/core@9.7.5':
    resolution: {integrity: sha512-rmEqcxRcu7dWh7MnCcMXLvrf6/SDlSokLaLTxiPlAYi11nN3B5oiCUAblO72o+9z/87j2uzxa2Inm8UbLjXA+w==}
    peerDependencies:
      react: ^16.8.0 || ^17.0.0 || ^18.0.0

  '@react-spring/konva@9.7.5':
    resolution: {integrity: sha512-BelrmyY6w0FGoNSEfSJltjQDUoW0Prxf+FzGjyLuLs+V9M9OM/aHnYqOlvQEfQsZx6C/ZiDOn5BZl8iH8SDf+Q==}
    peerDependencies:
      konva: '>=2.6'
      react: ^16.8.0 || ^17.0.0 || ^18.0.0
      react-konva: ^16.8.0 || ^16.8.7-0 || ^16.9.0-0 || ^16.10.1-0 || ^16.12.0-0 || ^16.13.0-0 || ^17.0.0-0 || ^17.0.1-0 || ^17.0.2-0 || ^18.0.0-0

  '@react-spring/native@9.7.5':
    resolution: {integrity: sha512-C1S500BNP1I05MftElyLv2nIqaWQ0MAByOAK/p4vuXcUK3XcjFaAJ385gVLgV2rgKfvkqRoz97PSwbh+ZCETEg==}
    peerDependencies:
      react: 16.8.0  || >=17.0.0 || >=18.0.0
      react-native: '>=0.58'

  '@react-spring/rafz@9.7.5':
    resolution: {integrity: sha512-5ZenDQMC48wjUzPAm1EtwQ5Ot3bLIAwwqP2w2owG5KoNdNHpEJV263nGhCeKKmuA3vG2zLLOdu3or6kuDjA6Aw==}

  '@react-spring/shared@9.7.5':
    resolution: {integrity: sha512-wdtoJrhUeeyD/PP/zo+np2s1Z820Ohr/BbuVYv+3dVLW7WctoiN7std8rISoYoHpUXtbkpesSKuPIw/6U1w1Pw==}
    peerDependencies:
      react: ^16.8.0 || ^17.0.0 || ^18.0.0

  '@react-spring/three@9.7.5':
    resolution: {integrity: sha512-RxIsCoQfUqOS3POmhVHa1wdWS0wyHAUway73uRLp3GAL5U2iYVNdnzQsep6M2NZ994BlW8TcKuMtQHUqOsy6WA==}
    peerDependencies:
      '@react-three/fiber': '>=6.0'
      react: ^16.8.0 || ^17.0.0 || ^18.0.0
      three: '>=0.126'

  '@react-spring/types@9.7.5':
    resolution: {integrity: sha512-HVj7LrZ4ReHWBimBvu2SKND3cDVUPWKLqRTmWe/fNY6o1owGOX0cAHbdPDTMelgBlVbrTKrre6lFkhqGZErK/g==}

  '@react-spring/web@9.7.5':
    resolution: {integrity: sha512-lmvqGwpe+CSttsWNZVr+Dg62adtKhauGwLyGE/RRyZ8AAMLgb9x3NDMA5RMElXo+IMyTkPp7nxTB8ZQlmhb6JQ==}
    peerDependencies:
      react: ^16.8.0 || ^17.0.0 || ^18.0.0
      react-dom: ^16.8.0 || ^17.0.0 || ^18.0.0

  '@react-spring/zdog@9.7.5':
    resolution: {integrity: sha512-VV7vmb52wGHgDA1ry6hv+QgxTs78fqjKEQnj+M8hiBg+dwOsTtqqM24ADtc4cMAhPW+eZhVps8ZNKtjt8ouHFA==}
    peerDependencies:
      react: ^16.8.0 || ^17.0.0 || ^18.0.0
      react-dom: ^16.8.0 || ^17.0.0 || ^18.0.0
      react-zdog: '>=1.0'
      zdog: '>=1.0'

  '@react-three/fiber@9.1.2':
    resolution: {integrity: sha512-k8FR9yVHV9kIF3iuOD0ds5hVymXYXfgdKklqziBVod9ZEJ8uk05Zjw29J/omU3IKeUfLNAIHfxneN3TUYM4I2w==}
    peerDependencies:
      expo: '>=43.0'
      expo-asset: '>=8.4'
      expo-file-system: '>=11.0'
      expo-gl: '>=11.0'
      react: ^19.0.0
      react-dom: ^19.0.0
      react-native: '>=0.78'
      three: '>=0.156'
    peerDependenciesMeta:
      expo:
        optional: true
      expo-asset:
        optional: true
      expo-file-system:
        optional: true
      expo-gl:
        optional: true
      react-dom:
        optional: true
      react-native:
        optional: true

  '@shikijs/core@1.29.2':
    resolution: {integrity: sha512-vju0lY9r27jJfOY4Z7+Rt/nIOjzJpZ3y+nYpqtUZInVoXQ/TJZcfGnNOGnKjFdVZb8qexiCuSlZRKcGfhhTTZQ==}

  '@shikijs/engine-javascript@1.29.2':
    resolution: {integrity: sha512-iNEZv4IrLYPv64Q6k7EPpOCE/nuvGiKl7zxdq0WFuRPF5PAE9PRo2JGq/d8crLusM59BRemJ4eOqrFrC4wiQ+A==}

  '@shikijs/engine-oniguruma@1.29.2':
    resolution: {integrity: sha512-7iiOx3SG8+g1MnlzZVDYiaeHe7Ez2Kf2HrJzdmGwkRisT7r4rak0e655AcM/tF9JG/kg5fMNYlLLKglbN7gBqA==}

  '@shikijs/langs@1.29.2':
    resolution: {integrity: sha512-FIBA7N3LZ+223U7cJDUYd5shmciFQlYkFXlkKVaHsCPgfVLiO+e12FmQE6Tf9vuyEsFe3dIl8qGWKXgEHL9wmQ==}

  '@shikijs/themes@1.29.2':
    resolution: {integrity: sha512-i9TNZlsq4uoyqSbluIcZkmPL9Bfi3djVxRnofUHwvx/h6SRW3cwgBC5SML7vsDcWyukY0eCzVN980rqP6qNl9g==}

  '@shikijs/types@1.29.2':
    resolution: {integrity: sha512-VJjK0eIijTZf0QSTODEXCqinjBn0joAHQ+aPSBzrv4O2d/QSbsMw+ZeSRx03kV34Hy7NzUvV/7NqfYGRLrASmw==}

  '@shikijs/vscode-textmate@10.0.2':
    resolution: {integrity: sha512-83yeghZ2xxin3Nj8z1NMd/NCuca+gsYXswywDy5bHvwlWL8tpTQmzGeUuHd9FC3E/SBEMvzJRwWEOz5gGes9Qg==}

  '@sinclair/typebox@0.27.8':
    resolution: {integrity: sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==}

  '@sinonjs/commons@3.0.1':
    resolution: {integrity: sha512-K3mCHKQ9sVh8o1C9cxkwxaOmXoAMlDxC1mYyHrjqOWEcBjYr76t96zL2zlj5dUGZ3HSw240X1qgH3Mjf1yJWpQ==}

  '@sinonjs/fake-timers@10.3.0':
    resolution: {integrity: sha512-V4BG07kuYSUkTCSBHG8G8TNhM+F19jXFWnQtzj+we8DrkpSBCee9Z3Ms8yiGer/dlmhe35/Xdgyo3/0rQKg7YA==}

  '@swc/counter@0.1.3':
    resolution: {integrity: sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==}

  '@swc/helpers@0.5.15':
    resolution: {integrity: sha512-JQ5TuMi45Owi4/BIMAJBoSQoOJu12oOk/gADqlcUL9JEdHB8vyjUSsxqeNXnmXHjYKMi2WcYtezGEEhqUI/E2g==}

  '@tailwindcss/typography@0.5.16':
    resolution: {integrity: sha512-0wDLwCVF5V3x3b1SGXPCDcdsbDHMBe+lkFzBRaHeLvNi+nrrnZ1lA18u+OTWO8iSWU2GxUOCvlXtDuqftc1oiA==}
    peerDependencies:
      tailwindcss: '>=3.0.0 || insiders || >=4.0.0-alpha.20 || >=4.0.0-beta.1'

  '@types/babel__core@7.20.5':
    resolution: {integrity: sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==}

  '@types/babel__generator@7.27.0':
    resolution: {integrity: sha512-ufFd2Xi92OAVPYsy+P4n7/U7e68fex0+Ee8gSG9KX7eo084CWiQ4sdxktvdl0bOPupXtVJPY19zk6EwWqUQ8lg==}

  '@types/babel__template@7.4.4':
    resolution: {integrity: sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==}

  '@types/babel__traverse@7.20.7':
    resolution: {integrity: sha512-dkO5fhS7+/oos4ciWxyEyjWe48zmG6wbCheo/G2ZnHx4fs3EU6YC6UM8rk56gAjNJ9P3MTH2jo5jb92/K6wbng==}

  '@types/d3-array@3.2.1':
    resolution: {integrity: sha512-Y2Jn2idRrLzUfAKV2LyRImR+y4oa2AntrgID95SHJxuMUrkNXmanDSed71sRNZysveJVt1hLLemQZIady0FpEg==}

  '@types/d3-color@3.1.3':
    resolution: {integrity: sha512-iO90scth9WAbmgv7ogoq57O9YpKmFBbmoEoCHDB2xMBY0+/KVrqAaCDyCE16dUspeOvIxFFRI+0sEtqDqy2b4A==}

  '@types/d3-ease@3.0.2':
    resolution: {integrity: sha512-NcV1JjO5oDzoK26oMzbILE6HW7uVXOHLQvHshBUW4UMdZGfiY6v5BeQwh9a9tCzv+CeefZQHJt5SRgK154RtiA==}

  '@types/d3-interpolate@3.0.4':
    resolution: {integrity: sha512-mgLPETlrpVV1YRJIglr4Ez47g7Yxjl1lj7YKsiMCb27VJH9W8NVM6Bb9d8kkpG/uAQS5AmbA48q2IAolKKo1MA==}

  '@types/d3-path@3.1.1':
    resolution: {integrity: sha512-VMZBYyQvbGmWyWVea0EHs/BwLgxc+MKi1zLDCONksozI4YJMcTt8ZEuIR4Sb1MMTE8MMW49v0IwI5+b7RmfWlg==}

  '@types/d3-scale@4.0.9':
    resolution: {integrity: sha512-dLmtwB8zkAeO/juAMfnV+sItKjlsw2lKdZVVy6LRr0cBmegxSABiLEpGVmSJJ8O08i4+sGR6qQtb6WtuwJdvVw==}

  '@types/d3-shape@3.1.7':
    resolution: {integrity: sha512-VLvUQ33C+3J+8p+Daf+nYSOsjB4GXp19/S/aGo60m9h1v6XaxjiT82lKVWJCfzhtuZ3yD7i/TPeC/fuKLLOSmg==}

  '@types/d3-time@3.0.4':
    resolution: {integrity: sha512-yuzZug1nkAAaBlBBikKZTgzCeA+k1uy4ZFwWANOfKw5z5LRhV0gNA7gNkKm7HoK+HRN0wX3EkxGk0fpbWhmB7g==}

  '@types/d3-timer@3.0.2':
    resolution: {integrity: sha512-Ps3T8E8dZDam6fUyNiMkekK3XUsaUEik+idO9/YjPtfj2qruF8tFBXS7XhtE4iIXBLxhmLjP3SXpLhVf21I9Lw==}

  '@types/debug@4.1.12':
    resolution: {integrity: sha512-vIChWdVG3LG1SMxEvI/AK+FWJthlrqlTu7fbrlywTkkaONwk/UAGaULXRlf8vkzFBLVm0zkMdCquhL5aOjhXPQ==}

  '@types/estree-jsx@1.0.5':
    resolution: {integrity: sha512-52CcUVNFyfb1A2ALocQw/Dd1BQFNmSdkuC3BkZ6iqhdMfQz7JWOFRuJFloOzjk+6WijU56m9oKXFAXc7o3Towg==}

  '@types/estree@1.0.7':
    resolution: {integrity: sha512-w28IoSUCJpidD/TGviZwwMJckNESJZXFu7NBZ5YJ4mEUnNraUn9Pm8HSZm/jDF1pDWYKspWE7oVphigUPRakIQ==}

  '@types/graceful-fs@4.1.9':
    resolution: {integrity: sha512-olP3sd1qOEe5dXTSaFvQG+02VdRXcdytWLAZsAq1PecU8uqQAhkrnbli7DagjtXKW/Bl7YJbUsa8MPcuc8LHEQ==}

  '@types/hast@2.3.10':
    resolution: {integrity: sha512-McWspRw8xx8J9HurkVBfYj0xKoE25tOFlHGdx4MJ5xORQrMGZNqJhVQWaIbm6Oyla5kYOXtDiopzKRJzEOkwJw==}

  '@types/hast@3.0.4':
    resolution: {integrity: sha512-WPs+bbQw5aCj+x6laNGWLH3wviHtoCv/P3+otBhbOhJgG8qtpdAMlTCxLtsTWA7LH1Oh/bFCHsBn0TPS5m30EQ==}

  '@types/istanbul-lib-coverage@2.0.6':
    resolution: {integrity: sha512-2QF/t/auWm0lsy8XtKVPG19v3sSOQlJe/YHZgfjb/KBBHOGSV+J2q/S671rcq9uTBrLAXmZpqJiaQbMT+zNU1w==}

  '@types/istanbul-lib-report@3.0.3':
    resolution: {integrity: sha512-NQn7AHQnk/RSLOxrBbGyJM/aVQ+pjj5HCgasFxc0K/KhoATfQ/47AyUl15I2yBUpihjmas+a+VJBOqecrFH+uA==}

  '@types/istanbul-reports@3.0.4':
    resolution: {integrity: sha512-pk2B1NWalF9toCRu6gjBzR69syFjP4Od8WRAX+0mmf9lAjCRicLOWc+ZrxZHx/0XRjotgkF9t6iaMJ+aXcOdZQ==}

  '@types/katex@0.16.7':
    resolution: {integrity: sha512-HMwFiRujE5PjrgwHQ25+bsLJgowjGjm5Z8FVSf0N6PwgJrwxH0QxzHYDcKsTfV3wva0vzrpqMTJS2jXPr5BMEQ==}

  '@types/mdast@4.0.4':
    resolution: {integrity: sha512-kGaNbPh1k7AFzgpud/gMdvIm5xuECykRR+JnWKQno9TAXVa6WIVCGTPvYGekIDL4uwCZQSYbUxNBSb1aUo79oA==}

  '@types/ms@2.1.0':
    resolution: {integrity: sha512-GsCCIZDE/p3i96vtEqx+7dBUGXrc7zeSK3wwPHIaRThS+9OhWIXRqzs4d6k1SVU8g91DrNRWxWUGhp5KXQb2VA==}

  '@types/node@22.15.21':
    resolution: {integrity: sha512-EV/37Td6c+MgKAbkcLG6vqZ2zEYHD7bvSrzqqs2RIhbA6w3x+Dqz8MZM3sP6kGTeLrdoOgKZe+Xja7tUB2DNkQ==}

  '@types/parse-json@4.0.2':
    resolution: {integrity: sha512-dISoDXWWQwUquiKsyZ4Ng+HX2KsPL7LyHKHQwgGFEA3IaKac4Obd+h2a/a6waisAoepJlBcx9paWqjA8/HVjCw==}

  '@types/prop-types@15.7.14':
    resolution: {integrity: sha512-gNMvNH49DJ7OJYv+KAKn0Xp45p8PLl6zo2YnvDIbTd4J6MER2BmWN49TG7n9LvkyihINxeKW8+3bfS2yDC9dzQ==}

  '@types/react-dom@18.3.7':
    resolution: {integrity: sha512-MEe3UeoENYVFXzoXEWsvcpg6ZvlrFNlOQ7EOsvhI3CfAXwzPfO8Qwuxd40nepsYKqyyVQnTdEfv68q91yLcKrQ==}
    peerDependencies:
      '@types/react': ^18.0.0

  '@types/react-reconciler@0.28.9':
    resolution: {integrity: sha512-HHM3nxyUZ3zAylX8ZEyrDNd2XZOnQ0D5XfunJF5FLQnZbHHYq4UWvW1QfelQNXv1ICNkwYhfxjwfnqivYB6bFg==}
    peerDependencies:
      '@types/react': '*'

  '@types/react-syntax-highlighter@15.5.13':
    resolution: {integrity: sha512-uLGJ87j6Sz8UaBAooU0T6lWJ0dBmjZgN1PZTrj05TNql2/XpC6+4HhMT5syIdFUUt+FASfCeLLv4kBygNU+8qA==}

  '@types/react-transition-group@4.4.12':
    resolution: {integrity: sha512-8TV6R3h2j7a91c+1DXdJi3Syo69zzIZbz7Lg5tORM5LEJG7X/E6a1V3drRyBRZq7/utz7A+c4OgYLiLcYGHG6w==}
    peerDependencies:
      '@types/react': '*'

  '@types/react@18.3.22':
    resolution: {integrity: sha512-vUhG0YmQZ7kL/tmKLrD3g5zXbXXreZXB3pmROW8bg3CnLnpjkRVwUlLne7Ufa2r9yJ8+/6B73RzhAek5TBKh2Q==}

  '@types/stack-utils@2.0.3':
    resolution: {integrity: sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==}

  '@types/unist@2.0.11':
    resolution: {integrity: sha512-CmBKiL6NNo/OqgmMn95Fk9Whlp2mtvIv+KNpQKN2F4SjvrEesubTRWGYSg+BnWZOnlCaSTU1sMpsBOzgbYhnsA==}

  '@types/unist@3.0.3':
    resolution: {integrity: sha512-ko/gIFJRv177XgZsZcBwnqJN5x/Gien8qNOn0D5bQU/zAzVf9Zt3BlcUiLqhV9y4ARk0GbT3tnUiPNgnTXzc/Q==}

  '@types/uuid@10.0.0':
    resolution: {integrity: sha512-7gqG38EyHgyP1S+7+xomFtL+ZNHcKv6DwNaCZmJmo1vgMugyF3TCnXVg4t1uk89mLNwnLtnY3TpOpCOyp1/xHQ==}

  '@types/webxr@0.5.22':
    resolution: {integrity: sha512-Vr6Stjv5jPRqH690f5I5GLjVk8GSsoQSYJ2FVd/3jJF7KaqfwPi3ehfBS96mlQ2kPCwZaX6U0rG2+NGHBKkA/A==}

  '@types/yargs-parser@21.0.3':
    resolution: {integrity: sha512-I4q9QU9MQv4oEOz4tAHJtNz1cwuLxn2F3xcc2iV5WdqLPpUnj30aUuxt1mAxYTG+oe8CZMV/+6rU4S4gRDzqtQ==}

  '@types/yargs@17.0.33':
    resolution: {integrity: sha512-WpxBCKWPLr4xSsHgz511rFJAM+wS28w2zEO1QDNY5zM/S8ok70NNfztH0xwhqKyaK0OHCbN98LDAZuy1ctxDkA==}

  '@ungap/structured-clone@1.3.0':
    resolution: {integrity: sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==}

  abort-controller@3.0.0:
    resolution: {integrity: sha512-h8lQ8tacZYnR3vNQTgibj+tODHI5/+l06Au2Pcriv/Gmet0eaj4TwWH41sO9wnHDiQsEj19q0drzdWdeAHtweg==}
    engines: {node: '>=6.5'}

  accepts@1.3.8:
    resolution: {integrity: sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==}
    engines: {node: '>= 0.6'}

  acorn@8.14.1:
    resolution: {integrity: sha512-OvQ/2pUDKmgfCg++xsTX1wGxfTaszcHVcTctW4UJB4hibJx2HXxxO5UmVgyjMa+ZDsiaf5wWLXYpRWMmBI0QHg==}
    engines: {node: '>=0.4.0'}
    hasBin: true

  add@2.0.6:
    resolution: {integrity: sha512-j5QzrmsokwWWp6kUcJQySpbG+xfOBqqKnup3OIk1pz+kB/80SLorZ9V8zHFLO92Lcd+hbvq8bT+zOGoPkmBV0Q==}

  agent-base@7.1.3:
    resolution: {integrity: sha512-jRR5wdylq8CkOe6hei19GGZnxM6rBGwFl3Bg0YItGDimvjGtAvdZk4Pu6Cl4u4Igsws4a1fd1Vq3ezrhn4KmFw==}
    engines: {node: '>= 14'}

  anser@1.4.10:
    resolution: {integrity: sha512-hCv9AqTQ8ycjpSd3upOJd7vFwW1JaoYQ7tpham03GJ1ca8/65rqn0RpaWpItOAd6ylW9wAw6luXYPJIyPFVOww==}

  ansi-regex@5.0.1:
    resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}
    engines: {node: '>=8'}

  ansi-regex@6.1.0:
    resolution: {integrity: sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==}
    engines: {node: '>=12'}

  ansi-styles@4.3.0:
    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}
    engines: {node: '>=8'}

  ansi-styles@5.2.0:
    resolution: {integrity: sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==}
    engines: {node: '>=10'}

  ansi-styles@6.2.1:
    resolution: {integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==}
    engines: {node: '>=12'}

  any-promise@1.3.0:
    resolution: {integrity: sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==}

  anymatch@3.1.3:
    resolution: {integrity: sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==}
    engines: {node: '>= 8'}

  arg@5.0.2:
    resolution: {integrity: sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==}

  argparse@1.0.10:
    resolution: {integrity: sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==}

  aria-hidden@1.2.6:
    resolution: {integrity: sha512-ik3ZgC9dY/lYVVM++OISsaYDeg1tb0VtP5uL3ouh1koGOaUMDPpbFIei4JkFimWUFPn90sbMNMXQAIVOlnYKJA==}
    engines: {node: '>=10'}

  asap@2.0.6:
    resolution: {integrity: sha512-BSHWgDSAiKs50o2Re8ppvp3seVHXSRM44cdSsT9FfNEUUZLOGWVCsiWaRPWM1Znn+mqZ1OfVZ3z3DWEzSp7hRA==}

  async-limiter@1.0.1:
    resolution: {integrity: sha512-csOlWGAcRFJaI6m+F2WKdnMKr4HhdhFVBk0H/QbJFMCr+uO2kwohwXQPxw/9OCxp05r5ghVBFSyioixx3gfkNQ==}

  autoprefixer@10.4.21:
    resolution: {integrity: sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==}
    engines: {node: ^10 || ^12 || >=14}
    hasBin: true
    peerDependencies:
      postcss: ^8.1.0

  babel-jest@29.7.0:
    resolution: {integrity: sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    peerDependencies:
      '@babel/core': ^7.8.0

  babel-plugin-istanbul@6.1.1:
    resolution: {integrity: sha512-Y1IQok9821cC9onCx5otgFfRm7Lm+I+wwxOx738M/WLPZ9Q42m4IG5W0FNX8WLL2gYMZo3JkuXIH2DOpWM+qwA==}
    engines: {node: '>=8'}

  babel-plugin-jest-hoist@29.6.3:
    resolution: {integrity: sha512-ESAc/RJvGTFEzRwOTT4+lNDk/GNHMkKbNzsvT0qKRfDyyYTskxB5rnU2njIDYVxXCBHHEI1c0YwHob3WaYujOg==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  babel-plugin-macros@3.1.0:
    resolution: {integrity: sha512-Cg7TFGpIr01vOQNODXOOaGz2NpCU5gl8x1qJFbb6hbZxR7XrcE2vtbAsTAbJ7/xwJtUuJEw8K8Zr/AE0LHlesg==}
    engines: {node: '>=10', npm: '>=6'}

  babel-plugin-syntax-hermes-parser@0.25.1:
    resolution: {integrity: sha512-IVNpGzboFLfXZUAwkLFcI/bnqVbwky0jP3eBno4HKtqvQJAHBLdgxiG6lQ4to0+Q/YCN3PO0od5NZwIKyY4REQ==}

  babel-preset-current-node-syntax@1.1.0:
    resolution: {integrity: sha512-ldYss8SbBlWva1bs28q78Ju5Zq1F+8BrqBZZ0VFhLBvhh6lCpC2o3gDJi/5DRLs9FgYZCnmPYIVFU4lRXCkyUw==}
    peerDependencies:
      '@babel/core': ^7.0.0

  babel-preset-jest@29.6.3:
    resolution: {integrity: sha512-0B3bhxR6snWXJZtR/RliHTDPRgn1sNHOR0yVtq/IiQFyuOVjFS+wuio/R4gSNkyYmKmJB4wGZv2NZanmKmTnNA==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
    peerDependencies:
      '@babel/core': ^7.0.0

  bail@2.0.2:
    resolution: {integrity: sha512-0xO6mYd7JB2YesxDKplafRpsiOzPt9V02ddPCLbY1xYGPOX24NTyN50qnUxgCPcSoYMhKpAuBTjQoRZCAkUDRw==}

  balanced-match@1.0.2:
    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}

  base64-js@1.5.1:
    resolution: {integrity: sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==}

  binary-extensions@2.3.0:
    resolution: {integrity: sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==}
    engines: {node: '>=8'}

  brace-expansion@1.1.11:
    resolution: {integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==}

  brace-expansion@2.0.1:
    resolution: {integrity: sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==}

  braces@3.0.3:
    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}
    engines: {node: '>=8'}

  browserslist@4.24.5:
    resolution: {integrity: sha512-FDToo4Wo82hIdgc1CQ+NQD0hEhmpPjrZ3hiUgwgOG6IuTdlpr8jdjyG24P6cNP1yJpTLzS5OcGgSw0xmDU1/Tw==}
    engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}
    hasBin: true

  bser@2.1.1:
    resolution: {integrity: sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==}

  buffer-from@1.1.2:
    resolution: {integrity: sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==}

  buffer@6.0.3:
    resolution: {integrity: sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==}

  busboy@1.6.0:
    resolution: {integrity: sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==}
    engines: {node: '>=10.16.0'}

  caller-callsite@2.0.0:
    resolution: {integrity: sha512-JuG3qI4QOftFsZyOn1qq87fq5grLIyk1JYd5lJmdA+fG7aQ9pA/i3JIJGcO3q0MrRcHlOt1U+ZeHW8Dq9axALQ==}
    engines: {node: '>=4'}

  caller-path@2.0.0:
    resolution: {integrity: sha512-MCL3sf6nCSXOwCTzvPKhN18TU7AHTvdtam8DAogxcrJ8Rjfbbg7Lgng64H9Iy+vUV6VGFClN/TyxBkAebLRR4A==}
    engines: {node: '>=4'}

  callsites@2.0.0:
    resolution: {integrity: sha512-ksWePWBloaWPxJYQ8TL0JHvtci6G5QTKwQ95RcWAa/lzoAKuAOflGdAK92hpHXjkwb8zLxoLNUoNYZgVsaJzvQ==}
    engines: {node: '>=4'}

  callsites@3.1.0:
    resolution: {integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==}
    engines: {node: '>=6'}

  camelcase-css@2.0.1:
    resolution: {integrity: sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==}
    engines: {node: '>= 6'}

  camelcase@5.3.1:
    resolution: {integrity: sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==}
    engines: {node: '>=6'}

  camelcase@6.3.0:
    resolution: {integrity: sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==}
    engines: {node: '>=10'}

  caniuse-lite@1.0.30001718:
    resolution: {integrity: sha512-AflseV1ahcSunK53NfEs9gFWgOEmzr0f+kaMFA4xiLZlr9Hzt7HxcSpIFcnNCUkz6R6dWKa54rUz3HUmI3nVcw==}

  ccount@2.0.1:
    resolution: {integrity: sha512-eyrF0jiFpY+3drT6383f1qhkbGsLSifNAjA61IUjZjmLCWjItY6LB9ft9YhoDgwfmclB2zhu51Lc7+95b8NRAg==}

  chalk@4.1.2:
    resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}
    engines: {node: '>=10'}

  character-entities-html4@2.1.0:
    resolution: {integrity: sha512-1v7fgQRj6hnSwFpq1Eu0ynr/CDEw0rXo2B61qXrLNdHZmPKgb7fqS1a2JwF0rISo9q77jDI8VMEHoApn8qDoZA==}

  character-entities-legacy@1.1.4:
    resolution: {integrity: sha512-3Xnr+7ZFS1uxeiUDvV02wQ+QDbc55o97tIV5zHScSPJpcLm/r0DFPcoY3tYRp+VZukxuMeKgXYmsXQHO05zQeA==}

  character-entities-legacy@3.0.0:
    resolution: {integrity: sha512-RpPp0asT/6ufRm//AJVwpViZbGM/MkjQFxJccQRHmISF/22NBtsHqAWmL+/pmkPWoIUJdWyeVleTl1wydHATVQ==}

  character-entities@1.2.4:
    resolution: {integrity: sha512-iBMyeEHxfVnIakwOuDXpVkc54HijNgCyQB2w0VfGQThle6NXn50zU6V/u+LDhxHcDUPojn6Kpga3PTAD8W1bQw==}

  character-entities@2.0.2:
    resolution: {integrity: sha512-shx7oQ0Awen/BRIdkjkvz54PnEEI/EjwXDSIZp86/KKdbafHh1Df/RYGBhn4hbe2+uKC9FnT5UCEdyPz3ai9hQ==}

  character-reference-invalid@1.1.4:
    resolution: {integrity: sha512-mKKUkUbhPpQlCOfIuZkvSEgktjPFIsZKRRbC6KWVEMvlzblj3i3asQv5ODsrwt0N3pHAEvjP8KTQPHkp0+6jOg==}

  character-reference-invalid@2.0.1:
    resolution: {integrity: sha512-iBZ4F4wRbyORVsu0jPV7gXkOsGYjGHPmAyv+HiHG8gi5PtC9KI2j1+v8/tlibRvjoWX027ypmG/n0HtO5t7unw==}

  chokidar@3.6.0:
    resolution: {integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==}
    engines: {node: '>= 8.10.0'}

  chroma-js@3.1.2:
    resolution: {integrity: sha512-IJnETTalXbsLx1eKEgx19d5L6SRM7cH4vINw/99p/M11HCuXGRWL+6YmCm7FWFGIo6dtWuQoQi1dc5yQ7ESIHg==}

  chrome-launcher@0.15.2:
    resolution: {integrity: sha512-zdLEwNo3aUVzIhKhTtXfxhdvZhUghrnmkvcAq2NoDd+LeOHKf03H5jwZ8T/STsAlzyALkBVK552iaG1fGf1xVQ==}
    engines: {node: '>=12.13.0'}
    hasBin: true

  chromium-edge-launcher@0.2.0:
    resolution: {integrity: sha512-JfJjUnq25y9yg4FABRRVPmBGWPZZi+AQXT4mxupb67766/0UlhG8PAZCz6xzEMXTbW3CsSoE8PcCWA49n35mKg==}

  ci-info@2.0.0:
    resolution: {integrity: sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==}

  ci-info@3.9.0:
    resolution: {integrity: sha512-NIxF55hv4nSqQswkAeiOi1r83xy8JldOFDTWiug55KBu9Jnblncd2U6ViHmYgHf01TPZS77NJBhBMKdWj9HQMQ==}
    engines: {node: '>=8'}

  class-variance-authority@0.7.1:
    resolution: {integrity: sha512-Ka+9Trutv7G8M6WT6SeiRWz792K5qEqIGEGzXKhAE6xOWAY6pPH8U+9IY3oCMv6kqTmLsv7Xh/2w2RigkePMsg==}

  client-only@0.0.1:
    resolution: {integrity: sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==}

  cliui@8.0.1:
    resolution: {integrity: sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==}
    engines: {node: '>=12'}

  clsx@2.1.1:
    resolution: {integrity: sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==}
    engines: {node: '>=6'}

  cmdk@1.1.1:
    resolution: {integrity: sha512-Vsv7kFaXm+ptHDMZ7izaRsP70GgrW9NBNGswt9OZaVBLlE0SNpDq8eu/VGXyF9r7M0azK3Wy7OlYXsuyYLFzHg==}
    peerDependencies:
      react: ^18 || ^19 || ^19.0.0-rc
      react-dom: ^18 || ^19 || ^19.0.0-rc

  color-convert@2.0.1:
    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}
    engines: {node: '>=7.0.0'}

  color-name@1.1.4:
    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}

  color-string@1.9.1:
    resolution: {integrity: sha512-shrVawQFojnZv6xM40anx4CkoDP+fZsw/ZerEMsW/pyzsRbElpsL/DBVW7q3ExxwusdNXI3lXpuhEZkzs8p5Eg==}

  color@4.2.3:
    resolution: {integrity: sha512-1rXeuUUiGGrykh+CeBdu5Ie7OJwinCgQY0bc7GCRxy5xVHy+moaqkpL/jqQq0MtQOeYcrqEz4abc5f0KtU7W4A==}
    engines: {node: '>=12.5.0'}

  colord@2.9.3:
    resolution: {integrity: sha512-jeC1axXpnb0/2nn/Y1LPuLdgXBLH7aDcHu4KEKfqw3CUhX7ZpfBSlPKyqXE6btIgEzfWtrX3/tyBCaCvXvMkOw==}

  comma-separated-tokens@1.0.8:
    resolution: {integrity: sha512-GHuDRO12Sypu2cV70d1dkA2EUmXHgntrzbpvOB+Qy+49ypNfGgFQIC2fhhXbnyrJRynDCAARsT7Ou0M6hirpfw==}

  comma-separated-tokens@2.0.3:
    resolution: {integrity: sha512-Fu4hJdvzeylCfQPp9SGWidpzrMs7tTrlu6Vb8XGaRGck8QSNZJJp538Wrb60Lax4fPwR64ViY468OIUTbRlGZg==}

  commander@12.1.0:
    resolution: {integrity: sha512-Vw8qHK3bZM9y/P10u3Vib8o/DdkvA2OtPtZvD871QKjy74Wj1WSKFILMPRPSdUSx5RFK1arlJzEtA4PkFgnbuA==}
    engines: {node: '>=18'}

  commander@2.20.3:
    resolution: {integrity: sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==}

  commander@4.1.1:
    resolution: {integrity: sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==}
    engines: {node: '>= 6'}

  commander@8.3.0:
    resolution: {integrity: sha512-OkTL9umf+He2DZkUq8f8J9of7yL6RJKI24dVITBmNfZBmri9zYZQrKkuXiKhyfPSu8tUhnVBB1iKXevvnlR4Ww==}
    engines: {node: '>= 12'}

  concat-map@0.0.1:
    resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}

  connect@3.7.0:
    resolution: {integrity: sha512-ZqRXc+tZukToSNmh5C2iWMSoV3X1YUcPbqEM4DkEG5tNQXrQUZCNVGGv3IuicnkMtPfGf3Xtp8WCXs295iQ1pQ==}
    engines: {node: '>= 0.10.0'}

  convert-source-map@1.9.0:
    resolution: {integrity: sha512-ASFBup0Mz1uyiIjANan1jzLQami9z1PoYSZCiiYW2FczPbenXc45FZdBZLzOT+r6+iciuEModtmCti+hjaAk0A==}

  convert-source-map@2.0.0:
    resolution: {integrity: sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==}

  cosmiconfig@5.2.1:
    resolution: {integrity: sha512-H65gsXo1SKjf8zmrJ67eJk8aIRKV5ff2D4uKZIBZShbhGSpEmsQOPW/SKMKYhSTrqR7ufy6RP69rPogdaPh/kA==}
    engines: {node: '>=4'}

  cosmiconfig@7.1.0:
    resolution: {integrity: sha512-AdmX6xUzdNASswsFtmwSt7Vj8po9IuqXm0UXz7QKPuEUmPB4XyjGfaAr2PSuELMwkRMVH1EpIkX5bTZGRB3eCA==}
    engines: {node: '>=10'}

  cross-spawn@7.0.6:
    resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}
    engines: {node: '>= 8'}

  cssesc@3.0.0:
    resolution: {integrity: sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==}
    engines: {node: '>=4'}
    hasBin: true

  csstype@3.1.3:
    resolution: {integrity: sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==}

  d3-array@3.2.4:
    resolution: {integrity: sha512-tdQAmyA18i4J7wprpYq8ClcxZy3SC31QMeByyCFyRt7BVHdREQZ5lpzoe5mFEYZUWe+oq8HBvk9JjpibyEV4Jg==}
    engines: {node: '>=12'}

  d3-color@3.1.0:
    resolution: {integrity: sha512-zg/chbXyeBtMQ1LbD/WSoW2DpC3I0mpmPdW+ynRTj/x2DAWYrIY7qeZIHidozwV24m4iavr15lNwIwLxRmOxhA==}
    engines: {node: '>=12'}

  d3-ease@3.0.1:
    resolution: {integrity: sha512-wR/XK3D3XcLIZwpbvQwQ5fK+8Ykds1ip7A2Txe0yxncXSdq1L9skcG7blcedkOX+ZcgxGAmLX1FrRGbADwzi0w==}
    engines: {node: '>=12'}

  d3-format@3.1.0:
    resolution: {integrity: sha512-YyUI6AEuY/Wpt8KWLgZHsIU86atmikuoOmCfommt0LYHiQSPjvX2AcFc38PX0CBpr2RCyZhjex+NS/LPOv6YqA==}
    engines: {node: '>=12'}

  d3-interpolate@3.0.1:
    resolution: {integrity: sha512-3bYs1rOD33uo8aqJfKP3JWPAibgw8Zm2+L9vBKEHJ2Rg+viTR7o5Mmv5mZcieN+FRYaAOWX5SJATX6k1PWz72g==}
    engines: {node: '>=12'}

  d3-path@3.1.0:
    resolution: {integrity: sha512-p3KP5HCf/bvjBSSKuXid6Zqijx7wIfNW+J/maPs+iwR35at5JCbLUT0LzF1cnjbCHWhqzQTIN2Jpe8pRebIEFQ==}
    engines: {node: '>=12'}

  d3-scale@4.0.2:
    resolution: {integrity: sha512-GZW464g1SH7ag3Y7hXjf8RoUuAFIqklOAq3MRl4OaWabTFJY9PN/E1YklhXLh+OQ3fM9yS2nOkCoS+WLZ6kvxQ==}
    engines: {node: '>=12'}

  d3-shape@3.2.0:
    resolution: {integrity: sha512-SaLBuwGm3MOViRq2ABk3eLoxwZELpH6zhl3FbAoJ7Vm1gofKx6El1Ib5z23NUEhF9AsGl7y+dzLe5Cw2AArGTA==}
    engines: {node: '>=12'}

  d3-time-format@4.1.0:
    resolution: {integrity: sha512-dJxPBlzC7NugB2PDLwo9Q8JiTR3M3e4/XANkreKSUxF8vvXKqm1Yfq4Q5dl8budlunRVlUUaDUgFt7eA8D6NLg==}
    engines: {node: '>=12'}

  d3-time@3.1.0:
    resolution: {integrity: sha512-VqKjzBLejbSMT4IgbmVgDjpkYrNWUYJnbCGo874u7MMKIWsILRX+OpX/gTk8MqjpT1A/c6HY2dCA77ZN0lkQ2Q==}
    engines: {node: '>=12'}

  d3-timer@3.0.1:
    resolution: {integrity: sha512-ndfJ/JxxMd3nw31uyKoY2naivF+r29V+Lc0svZxe1JvvIRmi8hUsrMvdOwgS1o6uBHmiz91geQ0ylPP0aj1VUA==}
    engines: {node: '>=12'}

  date-fns@3.6.0:
    resolution: {integrity: sha512-fRHTG8g/Gif+kSh50gaGEdToemgfj74aRX3swtiouboip5JDLAyDE9F11nHMIcvOaXeOC6D7SpNhi7uFyB7Uww==}

  debug@2.6.9:
    resolution: {integrity: sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==}
    peerDependencies:
      supports-color: '*'
    peerDependenciesMeta:
      supports-color:
        optional: true

  debug@4.4.1:
    resolution: {integrity: sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==}
    engines: {node: '>=6.0'}
    peerDependencies:
      supports-color: '*'
    peerDependenciesMeta:
      supports-color:
        optional: true

  decimal.js-light@2.5.1:
    resolution: {integrity: sha512-qIMFpTMZmny+MMIitAB6D7iVPEorVw6YQRWkvarTkT4tBeSLLiHzcwj6q0MmYSFCiVpiqPJTJEYIrpcPzVEIvg==}

  decode-named-character-reference@1.1.0:
    resolution: {integrity: sha512-Wy+JTSbFThEOXQIR2L6mxJvEs+veIzpmqD7ynWxMXGpnk3smkHQOp6forLdHsKpAMW9iJpaBBIxz285t1n1C3w==}

  deep-rename-keys@0.2.1:
    resolution: {integrity: sha512-RHd9ABw4Fvk+gYDWqwOftG849x0bYOySl/RgX0tLI9i27ZIeSO91mLZJEp7oPHOMFqHvpgu21YptmDt0FYD/0A==}
    engines: {node: '>=0.10.0'}

  depd@2.0.0:
    resolution: {integrity: sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==}
    engines: {node: '>= 0.8'}

  dequal@2.0.3:
    resolution: {integrity: sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==}
    engines: {node: '>=6'}

  destroy@1.2.0:
    resolution: {integrity: sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==}
    engines: {node: '>= 0.8', npm: 1.2.8000 || >= 1.4.16}

  detect-libc@2.0.4:
    resolution: {integrity: sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==}
    engines: {node: '>=8'}

  detect-node-es@1.1.0:
    resolution: {integrity: sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ==}

  devlop@1.1.0:
    resolution: {integrity: sha512-RWmIqhcFf1lRYBvNmr7qTNuyCt/7/ns2jbpp1+PalgE/rDQcBT0fioSMUpJ93irlUhC5hrg4cYqe6U+0ImW0rA==}

  didyoumean@1.2.2:
    resolution: {integrity: sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==}

  dlv@1.1.3:
    resolution: {integrity: sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==}

  dom-helpers@5.2.1:
    resolution: {integrity: sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==}

  eastasianwidth@0.2.0:
    resolution: {integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==}

  ee-first@1.1.1:
    resolution: {integrity: sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==}

  electron-to-chromium@1.5.157:
    resolution: {integrity: sha512-/0ybgsQd1muo8QlnuTpKwtl0oX5YMlUGbm8xyqgDU00motRkKFFbUJySAQBWcY79rVqNLWIWa87BGVGClwAB2w==}

  embla-carousel-react@8.6.0:
    resolution: {integrity: sha512-0/PjqU7geVmo6F734pmPqpyHqiM99olvyecY7zdweCw+6tKEXnrE90pBiBbMMU8s5tICemzpQ3hi5EpxzGW+JA==}
    peerDependencies:
      react: ^16.8.0 || ^17.0.1 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc

  embla-carousel-reactive-utils@8.6.0:
    resolution: {integrity: sha512-fMVUDUEx0/uIEDM0Mz3dHznDhfX+znCCDCeIophYb1QGVM7YThSWX+wz11zlYwWFOr74b4QLGg0hrGPJeG2s4A==}
    peerDependencies:
      embla-carousel: 8.6.0

  embla-carousel@8.6.0:
    resolution: {integrity: sha512-SjWyZBHJPbqxHOzckOfo8lHisEaJWmwd23XppYFYVh10bU66/Pn5tkVkbkCMZVdbUE5eTCI2nD8OyIP4Z+uwkA==}

  emoji-regex-xs@1.0.0:
    resolution: {integrity: sha512-LRlerrMYoIDrT6jgpeZ2YYl/L8EulRTt5hQcYjy5AInh7HWXKimpqx68aknBFpGL2+/IcogTcaydJEgaTmOpDg==}

  emoji-regex@8.0.0:
    resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}

  emoji-regex@9.2.2:
    resolution: {integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==}

  encodeurl@1.0.2:
    resolution: {integrity: sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==}
    engines: {node: '>= 0.8'}

  encodeurl@2.0.0:
    resolution: {integrity: sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==}
    engines: {node: '>= 0.8'}

  entities@6.0.0:
    resolution: {integrity: sha512-aKstq2TDOndCn4diEyp9Uq/Flu2i1GlLkc6XIDQSDMuaFE3OPW5OphLCyQ5SpSJZTb4reN+kTcYru5yIfXoRPw==}
    engines: {node: '>=0.12'}

  error-ex@1.3.2:
    resolution: {integrity: sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==}

  error-stack-parser@2.1.4:
    resolution: {integrity: sha512-Sk5V6wVazPhq5MhpO+AUxJn5x7XSXGl1R93Vn7i+zS15KDVxQijejNCrz8340/2bgLBjR9GtEG8ZVKONDjcqGQ==}

  escalade@3.2.0:
    resolution: {integrity: sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==}
    engines: {node: '>=6'}

  escape-html@1.0.3:
    resolution: {integrity: sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==}

  escape-string-regexp@2.0.0:
    resolution: {integrity: sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==}
    engines: {node: '>=8'}

  escape-string-regexp@4.0.0:
    resolution: {integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==}
    engines: {node: '>=10'}

  escape-string-regexp@5.0.0:
    resolution: {integrity: sha512-/veY75JbMK4j1yjvuUxuVsiS/hr/4iHs9FTT6cgTexxdE0Ly/glccBAkloH/DofkjRbZU3bnoj38mOmhkZ0lHw==}
    engines: {node: '>=12'}

  esprima@4.0.1:
    resolution: {integrity: sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==}
    engines: {node: '>=4'}
    hasBin: true

  estree-util-is-identifier-name@3.0.0:
    resolution: {integrity: sha512-hFtqIDZTIUZ9BXLb8y4pYGyk6+wekIivNVTcmvk8NoOh+VeRn5y6cEHzbURrWbfp1fIqdVipilzj+lfaadNZmg==}

  etag@1.8.1:
    resolution: {integrity: sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==}
    engines: {node: '>= 0.6'}

  event-target-shim@5.0.1:
    resolution: {integrity: sha512-i/2XbnSz/uxRCU6+NdVJgKWDTM427+MqYbkQzD321DuCQJUqOuJKIA0IM2+W2xtYHdKOmZ4dR6fExsd4SXL+WQ==}
    engines: {node: '>=6'}

  eventemitter3@2.0.3:
    resolution: {integrity: sha512-jLN68Dx5kyFHaePoXWPsCGW5qdyZQtLYHkxkg02/Mz6g0kYpDx4FyP6XfArhQdlOC4b8Mv+EMxPo/8La7Tzghg==}

  eventemitter3@4.0.7:
    resolution: {integrity: sha512-8guHBZCwKnFhYdHr2ysuRWErTwhoN2X8XELRlrRwpmfeY2jjuUN4taQMsULKUVo1K4DvZl+0pgfyoysHxvmvEw==}

  events@3.3.0:
    resolution: {integrity: sha512-mQw+2fkQbALzQ7V0MY0IqdnXNOeTtP4r0lN9z7AAawCXgqea7bDii20AYrIBrFd/Hx0M2Ocz6S111CaFkUcb0Q==}
    engines: {node: '>=0.8.x'}

  exponential-backoff@3.1.2:
    resolution: {integrity: sha512-8QxYTVXUkuy7fIIoitQkPwGonB8F3Zj8eEO8Sqg9Zv/bkI7RJAzowee4gr81Hak/dUTpA2Z7VfQgoijjPNlUZA==}

  extend@3.0.2:
    resolution: {integrity: sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==}

  fast-deep-equal@3.1.3:
    resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}

  fast-equals@5.2.2:
    resolution: {integrity: sha512-V7/RktU11J3I36Nwq2JnZEM7tNm17eBJz+u25qdxBZeCKiX6BkVSZQjwWIr+IobgnZy+ag73tTZgZi7tr0LrBw==}
    engines: {node: '>=6.0.0'}

  fast-glob@3.3.3:
    resolution: {integrity: sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==}
    engines: {node: '>=8.6.0'}

  fast-json-stable-stringify@2.1.0:
    resolution: {integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==}

  fast-plist@0.1.3:
    resolution: {integrity: sha512-d9cEfo/WcOezgPLAC/8t8wGb6YOD6JTCPMw2QcG2nAdFmyY+9rTUizCTaGjIZAloWENTEUMAPpkUAIJJJ0i96A==}

  fastq@1.19.1:
    resolution: {integrity: sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==}

  fault@1.0.4:
    resolution: {integrity: sha512-CJ0HCB5tL5fYTEA7ToAq5+kTwd++Borf1/bifxd9iT70QcXr4MRrO3Llf8Ifs70q+SJcGHFtnIE/Nw6giCtECA==}

  fb-watchman@2.0.2:
    resolution: {integrity: sha512-p5161BqbuCaSnB8jIbzQHOlpgsPmK5rJVDfDKO91Axs5NC1uu3HRQm6wt9cd9/+GtQQIO53JdGXXoyDpTAsgYA==}

  file-icons-js@1.1.0:
    resolution: {integrity: sha512-EwR5RJoNIp5Wnzc+AF1oyBYZhOqPuPm0QHzfCaeh5KJpLB5lWIsxswiAwj3m8lIj7ddBzYBJDDnIr6IVrRCy8Q==}

  fill-range@7.1.1:
    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}
    engines: {node: '>=8'}

  finalhandler@1.1.2:
    resolution: {integrity: sha512-aAWcW57uxVNrQZqFXjITpW3sIUQmHGG3qSb9mUah9MgMC4NeWhNOlNjXEYq3HjRAvL6arUviZGGJsBg6z0zsWA==}
    engines: {node: '>= 0.8'}

  find-root@1.1.0:
    resolution: {integrity: sha512-NKfW6bec6GfKc0SGx1e07QZY9PE99u0Bft/0rzSD5k3sO/vwkVUpDUKVm5Gpp5Ue3YfShPFTX2070tDs5kB9Ng==}

  find-up@4.1.0:
    resolution: {integrity: sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==}
    engines: {node: '>=8'}

  flow-enums-runtime@0.0.6:
    resolution: {integrity: sha512-3PYnM29RFXwvAN6Pc/scUfkI7RwhQ/xqyLUyPNlXUp9S40zI8nup9tUSrTLSVnWGBN38FNiGWbwZOB6uR4OGdw==}

  foreground-child@3.3.1:
    resolution: {integrity: sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==}
    engines: {node: '>=14'}

  format@0.2.2:
    resolution: {integrity: sha512-wzsgA6WOq+09wrU1tsJ09udeR/YZRaeArL9e1wPbFg3GG2yDnC2ldKpxs4xunpFF9DgqCqOIra3bc1HWrJ37Ww==}
    engines: {node: '>=0.4.x'}

  fraction.js@4.3.7:
    resolution: {integrity: sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==}

  framer-motion@11.18.2:
    resolution: {integrity: sha512-5F5Och7wrvtLVElIpclDT0CBzMVg3dL22B64aZwHtsIY8RB4mXICLrkajK4G9R+ieSAGcgrLeae2SeUTg2pr6w==}
    peerDependencies:
      '@emotion/is-prop-valid': '*'
      react: ^18.0.0 || ^19.0.0
      react-dom: ^18.0.0 || ^19.0.0
    peerDependenciesMeta:
      '@emotion/is-prop-valid':
        optional: true
      react:
        optional: true
      react-dom:
        optional: true

  fresh@0.5.2:
    resolution: {integrity: sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==}
    engines: {node: '>= 0.6'}

  fs.realpath@1.0.0:
    resolution: {integrity: sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==}

  fsevents@2.3.3:
    resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}
    engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}
    os: [darwin]

  function-bind@1.1.2:
    resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}

  gensync@1.0.0-beta.2:
    resolution: {integrity: sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==}
    engines: {node: '>=6.9.0'}

  get-caller-file@2.0.5:
    resolution: {integrity: sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==}
    engines: {node: 6.* || 8.* || >= 10.*}

  get-nonce@1.0.1:
    resolution: {integrity: sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==}
    engines: {node: '>=6'}

  get-package-type@0.1.0:
    resolution: {integrity: sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==}
    engines: {node: '>=8.0.0'}

  glob-parent@5.1.2:
    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}
    engines: {node: '>= 6'}

  glob-parent@6.0.2:
    resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}
    engines: {node: '>=10.13.0'}

  glob@10.4.5:
    resolution: {integrity: sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==}
    hasBin: true

  glob@7.2.3:
    resolution: {integrity: sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==}
    deprecated: Glob versions prior to v9 are no longer supported

  globals@11.12.0:
    resolution: {integrity: sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==}
    engines: {node: '>=4'}

  graceful-fs@4.2.11:
    resolution: {integrity: sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==}

  has-flag@4.0.0:
    resolution: {integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==}
    engines: {node: '>=8'}

  hasown@2.0.2:
    resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}
    engines: {node: '>= 0.4'}

  hast-util-from-dom@5.0.1:
    resolution: {integrity: sha512-N+LqofjR2zuzTjCPzyDUdSshy4Ma6li7p/c3pA78uTwzFgENbgbUrm2ugwsOdcjI1muO+o6Dgzp9p8WHtn/39Q==}

  hast-util-from-html-isomorphic@2.0.0:
    resolution: {integrity: sha512-zJfpXq44yff2hmE0XmwEOzdWin5xwH+QIhMLOScpX91e/NSGPsAzNCvLQDIEPyO2TXi+lBmU6hjLIhV8MwP2kw==}

  hast-util-from-html@2.0.3:
    resolution: {integrity: sha512-CUSRHXyKjzHov8yKsQjGOElXy/3EKpyX56ELnkHH34vDVw1N1XSQ1ZcAvTyAPtGqLTuKP/uxM+aLkSPqF/EtMw==}

  hast-util-from-parse5@8.0.3:
    resolution: {integrity: sha512-3kxEVkEKt0zvcZ3hCRYI8rqrgwtlIOFMWkbclACvjlDw8Li9S2hk/d51OI0nr/gIpdMHNepwgOKqZ/sy0Clpyg==}

  hast-util-is-element@3.0.0:
    resolution: {integrity: sha512-Val9mnv2IWpLbNPqc/pUem+a7Ipj2aHacCwgNfTiK0vJKl0LF+4Ba4+v1oPHFpf3bLYmreq0/l3Gud9S5OH42g==}

  hast-util-parse-selector@2.2.5:
    resolution: {integrity: sha512-7j6mrk/qqkSehsM92wQjdIgWM2/BW61u/53G6xmC8i1OmEdKLHbk419QKQUjz6LglWsfqoiHmyMRkP1BGjecNQ==}

  hast-util-parse-selector@4.0.0:
    resolution: {integrity: sha512-wkQCkSYoOGCRKERFWcxMVMOcYE2K1AaNLU8DXS9arxnLOUEWbOXKXiJUNzEpqZ3JOKpnha3jkFrumEjVliDe7A==}

  hast-util-raw@9.1.0:
    resolution: {integrity: sha512-Y8/SBAHkZGoNkpzqqfCldijcuUKh7/su31kEBp67cFY09Wy0mTRgtsLYsiIxMJxlu0f6AA5SUTbDR8K0rxnbUw==}

  hast-util-to-html@9.0.5:
    resolution: {integrity: sha512-OguPdidb+fbHQSU4Q4ZiLKnzWo8Wwsf5bZfbvu7//a9oTYoqD/fWpe96NuHkoS9h0ccGOTe0C4NGXdtS0iObOw==}

  hast-util-to-jsx-runtime@2.3.6:
    resolution: {integrity: sha512-zl6s8LwNyo1P9uw+XJGvZtdFF1GdAkOg8ujOw+4Pyb76874fLps4ueHXDhXWdk6YHQ6OgUtinliG7RsYvCbbBg==}

  hast-util-to-parse5@8.0.0:
    resolution: {integrity: sha512-3KKrV5ZVI8if87DVSi1vDeByYrkGzg4mEfeu4alwgmmIeARiBLKCZS2uw5Gb6nU9x9Yufyj3iudm6i7nl52PFw==}

  hast-util-to-text@4.0.2:
    resolution: {integrity: sha512-KK6y/BN8lbaq654j7JgBydev7wuNMcID54lkRav1P0CaE1e47P72AWWPiGKXTJU271ooYzcvTAn/Zt0REnvc7A==}

  hast-util-whitespace@3.0.0:
    resolution: {integrity: sha512-88JUN06ipLwsnv+dVn+OIYOvAuvBMy/Qoi6O7mQHxdPXpjy+Cd6xRkWwux7DKO+4sYILtLBRIKgsdpS2gQc7qw==}

  hastscript@6.0.0:
    resolution: {integrity: sha512-nDM6bvd7lIqDUiYEiu5Sl/+6ReP0BMk/2f4U/Rooccxkj0P5nm+acM5PrGJ/t5I8qPGiqZSE6hVAwZEdZIvP4w==}

  hastscript@9.0.1:
    resolution: {integrity: sha512-g7df9rMFX/SPi34tyGCyUBREQoKkapwdY/T04Qn9TDWfHhAYt4/I0gMVirzK5wEzeUqIjEB+LXC/ypb7Aqno5w==}

  hermes-estree@0.25.1:
    resolution: {integrity: sha512-0wUoCcLp+5Ev5pDW2OriHC2MJCbwLwuRx+gAqMTOkGKJJiBCLjtrvy4PWUGn6MIVefecRpzoOZ/UV6iGdOr+Cw==}

  hermes-estree@0.28.1:
    resolution: {integrity: sha512-w3nxl/RGM7LBae0v8LH2o36+8VqwOZGv9rX1wyoWT6YaKZLqpJZ0YQ5P0LVr3tuRpf7vCx0iIG4i/VmBJejxTQ==}

  hermes-parser@0.25.1:
    resolution: {integrity: sha512-6pEjquH3rqaI6cYAXYPcz9MS4rY6R4ngRgrgfDshRptUZIc3lw0MCIJIGDj9++mfySOuPTHB4nrSW99BCvOPIA==}

  hermes-parser@0.28.1:
    resolution: {integrity: sha512-nf8o+hE8g7UJWParnccljHumE9Vlq8F7MqIdeahl+4x0tvCUJYRrT0L7h0MMg/X9YJmkNwsfbaNNrzPtFXOscg==}

  highlight.js@10.7.3:
    resolution: {integrity: sha512-tzcUFauisWKNHaRkN4Wjl/ZA07gENAjFl3J/c480dprkGTg5EQstgaNFqBfUqCq54kZRIEcreTsAgF/m2quD7A==}

  highlightjs-vue@1.0.0:
    resolution: {integrity: sha512-PDEfEF102G23vHmPhLyPboFCD+BkMGu+GuJe2d9/eH4FsCwvgBpnc9n0pGE+ffKdph38s6foEZiEjdgHdzp+IA==}

  hoist-non-react-statics@3.3.2:
    resolution: {integrity: sha512-/gGivxi8JPKWNm/W0jSmzcMPpfpPLc3dY/6GxhX2hQ9iGj3aDfklV4ET7NjKpSinLpJ5vafa9iiGIEZg10SfBw==}

  html-url-attributes@3.0.1:
    resolution: {integrity: sha512-ol6UPyBWqsrO6EJySPz2O7ZSr856WDrEzM5zMqp+FJJLGMW35cLYmmZnl0vztAZxRUoNZJFTCohfjuIJ8I4QBQ==}

  html-void-elements@3.0.0:
    resolution: {integrity: sha512-bEqo66MRXsUGxWHV5IP0PUiAWwoEjba4VCzg0LjFJBpchPaTfyfCKTG6bc5F8ucKec3q5y6qOdGyYTSBEvhCrg==}

  http-errors@2.0.0:
    resolution: {integrity: sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==}
    engines: {node: '>= 0.8'}

  https-proxy-agent@7.0.6:
    resolution: {integrity: sha512-vK9P5/iUfdl95AI+JVyUuIcVtd4ofvtrOr3HNtM2yxC9bnMbEdp3x01OhQNnjb8IJYi38VlTE3mBXwcfvywuSw==}
    engines: {node: '>= 14'}

  ieee754@1.2.1:
    resolution: {integrity: sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==}

  image-size@1.2.1:
    resolution: {integrity: sha512-rH+46sQJ2dlwfjfhCyNx5thzrv+dtmBIhPHk0zgRUukHzZ/kRueTJXoYYsclBaKcSMBWuGbOFXtioLpzTb5euw==}
    engines: {node: '>=16.x'}
    hasBin: true

  import-fresh@2.0.0:
    resolution: {integrity: sha512-eZ5H8rcgYazHbKC3PG4ClHNykCSxtAhxSSEM+2mb+7evD2CKF5V7c0dNum7AdpDh0ZdICwZY9sRSn8f+KH96sg==}
    engines: {node: '>=4'}

  import-fresh@3.3.1:
    resolution: {integrity: sha512-TR3KfrTZTYLPB6jUjfx6MF9WcWrHL9su5TObK4ZkYgBdWKPOFoSoQIdEuTuR82pmtxH2spWG9h6etwfr1pLBqQ==}
    engines: {node: '>=6'}

  imurmurhash@0.1.4:
    resolution: {integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==}
    engines: {node: '>=0.8.19'}

  inflight@1.0.6:
    resolution: {integrity: sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==}
    deprecated: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.

  inherits@2.0.4:
    resolution: {integrity: sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==}

  inline-style-parser@0.2.4:
    resolution: {integrity: sha512-0aO8FkhNZlj/ZIbNi7Lxxr12obT7cL1moPfE4tg1LkX7LlLfC6DeX4l2ZEud1ukP9jNQyNnfzQVqwbwmAATY4Q==}

  input-otp@1.4.2:
    resolution: {integrity: sha512-l3jWwYNvrEa6NTCt7BECfCm48GvwuZzkoeG3gBL2w4CHeOXW3eKFmf9UNYkNfYc3mxMrthMnxjIE07MT0zLBQA==}
    peerDependencies:
      react: ^16.8 || ^17.0 || ^18.0 || ^19.0.0 || ^19.0.0-rc
      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0.0 || ^19.0.0-rc

  internmap@2.0.3:
    resolution: {integrity: sha512-5Hh7Y1wQbvY5ooGgPbDaL5iYLAPzMTUrjMulskHLH6wnv/A+1q5rgEaiuqEjB+oxGXIVZs1FF+R/KPN3ZSQYYg==}
    engines: {node: '>=12'}

  invariant@2.2.4:
    resolution: {integrity: sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==}

  is-alphabetical@1.0.4:
    resolution: {integrity: sha512-DwzsA04LQ10FHTZuL0/grVDk4rFoVH1pjAToYwBrHSxcrBIGQuXrQMtD5U1b0U2XVgKZCTLLP8u2Qxqhy3l2Vg==}

  is-alphabetical@2.0.1:
    resolution: {integrity: sha512-FWyyY60MeTNyeSRpkM2Iry0G9hpr7/9kD40mD/cGQEuilcZYS4okz8SN2Q6rLCJ8gbCt6fN+rC+6tMGS99LaxQ==}

  is-alphanumerical@1.0.4:
    resolution: {integrity: sha512-UzoZUr+XfVz3t3v4KyGEniVL9BDRoQtY7tOyrRybkVNjDFWyo1yhXNGrrBTQxp3ib9BLAWs7k2YKBQsFRkZG9A==}

  is-alphanumerical@2.0.1:
    resolution: {integrity: sha512-hmbYhX/9MUMF5uh7tOXyK/n0ZvWpad5caBA17GsC6vyuCqaWliRG5K1qS9inmUhEMaOBIW7/whAnSwveW/LtZw==}

  is-arrayish@0.2.1:
    resolution: {integrity: sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==}

  is-arrayish@0.3.2:
    resolution: {integrity: sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ==}

  is-binary-path@2.1.0:
    resolution: {integrity: sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==}
    engines: {node: '>=8'}

  is-buffer@1.1.6:
    resolution: {integrity: sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==}

  is-core-module@2.16.1:
    resolution: {integrity: sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==}
    engines: {node: '>= 0.4'}

  is-decimal@1.0.4:
    resolution: {integrity: sha512-RGdriMmQQvZ2aqaQq3awNA6dCGtKpiDFcOzrTWrDAT2MiWrKQVPmxLGHl7Y2nNu6led0kEyoX0enY0qXYsv9zw==}

  is-decimal@2.0.1:
    resolution: {integrity: sha512-AAB9hiomQs5DXWcRB1rqsxGUstbRroFOPPVAomNk/3XHR5JyEZChOyTWe2oayKnsSsr/kcGqF+z6yuH6HHpN0A==}

  is-directory@0.3.1:
    resolution: {integrity: sha512-yVChGzahRFvbkscn2MlwGismPO12i9+znNruC5gVEntG3qu0xQMzsGg/JFbrsqDOHtHFPci+V5aP5T9I+yeKqw==}
    engines: {node: '>=0.10.0'}

  is-docker@2.2.1:
    resolution: {integrity: sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWhHH5p77PbmYCvvUuXQ==}
    engines: {node: '>=8'}
    hasBin: true

  is-extglob@2.1.1:
    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}
    engines: {node: '>=0.10.0'}

  is-fullwidth-code-point@3.0.0:
    resolution: {integrity: sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==}
    engines: {node: '>=8'}

  is-glob@4.0.3:
    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}
    engines: {node: '>=0.10.0'}

  is-hexadecimal@1.0.4:
    resolution: {integrity: sha512-gyPJuv83bHMpocVYoqof5VDiZveEoGoFL8m3BXNb2VW8Xs+rz9kqO8LOQ5DH6EsuvilT1ApazU0pyl+ytbPtlw==}

  is-hexadecimal@2.0.1:
    resolution: {integrity: sha512-DgZQp241c8oO6cA1SbTEWiXeoxV42vlcJxgH+B3hi1AiqqKruZR3ZGF8In3fj4+/y/7rHvlOZLZtgJ/4ttYGZg==}

  is-number@7.0.0:
    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}
    engines: {node: '>=0.12.0'}

  is-plain-obj@4.1.0:
    resolution: {integrity: sha512-+Pgi+vMuUNkJyExiMBt5IlFoMyKnr5zhJ4Uspz58WOhBF5QoIZkFyNHIbBAtHwzVAgk5RtndVNsDRN61/mmDqg==}
    engines: {node: '>=12'}

  is-wsl@2.2.0:
    resolution: {integrity: sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3n1oBnohoVTBaN7Lww==}
    engines: {node: '>=8'}

  isexe@2.0.0:
    resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}

  istanbul-lib-coverage@3.2.2:
    resolution: {integrity: sha512-O8dpsF+r0WV/8MNRKfnmrtCWhuKjxrq2w+jpzBL5UZKTi2LeVWnWOmWRxFlesJONmc+wLAGvKQZEOanko0LFTg==}
    engines: {node: '>=8'}

  istanbul-lib-instrument@5.2.1:
    resolution: {integrity: sha512-pzqtp31nLv/XFOzXGuvhCb8qhjmTVo5vjVk19XE4CRlSWz0KoeJ3bw9XsA7nOp9YBf4qHjwBxkDzKcME/J29Yg==}
    engines: {node: '>=8'}

  its-fine@1.2.5:
    resolution: {integrity: sha512-fXtDA0X0t0eBYAGLVM5YsgJGsJ5jEmqZEPrGbzdf5awjv0xE7nqv3TVnvtUF060Tkes15DbDAKW/I48vsb6SyA==}
    peerDependencies:
      react: '>=18.0'

  its-fine@2.0.0:
    resolution: {integrity: sha512-KLViCmWx94zOvpLwSlsx6yOCeMhZYaxrJV87Po5k/FoZzcPSahvK5qJ7fYhS61sZi5ikmh2S3Hz55A2l3U69ng==}
    peerDependencies:
      react: ^19.0.0

  jackspeak@3.4.3:
    resolution: {integrity: sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==}

  jest-environment-node@29.7.0:
    resolution: {integrity: sha512-DOSwCRqXirTOyheM+4d5YZOrWcdu0LNZ87ewUoywbcb2XR4wKgqiG8vNeYwhjFMbEkfju7wx2GYH0P2gevGvFw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-get-type@29.6.3:
    resolution: {integrity: sha512-zrteXnqYxfQh7l5FHyL38jL39di8H8rHoecLH3JNxH3BwOrBsNeabdap5e0I23lD4HHI8W5VFBZqG4Eaq5LNcw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-haste-map@29.7.0:
    resolution: {integrity: sha512-fP8u2pyfqx0K1rGn1R9pyE0/KTn+G7PxktWidOBTqFPLYX0b9ksaMFkhK5vrS3DVun09pckLdlx90QthlW7AmA==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-message-util@29.7.0:
    resolution: {integrity: sha512-GBEV4GRADeP+qtB2+6u61stea8mGcOT4mCtrYISZwfu9/ISHFJ/5zOMXYbpBE9RsS5+Gb63DW4FgmnKJ79Kf6w==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-mock@29.7.0:
    resolution: {integrity: sha512-ITOMZn+UkYS4ZFh83xYAOzWStloNzJFO2s8DWrE4lhtGD+AorgnbkiKERe4wQVBydIGPx059g6riW5Btp6Llnw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-regex-util@29.6.3:
    resolution: {integrity: sha512-KJJBsRCyyLNWCNBOvZyRDnAIfUiRJ8v+hOBQYGn8gDyF3UegwiP4gwRR3/SDa42g1YbVycTidUF3rKjyLFDWbg==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-util@29.7.0:
    resolution: {integrity: sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-validate@29.7.0:
    resolution: {integrity: sha512-ZB7wHqaRGVw/9hST/OuFUReG7M8vKeq0/J2egIGLdvjHCmYqGARhzXmtgi+gVeZ5uXFF219aOc3Ls2yLg27tkw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jest-worker@29.7.0:
    resolution: {integrity: sha512-eIz2msL/EzL9UFTFFx7jBTkeZfku0yUAyZZZmJ93H2TYEiroIx2PQjEXcwYtYl8zXCxb+PAmA2hLIt/6ZEkPHw==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  jiti@1.21.7:
    resolution: {integrity: sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==}
    hasBin: true

  jotai@2.12.4:
    resolution: {integrity: sha512-eFXLJol4oOLM8BS1+QV+XwaYQITG8n1tatBCFl4F5HE3zR5j2WIK8QpMt7VJIYmlogNUZfvB7wjwLoVk+umB9Q==}
    engines: {node: '>=12.20.0'}
    peerDependencies:
      '@types/react': '>=17.0.0'
      react: '>=17.0.0'
    peerDependenciesMeta:
      '@types/react':
        optional: true
      react:
        optional: true

  js-tokens@4.0.0:
    resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}

  js-yaml@3.14.1:
    resolution: {integrity: sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==}
    hasBin: true

  jsc-safe-url@0.2.4:
    resolution: {integrity: sha512-0wM3YBWtYePOjfyXQH5MWQ8H7sdk5EXSwZvmSLKk2RboVQ2Bu239jycHDz5J/8Blf3K0Qnoy2b6xD+z10MFB+Q==}

  jsesc@3.1.0:
    resolution: {integrity: sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==}
    engines: {node: '>=6'}
    hasBin: true

  json-parse-better-errors@1.0.2:
    resolution: {integrity: sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw==}

  json-parse-even-better-errors@2.3.1:
    resolution: {integrity: sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==}

  json5@2.2.3:
    resolution: {integrity: sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==}
    engines: {node: '>=6'}
    hasBin: true

  katex@0.16.22:
    resolution: {integrity: sha512-XCHRdUw4lf3SKBaJe4EvgqIuWwkPSo9XoeO8GjQW94Bp7TWv9hNhzZjZ+OH9yf1UmLygb7DIT5GSFQiyt16zYg==}
    hasBin: true

  kind-of@3.2.2:
    resolution: {integrity: sha512-NOW9QQXMoZGg/oqnVNoNTTIFEIid1627WCffUBJEdMxYApq7mNE7CpzucIPc+ZQg25Phej7IJSmX3hO+oblOtQ==}
    engines: {node: '>=0.10.0'}

  konva@9.3.20:
    resolution: {integrity: sha512-7XPD/YtgfzC8b1c7z0hhY5TF1IO/pBYNa29zMTA2PeBaqI0n5YplUeo4JRuRcljeAF8lWtW65jePZZF7064c8w==}

  leven@3.1.0:
    resolution: {integrity: sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==}
    engines: {node: '>=6'}

  lighthouse-logger@1.4.2:
    resolution: {integrity: sha512-gPWxznF6TKmUHrOQjlVo2UbaL2EJ71mb2CCeRs/2qBpi4L/g4LUVc9+3lKQ6DTUZwJswfM7ainGrLO1+fOqa2g==}

  lilconfig@3.1.3:
    resolution: {integrity: sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==}
    engines: {node: '>=14'}

  lines-and-columns@1.2.4:
    resolution: {integrity: sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==}

  locate-path@5.0.0:
    resolution: {integrity: sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==}
    engines: {node: '>=8'}

  lodash.castarray@4.4.0:
    resolution: {integrity: sha512-aVx8ztPv7/2ULbArGJ2Y42bG1mEQ5mGjpdvrbJcJFU3TbYybe+QlLS4pst9zV52ymy2in1KpFPiZnAOATxD4+Q==}

  lodash.isplainobject@4.0.6:
    resolution: {integrity: sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==}

  lodash.merge@4.6.2:
    resolution: {integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==}

  lodash.throttle@4.1.1:
    resolution: {integrity: sha512-wIkUCfVKpVsWo3JSZlc+8MB5it+2AN5W8J7YVMST30UrvcQNZ1Okbj+rbVniijTWE6FGYy4XJq/rHkas8qJMLQ==}

  lodash@4.17.21:
    resolution: {integrity: sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==}

  longest-streak@3.1.0:
    resolution: {integrity: sha512-9Ri+o0JYgehTaVBBDoMqIl8GXtbWg711O3srftcHhZ0dqnETqLaoIK0x17fUw9rFSlK/0NlsKe0Ahhyl5pXE2g==}

  loose-envify@1.4.0:
    resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}
    hasBin: true

  lowlight@1.20.0:
    resolution: {integrity: sha512-8Ktj+prEb1RoCPkEOrPMYUN/nCggB7qAWe3a7OpMjWQkh3l2RD5wKRQ+o8Q8YuI9RG/xs95waaI/E6ym/7NsTw==}

  lru-cache@10.4.3:
    resolution: {integrity: sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==}

  lru-cache@5.1.1:
    resolution: {integrity: sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==}

  lucide-react@0.454.0:
    resolution: {integrity: sha512-hw7zMDwykCLnEzgncEEjHeA6+45aeEzRYuKHuyRSOPkhko+J3ySGjGIzu+mmMfDFG1vazHepMaYFYHbTFAZAAQ==}
    peerDependencies:
      react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0-rc

  makeerror@1.0.12:
    resolution: {integrity: sha512-JmqCvUhmt43madlpFzG4BQzG2Z3m6tvQDNKdClZnO3VbIudJYmxsT0FNJMeiB2+JTSlTQTSbU8QdesVmwJcmLg==}

  markdown-table@3.0.4:
    resolution: {integrity: sha512-wiYz4+JrLyb/DqW2hkFJxP7Vd7JuTDm77fvbM8VfEQdmSMqcImWeeRbHwZjBjIFki/VaMK2BhFi7oUUZeM5bqw==}

  marky@1.3.0:
    resolution: {integrity: sha512-ocnPZQLNpvbedwTy9kNrQEsknEfgvcLMvOtz3sFeWApDq1MXH1TqkCIx58xlpESsfwQOnuBO9beyQuNGzVvuhQ==}

  material-icon-theme@5.23.0:
    resolution: {integrity: sha512-coDbg7MzBzQoLfv501w63pP1QjyCbP5mICm40WxyHIxa+aA4yS9QMOKGzaZDsq7oUKjJ0NfjjkIMG4ngGO9erQ==}
    engines: {vscode: ^1.55.0}

  mdast-util-find-and-replace@3.0.2:
    resolution: {integrity: sha512-Tmd1Vg/m3Xz43afeNxDIhWRtFZgM2VLyaf4vSTYwudTyeuTneoL3qtWMA5jeLyz/O1vDJmmV4QuScFCA2tBPwg==}

  mdast-util-from-markdown@2.0.2:
    resolution: {integrity: sha512-uZhTV/8NBuw0WHkPTrCqDOl0zVe1BIng5ZtHoDk49ME1qqcjYmmLmOf0gELgcRMxN4w2iuIeVso5/6QymSrgmA==}

  mdast-util-gfm-autolink-literal@2.0.1:
    resolution: {integrity: sha512-5HVP2MKaP6L+G6YaxPNjuL0BPrq9orG3TsrZ9YXbA3vDw/ACI4MEsnoDpn6ZNm7GnZgtAcONJyPhOP8tNJQavQ==}

  mdast-util-gfm-footnote@2.1.0:
    resolution: {integrity: sha512-sqpDWlsHn7Ac9GNZQMeUzPQSMzR6Wv0WKRNvQRg0KqHh02fpTz69Qc1QSseNX29bhz1ROIyNyxExfawVKTm1GQ==}

  mdast-util-gfm-strikethrough@2.0.0:
    resolution: {integrity: sha512-mKKb915TF+OC5ptj5bJ7WFRPdYtuHv0yTRxK2tJvi+BDqbkiG7h7u/9SI89nRAYcmap2xHQL9D+QG/6wSrTtXg==}

  mdast-util-gfm-table@2.0.0:
    resolution: {integrity: sha512-78UEvebzz/rJIxLvE7ZtDd/vIQ0RHv+3Mh5DR96p7cS7HsBhYIICDBCu8csTNWNO6tBWfqXPWekRuj2FNOGOZg==}

  mdast-util-gfm-task-list-item@2.0.0:
    resolution: {integrity: sha512-IrtvNvjxC1o06taBAVJznEnkiHxLFTzgonUdy8hzFVeDun0uTjxxrRGVaNFqkU1wJR3RBPEfsxmU6jDWPofrTQ==}

  mdast-util-gfm@3.1.0:
    resolution: {integrity: sha512-0ulfdQOM3ysHhCJ1p06l0b0VKlhU0wuQs3thxZQagjcjPrlFRqY215uZGHHJan9GEAXd9MbfPjFJz+qMkVR6zQ==}

  mdast-util-math@3.0.0:
    resolution: {integrity: sha512-Tl9GBNeG/AhJnQM221bJR2HPvLOSnLE/T9cJI9tlc6zwQk2nPk/4f0cHkOdEixQPC/j8UtKDdITswvLAy1OZ1w==}

  mdast-util-mdx-expression@2.0.1:
    resolution: {integrity: sha512-J6f+9hUp+ldTZqKRSg7Vw5V6MqjATc+3E4gf3CFNcuZNWD8XdyI6zQ8GqH7f8169MM6P7hMBRDVGnn7oHB9kXQ==}

  mdast-util-mdx-jsx@3.2.0:
    resolution: {integrity: sha512-lj/z8v0r6ZtsN/cGNNtemmmfoLAFZnjMbNyLzBafjzikOM+glrjNHPlf6lQDOTccj9n5b0PPihEBbhneMyGs1Q==}

  mdast-util-mdxjs-esm@2.0.1:
    resolution: {integrity: sha512-EcmOpxsZ96CvlP03NghtH1EsLtr0n9Tm4lPUJUBccV9RwUOneqSycg19n5HGzCf+10LozMRSObtVr3ee1WoHtg==}

  mdast-util-phrasing@4.1.0:
    resolution: {integrity: sha512-TqICwyvJJpBwvGAMZjj4J2n0X8QWp21b9l0o7eXyVJ25YNWYbJDVIyD1bZXE6WtV6RmKJVYmQAKWa0zWOABz2w==}

  mdast-util-to-hast@13.2.0:
    resolution: {integrity: sha512-QGYKEuUsYT9ykKBCMOEDLsU5JRObWQusAolFMeko/tYPufNkRffBAQjIE+99jbA87xv6FgmjLtwjh9wBWajwAA==}

  mdast-util-to-markdown@2.1.2:
    resolution: {integrity: sha512-xj68wMTvGXVOKonmog6LwyJKrYXZPvlwabaryTjLh9LuvovB/KAH+kvi8Gjj+7rJjsFi23nkUxRQv1KqSroMqA==}

  mdast-util-to-string@4.0.0:
    resolution: {integrity: sha512-0H44vDimn51F0YwvxSJSm0eCDOJTRlmN0R1yBh4HLj9wiV1Dn0QoXGbvFAWj2hSItVTlCmBF1hqKlIyUBVFLPg==}

  mdi-material-ui@7.9.4:
    resolution: {integrity: sha512-bk+3A6ogY3r/TveGgD/PRhFkqctG3XmPPm5rTuj81aoYuv1xw4T3Ml+A/PsrCWhbgicZbGbC6r0jYg5vcFTTXQ==}
    peerDependencies:
      '@mui/material': ^5.0.0 || ^6.0.0 || ^7.0.0
      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0

  memoize-one@5.2.1:
    resolution: {integrity: sha512-zYiwtZUcYyXKo/np96AGZAckk+FWWsUdJ3cHGGmld7+AhvcWmQyGCYUh1hc4Q/pkOhb65dQR/pqCyK0cOaHz4Q==}

  merge-stream@2.0.0:
    resolution: {integrity: sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==}

  merge2@1.4.1:
    resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}
    engines: {node: '>= 8'}

  metro-babel-transformer@0.82.4:
    resolution: {integrity: sha512-4juJahGRb1gmNbQq48lNinB6WFNfb6m0BQqi/RQibEltNiqTCxew/dBspI2EWA4xVCd3mQWGfw0TML4KurQZnQ==}
    engines: {node: '>=18.18'}

  metro-cache-key@0.82.4:
    resolution: {integrity: sha512-2JCTqcpF+f2OghOpe/+x+JywfzDkrHdAqinPFWmK2ezNAU/qX0jBFaTETogPibFivxZJil37w9Yp6syX8rFUng==}
    engines: {node: '>=18.18'}

  metro-cache@0.82.4:
    resolution: {integrity: sha512-vX0ylSMGtORKiZ4G8uP6fgfPdDiCWvLZUGZ5zIblSGylOX6JYhvExl0Zg4UA9pix/SSQu5Pnp9vdODMFsNIxhw==}
    engines: {node: '>=18.18'}

  metro-config@0.82.4:
    resolution: {integrity: sha512-Ki3Wumr3hKHGDS7RrHsygmmRNc/PCJrvkLn0+BWWxmbOmOcMMJDSmSI+WRlT8jd5VPZFxIi4wg+sAt5yBXAK0g==}
    engines: {node: '>=18.18'}

  metro-core@0.82.4:
    resolution: {integrity: sha512-Xo4ozbxPg2vfgJGCgXZ8sVhC2M0lhTqD+tsKO2q9aelq/dCjnnSb26xZKcQO80CQOQUL7e3QWB7pLFGPjZm31A==}
    engines: {node: '>=18.18'}

  metro-file-map@0.82.4:
    resolution: {integrity: sha512-eO7HD1O3aeNsbEe6NBZvx1lLJUrxgyATjnDmb7bm4eyF6yWOQot9XVtxTDLNifECuvsZ4jzRiTInrbmIHkTdGA==}
    engines: {node: '>=18.18'}

  metro-minify-terser@0.82.4:
    resolution: {integrity: sha512-W79Mi6BUwWVaM8Mc5XepcqkG+TSsCyyo//dmTsgYfJcsmReQorRFodil3bbJInETvjzdnS1mCsUo9pllNjT1Hg==}
    engines: {node: '>=18.18'}

  metro-resolver@0.82.4:
    resolution: {integrity: sha512-uWoHzOBGQTPT5PjippB8rRT3iI9CTgFA9tRiLMzrseA5o7YAlgvfTdY9vFk2qyk3lW3aQfFKWkmqENryPRpu+Q==}
    engines: {node: '>=18.18'}

  metro-runtime@0.82.4:
    resolution: {integrity: sha512-vVyFO7H+eLXRV2E7YAUYA7aMGBECGagqxmFvC2hmErS7oq90BbPVENfAHbUWq1vWH+MRiivoRxdxlN8gBoF/dw==}
    engines: {node: '>=18.18'}

  metro-source-map@0.82.4:
    resolution: {integrity: sha512-9jzDQJ0FPas1FuQFtwmBHsez2BfhFNufMowbOMeG3ZaFvzeziE8A0aJwILDS3U+V5039ssCQFiQeqDgENWvquA==}
    engines: {node: '>=18.18'}

  metro-symbolicate@0.82.4:
    resolution: {integrity: sha512-LwEwAtdsx7z8rYjxjpLWxuFa2U0J6TS6ljlQM4WAATKa4uzV8unmnRuN2iNBWTmRqgNR77mzmI2vhwD4QSCo+w==}
    engines: {node: '>=18.18'}
    hasBin: true

  metro-transform-plugins@0.82.4:
    resolution: {integrity: sha512-NoWQRPHupVpnDgYguiEcm7YwDhnqW02iWWQjO2O8NsNP09rEMSq99nPjARWfukN7+KDh6YjLvTIN20mj3dk9kw==}
    engines: {node: '>=18.18'}

  metro-transform-worker@0.82.4:
    resolution: {integrity: sha512-kPI7Ad/tdAnI9PY4T+2H0cdgGeSWWdiPRKuytI806UcN4VhFL6OmYa19/4abYVYF+Cd2jo57CDuwbaxRfmXDhw==}
    engines: {node: '>=18.18'}

  metro@0.82.4:
    resolution: {integrity: sha512-/gFmw3ux9CPG5WUmygY35hpyno28zi/7OUn6+OFfbweA8l0B+PPqXXLr0/T6cf5nclCcH0d22o+02fICaShVxw==}
    engines: {node: '>=18.18'}
    hasBin: true

  micromark-core-commonmark@2.0.3:
    resolution: {integrity: sha512-RDBrHEMSxVFLg6xvnXmb1Ayr2WzLAWjeSATAoxwKYJV94TeNavgoIdA0a9ytzDSVzBy2YKFK+emCPOEibLeCrg==}

  micromark-extension-gfm-autolink-literal@2.1.0:
    resolution: {integrity: sha512-oOg7knzhicgQ3t4QCjCWgTmfNhvQbDDnJeVu9v81r7NltNCVmhPy1fJRX27pISafdjL+SVc4d3l48Gb6pbRypw==}

  micromark-extension-gfm-footnote@2.1.0:
    resolution: {integrity: sha512-/yPhxI1ntnDNsiHtzLKYnE3vf9JZ6cAisqVDauhp4CEHxlb4uoOTxOCJ+9s51bIB8U1N1FJ1RXOKTIlD5B/gqw==}

  micromark-extension-gfm-strikethrough@2.1.0:
    resolution: {integrity: sha512-ADVjpOOkjz1hhkZLlBiYA9cR2Anf8F4HqZUO6e5eDcPQd0Txw5fxLzzxnEkSkfnD0wziSGiv7sYhk/ktvbf1uw==}

  micromark-extension-gfm-table@2.1.1:
    resolution: {integrity: sha512-t2OU/dXXioARrC6yWfJ4hqB7rct14e8f7m0cbI5hUmDyyIlwv5vEtooptH8INkbLzOatzKuVbQmAYcbWoyz6Dg==}

  micromark-extension-gfm-tagfilter@2.0.0:
    resolution: {integrity: sha512-xHlTOmuCSotIA8TW1mDIM6X2O1SiX5P9IuDtqGonFhEK0qgRI4yeC6vMxEV2dgyr2TiD+2PQ10o+cOhdVAcwfg==}

  micromark-extension-gfm-task-list-item@2.1.0:
    resolution: {integrity: sha512-qIBZhqxqI6fjLDYFTBIa4eivDMnP+OZqsNwmQ3xNLE4Cxwc+zfQEfbs6tzAo2Hjq+bh6q5F+Z8/cksrLFYWQQw==}

  micromark-extension-gfm@3.0.0:
    resolution: {integrity: sha512-vsKArQsicm7t0z2GugkCKtZehqUm31oeGBV/KVSorWSy8ZlNAv7ytjFhvaryUiCUJYqs+NoE6AFhpQvBTM6Q4w==}

  micromark-extension-math@3.1.0:
    resolution: {integrity: sha512-lvEqd+fHjATVs+2v/8kg9i5Q0AP2k85H0WUOwpIVvUML8BapsMvh1XAogmQjOCsLpoKRCVQqEkQBB3NhVBcsOg==}

  micromark-factory-destination@2.0.1:
    resolution: {integrity: sha512-Xe6rDdJlkmbFRExpTOmRj9N3MaWmbAgdpSrBQvCFqhezUn4AHqJHbaEnfbVYYiexVSs//tqOdY/DxhjdCiJnIA==}

  micromark-factory-label@2.0.1:
    resolution: {integrity: sha512-VFMekyQExqIW7xIChcXn4ok29YE3rnuyveW3wZQWWqF4Nv9Wk5rgJ99KzPvHjkmPXF93FXIbBp6YdW3t71/7Vg==}

  micromark-factory-space@2.0.1:
    resolution: {integrity: sha512-zRkxjtBxxLd2Sc0d+fbnEunsTj46SWXgXciZmHq0kDYGnck/ZSGj9/wULTV95uoeYiK5hRXP2mJ98Uo4cq/LQg==}

  micromark-factory-title@2.0.1:
    resolution: {integrity: sha512-5bZ+3CjhAd9eChYTHsjy6TGxpOFSKgKKJPJxr293jTbfry2KDoWkhBb6TcPVB4NmzaPhMs1Frm9AZH7OD4Cjzw==}

  micromark-factory-whitespace@2.0.1:
    resolution: {integrity: sha512-Ob0nuZ3PKt/n0hORHyvoD9uZhr+Za8sFoP+OnMcnWK5lngSzALgQYKMr9RJVOWLqQYuyn6ulqGWSXdwf6F80lQ==}

  micromark-util-character@2.1.1:
    resolution: {integrity: sha512-wv8tdUTJ3thSFFFJKtpYKOYiGP2+v96Hvk4Tu8KpCAsTMs6yi+nVmGh1syvSCsaxz45J6Jbw+9DD6g97+NV67Q==}

  micromark-util-chunked@2.0.1:
    resolution: {integrity: sha512-QUNFEOPELfmvv+4xiNg2sRYeS/P84pTW0TCgP5zc9FpXetHY0ab7SxKyAQCNCc1eK0459uoLI1y5oO5Vc1dbhA==}

  micromark-util-classify-character@2.0.1:
    resolution: {integrity: sha512-K0kHzM6afW/MbeWYWLjoHQv1sgg2Q9EccHEDzSkxiP/EaagNzCm7T/WMKZ3rjMbvIpvBiZgwR3dKMygtA4mG1Q==}

  micromark-util-combine-extensions@2.0.1:
    resolution: {integrity: sha512-OnAnH8Ujmy59JcyZw8JSbK9cGpdVY44NKgSM7E9Eh7DiLS2E9RNQf0dONaGDzEG9yjEl5hcqeIsj4hfRkLH/Bg==}

  micromark-util-decode-numeric-character-reference@2.0.2:
    resolution: {integrity: sha512-ccUbYk6CwVdkmCQMyr64dXz42EfHGkPQlBj5p7YVGzq8I7CtjXZJrubAYezf7Rp+bjPseiROqe7G6foFd+lEuw==}

  micromark-util-decode-string@2.0.1:
    resolution: {integrity: sha512-nDV/77Fj6eH1ynwscYTOsbK7rR//Uj0bZXBwJZRfaLEJ1iGBR6kIfNmlNqaqJf649EP0F3NWNdeJi03elllNUQ==}

  micromark-util-encode@2.0.1:
    resolution: {integrity: sha512-c3cVx2y4KqUnwopcO9b/SCdo2O67LwJJ/UyqGfbigahfegL9myoEFoDYZgkT7f36T0bLrM9hZTAaAyH+PCAXjw==}

  micromark-util-html-tag-name@2.0.1:
    resolution: {integrity: sha512-2cNEiYDhCWKI+Gs9T0Tiysk136SnR13hhO8yW6BGNyhOC4qYFnwF1nKfD3HFAIXA5c45RrIG1ub11GiXeYd1xA==}

  micromark-util-normalize-identifier@2.0.1:
    resolution: {integrity: sha512-sxPqmo70LyARJs0w2UclACPUUEqltCkJ6PhKdMIDuJ3gSf/Q+/GIe3WKl0Ijb/GyH9lOpUkRAO2wp0GVkLvS9Q==}

  micromark-util-resolve-all@2.0.1:
    resolution: {integrity: sha512-VdQyxFWFT2/FGJgwQnJYbe1jjQoNTS4RjglmSjTUlpUMa95Htx9NHeYW4rGDJzbjvCsl9eLjMQwGeElsqmzcHg==}

  micromark-util-sanitize-uri@2.0.1:
    resolution: {integrity: sha512-9N9IomZ/YuGGZZmQec1MbgxtlgougxTodVwDzzEouPKo3qFWvymFHWcnDi2vzV1ff6kas9ucW+o3yzJK9YB1AQ==}

  micromark-util-subtokenize@2.1.0:
    resolution: {integrity: sha512-XQLu552iSctvnEcgXw6+Sx75GflAPNED1qx7eBJ+wydBb2KCbRZe+NwvIEEMM83uml1+2WSXpBAcp9IUCgCYWA==}

  micromark-util-symbol@2.0.1:
    resolution: {integrity: sha512-vs5t8Apaud9N28kgCrRUdEed4UJ+wWNvicHLPxCa9ENlYuAY31M0ETy5y1vA33YoNPDFTghEbnh6efaE8h4x0Q==}

  micromark-util-types@2.0.2:
    resolution: {integrity: sha512-Yw0ECSpJoViF1qTU4DC6NwtC4aWGt1EkzaQB8KPPyCRR8z9TWeV0HbEFGTO+ZY1wB22zmxnJqhPyTpOVCpeHTA==}

  micromark@4.0.2:
    resolution: {integrity: sha512-zpe98Q6kvavpCr1NPVSCMebCKfD7CA2NqZ+rykeNhONIJBpc1tFKt9hucLGwha3jNTNI8lHpctWJWoimVF4PfA==}

  micromatch@4.0.8:
    resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}
    engines: {node: '>=8.6'}

  mime-db@1.52.0:
    resolution: {integrity: sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==}
    engines: {node: '>= 0.6'}

  mime-types@2.1.35:
    resolution: {integrity: sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==}
    engines: {node: '>= 0.6'}

  mime@1.6.0:
    resolution: {integrity: sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==}
    engines: {node: '>=4'}
    hasBin: true

  minimatch@3.1.2:
    resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}

  minimatch@9.0.5:
    resolution: {integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==}
    engines: {node: '>=16 || 14 >=14.17'}

  minipass@7.1.2:
    resolution: {integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==}
    engines: {node: '>=16 || 14 >=14.17'}

  mkdirp@1.0.4:
    resolution: {integrity: sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==}
    engines: {node: '>=10'}
    hasBin: true

  monaco-editor@0.50.0:
    resolution: {integrity: sha512-8CclLCmrRRh+sul7C08BmPBP3P8wVWfBHomsTcndxg5NRCEPfu/mc2AGU8k37ajjDVXcXFc12ORAMUkmk+lkFA==}

  monaco-themes@0.4.5:
    resolution: {integrity: sha512-SqFGy2S1/dVL7ayWV09OTSKtdBDAsfsON56hfvcJgmCSfXpBgWNn3Qb5h7TmJIUoK4PfPHGvQsw1s8IgQo5ftw==}

  motion-dom@11.18.1:
    resolution: {integrity: sha512-g76KvA001z+atjfxczdRtw/RXOM3OMSdd1f4DL77qCTF/+avrRJiawSG4yDibEQ215sr9kpinSlX2pCTJ9zbhw==}

  motion-utils@11.18.1:
    resolution: {integrity: sha512-49Kt+HKjtbJKLtgO/LKj9Ld+6vw9BjH5d9sc40R/kVyH8GLAXgT42M2NnuPcJNuA3s9ZfZBUcwIgpmZWGEE+hA==}

  ms@2.0.0:
    resolution: {integrity: sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==}

  ms@2.1.3:
    resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}

  mz@2.7.0:
    resolution: {integrity: sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==}

  nanoid@3.3.11:
    resolution: {integrity: sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==}
    engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}
    hasBin: true

  negotiator@0.6.3:
    resolution: {integrity: sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==}
    engines: {node: '>= 0.6'}

  next-themes@0.4.6:
    resolution: {integrity: sha512-pZvgD5L0IEvX5/9GWyHMf3m8BKiVQwsCMHfoFosXtXBMnaS0ZnIJ9ST4b4NqLVKDEm8QBxoNNGNaBv2JNF6XNA==}
    peerDependencies:
      react: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc
      react-dom: ^16.8 || ^17 || ^18 || ^19 || ^19.0.0-rc

  next@15.2.4:
    resolution: {integrity: sha512-VwL+LAaPSxEkd3lU2xWbgEOtrM8oedmyhBqaVNmgKB+GvZlCy9rgaEc+y2on0wv+l0oSFqLtYD6dcC1eAedUaQ==}
    engines: {node: ^18.18.0 || ^19.8.0 || >= 20.0.0}
    hasBin: true
    peerDependencies:
      '@opentelemetry/api': ^1.1.0
      '@playwright/test': ^1.41.2
      babel-plugin-react-compiler: '*'
      react: ^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0
      react-dom: ^18.2.0 || 19.0.0-rc-de68d2f4-20241204 || ^19.0.0
      sass: ^1.3.0
    peerDependenciesMeta:
      '@opentelemetry/api':
        optional: true
      '@playwright/test':
        optional: true
      babel-plugin-react-compiler:
        optional: true
      sass:
        optional: true

  node-int64@0.4.0:
    resolution: {integrity: sha512-O5lz91xSOeoXP6DulyHfllpq+Eg00MWitZIbtPfoSEvqIHdl5gfcY6hYzDWnj0qD5tz52PI08u9qUvSVeUBeHw==}

  node-releases@2.0.19:
    resolution: {integrity: sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==}

  normalize-path@3.0.0:
    resolution: {integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==}
    engines: {node: '>=0.10.0'}

  normalize-range@0.1.2:
    resolution: {integrity: sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==}
    engines: {node: '>=0.10.0'}

  nullthrows@1.1.1:
    resolution: {integrity: sha512-2vPPEi+Z7WqML2jZYddDIfy5Dqb0r2fze2zTxNNknZaFpVHU3mFB3R+DWeJWGVx0ecvttSGlJTI+WG+8Z4cDWw==}

  ob1@0.82.4:
    resolution: {integrity: sha512-n9S8e4l5TvkrequEAMDidl4yXesruWTNTzVkeaHSGywoTOIwTzZzKw7Z670H3eaXDZui5MJXjWGNzYowVZIxCA==}
    engines: {node: '>=18.18'}

  object-assign@4.1.1:
    resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}
    engines: {node: '>=0.10.0'}

  object-hash@3.0.0:
    resolution: {integrity: sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==}
    engines: {node: '>= 6'}

  on-finished@2.3.0:
    resolution: {integrity: sha512-ikqdkGAAyf/X/gPhXGvfgAytDZtDbr+bkNUJ0N9h5MI/dmdgCs3l6hoHrcUv41sRKew3jIwrp4qQDXiK99Utww==}
    engines: {node: '>= 0.8'}

  on-finished@2.4.1:
    resolution: {integrity: sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==}
    engines: {node: '>= 0.8'}

  once@1.4.0:
    resolution: {integrity: sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==}

  oniguruma-to-es@2.3.0:
    resolution: {integrity: sha512-bwALDxriqfKGfUufKGGepCzu9x7nJQuoRoAFp4AnwehhC2crqrDIAP/uN2qdlsAvSMpeRC3+Yzhqc7hLmle5+g==}

  open@7.4.2:
    resolution: {integrity: sha512-MVHddDVweXZF3awtlAS+6pgKLlm/JgxZ90+/NBurBoQctVOOB/zDdVjcyPzQ+0laDGbsWgrRkflI65sQeOgT9Q==}
    engines: {node: '>=8'}

  p-limit@2.3.0:
    resolution: {integrity: sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==}
    engines: {node: '>=6'}

  p-locate@4.1.0:
    resolution: {integrity: sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==}
    engines: {node: '>=8'}

  p-try@2.2.0:
    resolution: {integrity: sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==}
    engines: {node: '>=6'}

  package-json-from-dist@1.0.1:
    resolution: {integrity: sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==}

  parent-module@1.0.1:
    resolution: {integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==}
    engines: {node: '>=6'}

  parse-entities@2.0.0:
    resolution: {integrity: sha512-kkywGpCcRYhqQIchaWqZ875wzpS/bMKhz5HnN3p7wveJTkTtyAB/AlnS0f8DFSqYW1T82t6yEAkEcB+A1I3MbQ==}

  parse-entities@4.0.2:
    resolution: {integrity: sha512-GG2AQYWoLgL877gQIKeRPGO1xF9+eG1ujIb5soS5gPvLQ1y2o8FL90w2QWNdf9I361Mpp7726c+lj3U0qK1uGw==}

  parse-json@4.0.0:
    resolution: {integrity: sha512-aOIos8bujGN93/8Ox/jPLh7RwVnPEysynVFE+fQZyg6jKELEHwzgKdLRFHUgXJL6kylijVSBC4BvN9OmsB48Rw==}
    engines: {node: '>=4'}

  parse-json@5.2.0:
    resolution: {integrity: sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==}
    engines: {node: '>=8'}

  parse5@7.3.0:
    resolution: {integrity: sha512-IInvU7fabl34qmi9gY8XOVxhYyMyuH2xUNpb2q8/Y+7552KlejkRvqvD19nMoUW/uQGGbqNpA6Tufu5FL5BZgw==}

  parseurl@1.3.3:
    resolution: {integrity: sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==}
    engines: {node: '>= 0.8'}

  path-exists@4.0.0:
    resolution: {integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==}
    engines: {node: '>=8'}

  path-is-absolute@1.0.1:
    resolution: {integrity: sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==}
    engines: {node: '>=0.10.0'}

  path-key@3.1.1:
    resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}
    engines: {node: '>=8'}

  path-parse@1.0.7:
    resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}

  path-scurry@1.11.1:
    resolution: {integrity: sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==}
    engines: {node: '>=16 || 14 >=14.18'}

  path-type@4.0.0:
    resolution: {integrity: sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==}
    engines: {node: '>=8'}

  picocolors@1.1.1:
    resolution: {integrity: sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==}

  picomatch@2.3.1:
    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}
    engines: {node: '>=8.6'}

  pify@2.3.0:
    resolution: {integrity: sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==}
    engines: {node: '>=0.10.0'}

  pirates@4.0.7:
    resolution: {integrity: sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==}
    engines: {node: '>= 6'}

  postcss-import@15.1.0:
    resolution: {integrity: sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==}
    engines: {node: '>=14.0.0'}
    peerDependencies:
      postcss: ^8.0.0

  postcss-js@4.0.1:
    resolution: {integrity: sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==}
    engines: {node: ^12 || ^14 || >= 16}
    peerDependencies:
      postcss: ^8.4.21

  postcss-load-config@4.0.2:
    resolution: {integrity: sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==}
    engines: {node: '>= 14'}
    peerDependencies:
      postcss: '>=8.0.9'
      ts-node: '>=9.0.0'
    peerDependenciesMeta:
      postcss:
        optional: true
      ts-node:
        optional: true

  postcss-nested@6.2.0:
    resolution: {integrity: sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==}
    engines: {node: '>=12.0'}
    peerDependencies:
      postcss: ^8.2.14

  postcss-selector-parser@6.0.10:
    resolution: {integrity: sha512-IQ7TZdoaqbT+LCpShg46jnZVlhWD2w6iQYAcYXfHARZ7X1t/UGhhceQDs5X0cGqKvYlHNOuv7Oa1xmb0oQuA3w==}
    engines: {node: '>=4'}

  postcss-selector-parser@6.1.2:
    resolution: {integrity: sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==}
    engines: {node: '>=4'}

  postcss-value-parser@4.2.0:
    resolution: {integrity: sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==}

  postcss@8.4.31:
    resolution: {integrity: sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==}
    engines: {node: ^10 || ^12 || >=14}

  postcss@8.5.3:
    resolution: {integrity: sha512-dle9A3yYxlBSrt8Fu+IpjGT8SY8hN0mlaA6GY8t0P5PjIOZemULz/E2Bnm/2dcUOena75OTNkHI76uZBNUUq3A==}
    engines: {node: ^10 || ^12 || >=14}

  pretty-format@29.7.0:
    resolution: {integrity: sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==}
    engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}

  prismjs@1.27.0:
    resolution: {integrity: sha512-t13BGPUlFDR7wRB5kQDG4jjl7XeuH6jbJGt11JHPL96qwsEHNX2+68tFXqc1/k+/jALsbSWJKUOT/hcYAZ5LkA==}
    engines: {node: '>=6'}

  prismjs@1.30.0:
    resolution: {integrity: sha512-DEvV2ZF2r2/63V+tK8hQvrR2ZGn10srHbXviTlcv7Kpzw8jWiNTqbVgjO3IY8RxrrOUF8VPMQQFysYYYv0YZxw==}
    engines: {node: '>=6'}

  promise@8.3.0:
    resolution: {integrity: sha512-rZPNPKTOYVNEEKFaq1HqTgOwZD+4/YHS5ukLzQCypkj+OkYx7iv0mA91lJlpPPZ8vMau3IIGj5Qlwrx+8iiSmg==}

  prop-types@15.8.1:
    resolution: {integrity: sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==}

  property-information@5.6.0:
    resolution: {integrity: sha512-YUHSPk+A30YPv+0Qf8i9Mbfe/C0hdPXk1s1jPVToV8pk8BQtpw10ct89Eo7OWkutrwqvT0eicAxlOg3dOAu8JA==}

  property-information@6.5.0:
    resolution: {integrity: sha512-PgTgs/BlvHxOu8QuEN7wi5A0OmXaBcHpmCSTehcs6Uuu9IkDIEo13Hy7n898RHfrQ49vKCoGeWZSaAK01nwVig==}

  property-information@7.1.0:
    resolution: {integrity: sha512-TwEZ+X+yCJmYfL7TPUOcvBZ4QfoT5YenQiJuX//0th53DE6w0xxLEtfK3iyryQFddXuvkIk51EEgrJQ0WJkOmQ==}

  queue-microtask@1.2.3:
    resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}

  queue@6.0.2:
    resolution: {integrity: sha512-iHZWu+q3IdFZFX36ro/lKBkSvfkztY5Y7HMiPlOUjhupPcG2JMfst2KKEpu5XndviX/3UhFbRngUPNKtgvtZiA==}

  range-parser@1.2.1:
    resolution: {integrity: sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==}
    engines: {node: '>= 0.6'}

  react-day-picker@8.10.1:
    resolution: {integrity: sha512-TMx7fNbhLk15eqcMt+7Z7S2KF7mfTId/XJDjKE8f+IUcFn0l08/kI4FiYTL/0yuOLmEcbR4Fwe3GJf/NiiMnPA==}
    peerDependencies:
      date-fns: ^2.28.0 || ^3.0.0
      react: ^16.8.0 || ^17.0.0 || ^18.0.0

  react-devtools-core@6.1.2:
    resolution: {integrity: sha512-ldFwzufLletzCikNJVYaxlxMLu7swJ3T2VrGfzXlMsVhZhPDKXA38DEROidaYZVgMAmQnIjymrmqto5pyfrwPA==}

  react-dom@18.3.1:
    resolution: {integrity: sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==}
    peerDependencies:
      react: ^18.3.1

  react-file-icon@1.6.0:
    resolution: {integrity: sha512-Ba4Qa2ya/kvhcCd4LJja77sV7JD7u1ZXcI1DUz+TII3nGmglG6QY+NZeHizThokgct3qI0glwb9eV8NqRGs5lw==}
    peerDependencies:
      react: ^19.0.0 || ^18.0.0 || ^17.0.0 || ^16.2.0
      react-dom: ^19.0.0 || ^18.0.0 || ^17.0.0 || ^16.2.0

  react-hook-form@7.56.4:
    resolution: {integrity: sha512-Rob7Ftz2vyZ/ZGsQZPaRdIefkgOSrQSPXfqBdvOPwJfoGnjwRJUs7EM7Kc1mcoDv3NOtqBzPGbcMB8CGn9CKgw==}
    engines: {node: '>=18.0.0'}
    peerDependencies:
      react: ^16.8.0 || ^17 || ^18 || ^19

  react-is@16.13.1:
    resolution: {integrity: sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==}

  react-is@18.3.1:
    resolution: {integrity: sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==}

  react-is@19.1.0:
    resolution: {integrity: sha512-Oe56aUPnkHyyDxxkvqtd7KkdQP5uIUfHxd5XTb3wE9d/kRnZLmKbDB0GWk919tdQ+mxxPtG6EAs6RMT6i1qtHg==}

  react-konva@18.2.10:
    resolution: {integrity: sha512-ohcX1BJINL43m4ynjZ24MxFI1syjBdrXhqVxYVDw2rKgr3yuS0x/6m1Y2Z4sl4T/gKhfreBx8KHisd0XC6OT1g==}
    peerDependencies:
      konva: ^8.0.1 || ^7.2.5 || ^9.0.0
      react: '>=18.0.0'
      react-dom: '>=18.0.0'

  react-markdown@10.1.0:
    resolution: {integrity: sha512-qKxVopLT/TyA6BX3Ue5NwabOsAzm0Q7kAPwq6L+wWDwisYs7R8vZ0nRXqq6rkueboxpkjvLGU9fWifiX/ZZFxQ==}
    peerDependencies:
      '@types/react': '>=18'
      react: '>=18'

  react-native@0.79.2:
    resolution: {integrity: sha512-AnGzb56JvU5YCL7cAwg10+ewDquzvmgrMddiBM0GAWLwQM/6DJfGd2ZKrMuKKehHerpDDZgG+EY64gk3x3dEkw==}
    engines: {node: '>=18'}
    hasBin: true
    peerDependencies:
      '@types/react': ^19.0.0
      react: ^19.0.0
    peerDependenciesMeta:
      '@types/react':
        optional: true

  react-reconciler@0.29.2:
    resolution: {integrity: sha512-zZQqIiYgDCTP/f1N/mAR10nJGrPD2ZR+jDSEsKWJHYC7Cm2wodlwbR3upZRdC3cjIjSlTLNVyO7Iu0Yy7t2AYg==}
    engines: {node: '>=0.10.0'}
    peerDependencies:
      react: ^18.3.1

  react-reconciler@0.31.0:
    resolution: {integrity: sha512-7Ob7Z+URmesIsIVRjnLoDGwBEG/tVitidU0nMsqX/eeJaLY89RISO/10ERe0MqmzuKUUB1rmY+h1itMbUHg9BQ==}
    engines: {node: '>=0.10.0'}
    peerDependencies:
      react: ^19.0.0

  react-refresh@0.14.2:
    resolution: {integrity: sha512-jCvmsr+1IUSMUyzOkRcvnVbX3ZYC6g9TDrDbFuFmRDq7PD4yaGbLKNQL6k2jnArV8hjYxh7hVhAZB6s9HDGpZA==}
    engines: {node: '>=0.10.0'}

  react-remove-scroll-bar@2.3.8:
    resolution: {integrity: sha512-9r+yi9+mgU33AKcj6IbT9oRCO78WriSj6t/cF8DWBZJ9aOGPOTEDvdUDz1FwKim7QXWwmHqtdHnRJfhAxEG46Q==}
    engines: {node: '>=10'}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
    peerDependenciesMeta:
      '@types/react':
        optional: true

  react-remove-scroll@2.7.0:
    resolution: {integrity: sha512-sGsQtcjMqdQyijAHytfGEELB8FufGbfXIsvUTe+NLx1GDRJCXtCFLBLUI1eyZCKXXvbEU2C6gai0PZKoIE9Vbg==}
    engines: {node: '>=10'}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  react-resizable-panels@2.1.9:
    resolution: {integrity: sha512-z77+X08YDIrgAes4jl8xhnUu1LNIRp4+E7cv4xHmLOxxUPO/ML7PSrE813b90vj7xvQ1lcf7g2uA9GeMZonjhQ==}
    peerDependencies:
      react: ^16.14.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc
      react-dom: ^16.14.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc

  react-smooth@4.0.4:
    resolution: {integrity: sha512-gnGKTpYwqL0Iii09gHobNolvX4Kiq4PKx6eWBCYYix+8cdw+cGo3do906l1NBPKkSWx1DghC1dlWG9L2uGd61Q==}
    peerDependencies:
      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
      react-dom: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0

  react-spring@9.7.5:
    resolution: {integrity: sha512-oG6DkDZIASHzPiGYw5KwrCvoFZqsaO3t2R7KE37U6S/+8qWSph/UjRQalPpZxlbgheqV9LT62H6H9IyoopHdug==}
    peerDependencies:
      react: ^16.8.0 || ^17.0.0 || ^18.0.0
      react-dom: ^16.8.0 || ^17.0.0 || ^18.0.0

  react-style-singleton@2.2.3:
    resolution: {integrity: sha512-b6jSvxvVnyptAiLjbkWLE/lOnR4lfTtDAl+eUC7RZy+QQWc6wRzIV2CE6xBuMmDxc2qIihtDCZD5NPOFl7fRBQ==}
    engines: {node: '>=10'}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  react-syntax-highlighter@15.6.1:
    resolution: {integrity: sha512-OqJ2/vL7lEeV5zTJyG7kmARppUjiB9h9udl4qHQjjgEos66z00Ia0OckwYfRxCSFrW8RJIBnsBwQsHZbVPspqg==}
    peerDependencies:
      react: '>= 0.14.0'

  react-transition-group@4.4.5:
    resolution: {integrity: sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==}
    peerDependencies:
      react: '>=16.6.0'
      react-dom: '>=16.6.0'

  react-use-measure@2.1.7:
    resolution: {integrity: sha512-KrvcAo13I/60HpwGO5jpW7E9DfusKyLPLvuHlUyP5zqnmAPhNc6qTRjUQrdTADl0lpPpDVU2/Gg51UlOGHXbdg==}
    peerDependencies:
      react: '>=16.13'
      react-dom: '>=16.13'
    peerDependenciesMeta:
      react-dom:
        optional: true

  react-virtuoso@4.12.7:
    resolution: {integrity: sha512-njJp764he6Fi1p89PUW0k2kbyWu9w/y+MwdxmwK2kvdwwzVDbz2c2wMj5xdSruBFVgFTsI7Z85hxZR7aSHBrbQ==}
    peerDependencies:
      react: '>=16 || >=17 || >= 18 || >= 19'
      react-dom: '>=16 || >=17 || >= 18 || >=19'

  react-zdog@1.2.2:
    resolution: {integrity: sha512-Ix7ALha91aOEwiHuxumCeYbARS5XNpc/w0v145oGkM6poF/CvhKJwzLhM5sEZbtrghMA+psAhOJkCTzJoseicA==}

  react@18.3.1:
    resolution: {integrity: sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==}
    engines: {node: '>=0.10.0'}

  read-cache@1.0.0:
    resolution: {integrity: sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==}

  readdirp@3.6.0:
    resolution: {integrity: sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==}
    engines: {node: '>=8.10.0'}

  recharts-scale@0.4.5:
    resolution: {integrity: sha512-kivNFO+0OcUNu7jQquLXAxz1FIwZj8nrj+YkOKc5694NbjCvcT6aSZiIzNzd2Kul4o4rTto8QVR9lMNtxD4G1w==}

  recharts@2.15.3:
    resolution: {integrity: sha512-EdOPzTwcFSuqtvkDoaM5ws/Km1+WTAO2eizL7rqiG0V2UVhTnz0m7J2i0CjVPUCdEkZImaWvXLbZDS2H5t6GFQ==}
    engines: {node: '>=14'}
    peerDependencies:
      react: ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0
      react-dom: ^16.0.0 || ^17.0.0 || ^18.0.0 || ^19.0.0

  refractor@3.6.0:
    resolution: {integrity: sha512-MY9W41IOWxxk31o+YvFCNyNzdkc9M20NoZK5vq6jkv4I/uh2zkWcfudj0Q1fovjUQJrNewS9NMzeTtqPf+n5EA==}

  regenerator-runtime@0.13.11:
    resolution: {integrity: sha512-kY1AZVr2Ra+t+piVaJ4gxaFaReZVH40AKNo7UCX6W+dEwBo/2oZJzqfuN1qLq1oL45o56cPaTXELwrTh8Fpggg==}

  regex-recursion@5.1.1:
    resolution: {integrity: sha512-ae7SBCbzVNrIjgSbh7wMznPcQel1DNlDtzensnFxpiNpXt1U2ju/bHugH422r+4LAVS1FpW1YCwilmnNsjum9w==}

  regex-utilities@2.3.0:
    resolution: {integrity: sha512-8VhliFJAWRaUiVvREIiW2NXXTmHs4vMNnSzuJVhscgmGav3g9VDxLrQndI3dZZVVdp0ZO/5v0xmX516/7M9cng==}

  regex@5.1.1:
    resolution: {integrity: sha512-dN5I359AVGPnwzJm2jN1k0W9LPZ+ePvoOeVMMfqIMFz53sSwXkxaJoxr50ptnsC771lK95BnTrVSZxq0b9yCGw==}

  rehype-katex@7.0.1:
    resolution: {integrity: sha512-OiM2wrZ/wuhKkigASodFoo8wimG3H12LWQaH8qSPVJn9apWKFSH3YOCtbKpBorTVw/eI7cuT21XBbvwEswbIOA==}

  rehype-raw@7.0.0:
    resolution: {integrity: sha512-/aE8hCfKlQeA8LmyeyQvQF3eBiLRGNlfBJEvWH7ivp9sBqs7TNqBL5X3v157rM4IFETqDnIOO+z5M/biZbo9Ww==}

  remark-gfm@4.0.1:
    resolution: {integrity: sha512-1quofZ2RQ9EWdeN34S79+KExV1764+wCUGop5CPL1WGdD0ocPpu91lzPGbwWMECpEpd42kJGQwzRfyov9j4yNg==}

  remark-math@6.0.0:
    resolution: {integrity: sha512-MMqgnP74Igy+S3WwnhQ7kqGlEerTETXMvJhrUzDikVZ2/uogJCb+WHUg97hK9/jcfc0dkD73s3LN8zU49cTEtA==}

  remark-parse@11.0.0:
    resolution: {integrity: sha512-FCxlKLNGknS5ba/1lmpYijMUzX2esxW5xQqjWxw2eHFfS2MSdaHVINFmhjo+qN1WhZhNimq0dZATN9pH0IDrpA==}

  remark-rehype@11.1.2:
    resolution: {integrity: sha512-Dh7l57ianaEoIpzbp0PC9UKAdCSVklD8E5Rpw7ETfbTl3FqcOOgq5q2LVDhgGCkaBv7p24JXikPdvhhmHvKMsw==}

  remark-stringify@11.0.0:
    resolution: {integrity: sha512-1OSmLd3awB/t8qdoEOMazZkNsfVTeY4fTsgzcQFdXNq8ToTN4ZGwrMnlda4K6smTFKD+GRV6O48i6Z4iKgPPpw==}

  rename-keys@1.2.0:
    resolution: {integrity: sha512-U7XpAktpbSgHTRSNRrjKSrjYkZKuhUukfoBlXWXUExCAqhzh1TU3BDRAfJmarcl5voKS+pbKU9MvyLWKZ4UEEg==}
    engines: {node: '>= 0.8.0'}

  require-directory@2.1.1:
    resolution: {integrity: sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==}
    engines: {node: '>=0.10.0'}

  resize-observer-polyfill@1.5.1:
    resolution: {integrity: sha512-LwZrotdHOo12nQuZlHEmtuXdqGoOD0OhaxopaNFxWzInpEgaLWoVuAMbTzixuosCx2nEG58ngzW3vxdWoxIgdg==}

  resolve-from@3.0.0:
    resolution: {integrity: sha512-GnlH6vxLymXJNMBo7XP1fJIzBFbdYt49CuTwmB/6N53t+kMPRMFKz783LlQ4tv28XoQfMWinAJX6WCGf2IlaIw==}
    engines: {node: '>=4'}

  resolve-from@4.0.0:
    resolution: {integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==}
    engines: {node: '>=4'}

  resolve-from@5.0.0:
    resolution: {integrity: sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==}
    engines: {node: '>=8'}

  resolve@1.22.10:
    resolution: {integrity: sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==}
    engines: {node: '>= 0.4'}
    hasBin: true

  reusify@1.1.0:
    resolution: {integrity: sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==}
    engines: {iojs: '>=1.0.0', node: '>=0.10.0'}

  rimraf@3.0.2:
    resolution: {integrity: sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==}
    deprecated: Rimraf versions prior to v4 are no longer supported
    hasBin: true

  run-parallel@1.2.0:
    resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}

  scheduler@0.23.2:
    resolution: {integrity: sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==}

  scheduler@0.25.0:
    resolution: {integrity: sha512-xFVuu11jh+xcO7JOAGJNOXld8/TcEHK/4CituBUeUb5hqxJLj9YuemAEuvm9gQ/+pgXYfbQuqAkiYu+u7YEsNA==}

  semver@6.3.1:
    resolution: {integrity: sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==}
    hasBin: true

  semver@7.7.2:
    resolution: {integrity: sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==}
    engines: {node: '>=10'}
    hasBin: true

  send@0.19.0:
    resolution: {integrity: sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==}
    engines: {node: '>= 0.8.0'}

  serialize-error@2.1.0:
    resolution: {integrity: sha512-ghgmKt5o4Tly5yEG/UJp8qTd0AN7Xalw4XBtDEKP655B699qMEtra1WlXeE6WIvdEG481JvRxULKsInq/iNysw==}
    engines: {node: '>=0.10.0'}

  serve-static@1.16.2:
    resolution: {integrity: sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==}
    engines: {node: '>= 0.8.0'}

  setprototypeof@1.2.0:
    resolution: {integrity: sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==}

  sharp@0.33.5:
    resolution: {integrity: sha512-haPVm1EkS9pgvHrQ/F3Xy+hgcuMV0Wm9vfIBSiwZ05k+xgb0PkBQpGsAA/oWdDobNaZTH5ppvHtzCFbnSEwHVw==}
    engines: {node: ^18.17.0 || ^20.3.0 || >=21.0.0}

  shebang-command@2.0.0:
    resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}
    engines: {node: '>=8'}

  shebang-regex@3.0.0:
    resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}
    engines: {node: '>=8'}

  shell-quote@1.8.2:
    resolution: {integrity: sha512-AzqKpGKjrj7EM6rKVQEPpB288oCfnrEIuyoT9cyF4nmGa7V8Zk6f7RRqYisX8X9m+Q7bd632aZW4ky7EhbQztA==}
    engines: {node: '>= 0.4'}

  shiki@1.29.2:
    resolution: {integrity: sha512-njXuliz/cP+67jU2hukkxCNuH1yUi4QfdZZY+sMr5PPrIyXSu5iTb/qYC4BiWWB0vZ+7TbdvYUCeL23zpwCfbg==}

  signal-exit@3.0.7:
    resolution: {integrity: sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==}

  signal-exit@4.1.0:
    resolution: {integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==}
    engines: {node: '>=14'}

  simple-swizzle@0.2.2:
    resolution: {integrity: sha512-JA//kQgZtbuY83m+xT+tXJkmJncGMTFT+C+g2h2R9uxkYIrE2yy9sgmcLhCnw57/WSD+Eh3J97FPEDFnbXnDUg==}

  slash@3.0.0:
    resolution: {integrity: sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==}
    engines: {node: '>=8'}

  sonner@1.7.4:
    resolution: {integrity: sha512-DIS8z4PfJRbIyfVFDVnK9rO3eYDtse4Omcm6bt0oEr5/jtLgysmjuBl1frJ9E/EQZrFmKx2A8m/s5s9CRXIzhw==}
    peerDependencies:
      react: ^18.0.0 || ^19.0.0 || ^19.0.0-rc
      react-dom: ^18.0.0 || ^19.0.0 || ^19.0.0-rc

  source-map-js@1.2.1:
    resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}
    engines: {node: '>=0.10.0'}

  source-map-support@0.5.21:
    resolution: {integrity: sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==}

  source-map@0.5.7:
    resolution: {integrity: sha512-LbrmJOMUSdEVxIKvdcJzQC+nQhe8FUZQTXQy6+I75skNgn3OoQ0DZA8YnFa7gp8tqtL3KPf1kmo0R5DoApeSGQ==}
    engines: {node: '>=0.10.0'}

  source-map@0.6.1:
    resolution: {integrity: sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==}
    engines: {node: '>=0.10.0'}

  space-separated-tokens@1.1.5:
    resolution: {integrity: sha512-q/JSVd1Lptzhf5bkYm4ob4iWPjx0KiRe3sRFBNrVqbJkFaBm5vbbowy1mymoPNLRa52+oadOhJ+K49wsSeSjTA==}

  space-separated-tokens@2.0.2:
    resolution: {integrity: sha512-PEGlAwrG8yXGXRjW32fGbg66JAlOAwbObuqVoJpv/mRgoWDQfgH1wDPvtzWyUSNAXBGSk8h755YDbbcEy3SH2Q==}

  sprintf-js@1.0.3:
    resolution: {integrity: sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==}

  stack-utils@2.0.6:
    resolution: {integrity: sha512-XlkWvfIm6RmsWtNJx+uqtKLS8eqFbxUg0ZzLXqY0caEy9l7hruX8IpiDnjsLavoBgqCCR71TqWO8MaXYheJ3RQ==}
    engines: {node: '>=10'}

  stackframe@1.3.4:
    resolution: {integrity: sha512-oeVtt7eWQS+Na6F//S4kJ2K2VbRlS9D43mAlMyVpVWovy9o+jfgH8O9agzANzaiLjclA0oYzUXEM4PurhSUChw==}

  stacktrace-parser@0.1.11:
    resolution: {integrity: sha512-WjlahMgHmCJpqzU8bIBy4qtsZdU9lRlcZE3Lvyej6t4tuOuv1vk57OW3MBrj6hXBFx/nNoC9MPMTcr5YA7NQbg==}
    engines: {node: '>=6'}

  state-local@1.0.7:
    resolution: {integrity: sha512-HTEHMNieakEnoe33shBYcZ7NX83ACUjCu8c40iOGEZsngj9zRnkqS9j1pqQPXwobB0ZcVTk27REb7COQ0UR59w==}

  statuses@1.5.0:
    resolution: {integrity: sha512-OpZ3zP+jT1PI7I8nemJX4AKmAX070ZkYPVWV/AaKTJl+tXCTGyVdC1a4SL8RUQYEwk/f34ZX8UTykN68FwrqAA==}
    engines: {node: '>= 0.6'}

  statuses@2.0.1:
    resolution: {integrity: sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==}
    engines: {node: '>= 0.8'}

  streamsearch@1.1.0:
    resolution: {integrity: sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==}
    engines: {node: '>=10.0.0'}

  string-width@4.2.3:
    resolution: {integrity: sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==}
    engines: {node: '>=8'}

  string-width@5.1.2:
    resolution: {integrity: sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==}
    engines: {node: '>=12'}

  stringify-entities@4.0.4:
    resolution: {integrity: sha512-IwfBptatlO+QCJUo19AqvrPNqlVMpW9YEL2LIVY+Rpv2qsjCGxaDLNRgeGsQWJhfItebuJhsGSLjaBbNSQ+ieg==}

  strip-ansi@6.0.1:
    resolution: {integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==}
    engines: {node: '>=8'}

  strip-ansi@7.1.0:
    resolution: {integrity: sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==}
    engines: {node: '>=12'}

  style-to-js@1.1.16:
    resolution: {integrity: sha512-/Q6ld50hKYPH3d/r6nr117TZkHR0w0kGGIVfpG9N6D8NymRPM9RqCUv4pRpJ62E5DqOYx2AFpbZMyCPnjQCnOw==}

  style-to-object@1.0.8:
    resolution: {integrity: sha512-xT47I/Eo0rwJmaXC4oilDGDWLohVhR6o/xAQcPQN8q6QBuZVL8qMYL85kLmST5cPjAorwvqIA4qXTRQoYHaL6g==}

  styled-jsx@5.1.6:
    resolution: {integrity: sha512-qSVyDTeMotdvQYoHWLNGwRFJHC+i+ZvdBRYosOFgC+Wg1vx4frN2/RG/NA7SYqqvKNLf39P2LSRA2pu6n0XYZA==}
    engines: {node: '>= 12.0.0'}
    peerDependencies:
      '@babel/core': '*'
      babel-plugin-macros: '*'
      react: '>= 16.8.0 || 17.x.x || ^18.0.0-0 || ^19.0.0-0'
    peerDependenciesMeta:
      '@babel/core':
        optional: true
      babel-plugin-macros:
        optional: true

  stylis@4.2.0:
    resolution: {integrity: sha512-Orov6g6BB1sDfYgzWfTHDOxamtX1bE/zo104Dh9e6fqJ3PooipYyfJ0pUmrZO2wAvO8YbEyeFrkV91XTsGMSrw==}

  sucrase@3.35.0:
    resolution: {integrity: sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==}
    engines: {node: '>=16 || 14 >=14.17'}
    hasBin: true

  supports-color@7.2.0:
    resolution: {integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==}
    engines: {node: '>=8'}

  supports-color@8.1.1:
    resolution: {integrity: sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==}
    engines: {node: '>=10'}

  supports-preserve-symlinks-flag@1.0.0:
    resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}
    engines: {node: '>= 0.4'}

  suspend-react@0.1.3:
    resolution: {integrity: sha512-aqldKgX9aZqpoDp3e8/BZ8Dm7x1pJl+qI3ZKxDN0i/IQTWUwBx/ManmlVJ3wowqbno6c2bmiIfs+Um6LbsjJyQ==}
    peerDependencies:
      react: '>=17.0'

  svgson@5.3.1:
    resolution: {integrity: sha512-qdPgvUNWb40gWktBJnbJRelWcPzkLed/ShhnRsjbayXz8OtdPOzbil9jtiZdrYvSDumAz/VNQr6JaNfPx/gvPA==}

  tailwind-merge@2.6.0:
    resolution: {integrity: sha512-P+Vu1qXfzediirmHOC3xKGAYeZtPcV9g76X+xg2FD4tYgR71ewMA35Y3sCz3zhiN/dwefRpJX0yBcgwi1fXNQA==}

  tailwindcss-animate@1.0.7:
    resolution: {integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==}
    peerDependencies:
      tailwindcss: '>=3.0.0 || insiders'

  tailwindcss@3.4.17:
    resolution: {integrity: sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==}
    engines: {node: '>=14.0.0'}
    hasBin: true

  terser@5.39.2:
    resolution: {integrity: sha512-yEPUmWve+VA78bI71BW70Dh0TuV4HHd+I5SHOAfS1+QBOmvmCiiffgjR8ryyEd3KIfvPGFqoADt8LdQ6XpXIvg==}
    engines: {node: '>=10'}
    hasBin: true

  test-exclude@6.0.0:
    resolution: {integrity: sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==}
    engines: {node: '>=8'}

  thenify-all@1.6.0:
    resolution: {integrity: sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==}
    engines: {node: '>=0.8'}

  thenify@3.3.1:
    resolution: {integrity: sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==}

  three@0.176.0:
    resolution: {integrity: sha512-PWRKYWQo23ojf9oZSlRGH8K09q7nRSWx6LY/HF/UUrMdYgN9i1e2OwJYHoQjwc6HF/4lvvYLC5YC1X8UJL2ZpA==}

  throat@5.0.0:
    resolution: {integrity: sha512-fcwX4mndzpLQKBS1DVYhGAcYaYt7vsHNIvQV+WXMvnow5cgjPphq5CaayLaGsjRdSCKZFNGt7/GYAuXaNOiYCA==}

  tiny-invariant@1.3.3:
    resolution: {integrity: sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==}

  tmpl@1.0.5:
    resolution: {integrity: sha512-3f0uOEAQwIqGuWW2MVzYg8fV/QNnc/IpuJNG837rLuczAaLVHslWHZQj4IGiEl5Hs3kkbhwL9Ab7Hrsmuj+Smw==}

  to-regex-range@5.0.1:
    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}
    engines: {node: '>=8.0'}

  toidentifier@1.0.1:
    resolution: {integrity: sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==}
    engines: {node: '>=0.6'}

  trim-lines@3.0.1:
    resolution: {integrity: sha512-kRj8B+YHZCc9kQYdWfJB2/oUl9rA99qbowYYBtr4ui4mZyAQ2JpvVBd/6U2YloATfqBhBTSMhTpgBHtU0Mf3Rg==}

  trough@2.2.0:
    resolution: {integrity: sha512-tmMpK00BjZiUyVyvrBK7knerNgmgvcV/KLVyuma/SC+TQN167GrMRciANTz09+k3zW8L8t60jWO1GpfkZdjTaw==}

  ts-interface-checker@0.1.13:
    resolution: {integrity: sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==}

  tslib@2.8.1:
    resolution: {integrity: sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==}

  type-detect@4.0.8:
    resolution: {integrity: sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==}
    engines: {node: '>=4'}

  type-fest@0.7.1:
    resolution: {integrity: sha512-Ne2YiiGN8bmrmJJEuTWTLJR32nh/JdL1+PSicowtNb0WFpn59GK8/lfD61bVtzguz7b3PBt74nxpv/Pw5po5Rg==}
    engines: {node: '>=8'}

  typescript@5.8.3:
    resolution: {integrity: sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==}
    engines: {node: '>=14.17'}
    hasBin: true

  undici-types@6.21.0:
    resolution: {integrity: sha512-iwDZqg0QAGrg9Rav5H4n0M64c3mkR59cJ6wQp+7C4nI0gsmExaedaYLNO44eT4AtBBwjbTiGPMlt2Md0T9H9JQ==}

  unified@11.0.5:
    resolution: {integrity: sha512-xKvGhPWw3k84Qjh8bI3ZeJjqnyadK+GEFtazSfZv/rKeTkTjOJho6mFqh2SM96iIcZokxiOpg78GazTSg8+KHA==}

  unist-util-find-after@5.0.0:
    resolution: {integrity: sha512-amQa0Ep2m6hE2g72AugUItjbuM8X8cGQnFoHk0pGfrFeT9GZhzN5SW8nRsiGKK7Aif4CrACPENkA6P/Lw6fHGQ==}

  unist-util-is@6.0.0:
    resolution: {integrity: sha512-2qCTHimwdxLfz+YzdGfkqNlH0tLi9xjTnHddPmJwtIG9MGsdbutfTc4P+haPD7l7Cjxf/WZj+we5qfVPvvxfYw==}

  unist-util-position@5.0.0:
    resolution: {integrity: sha512-fucsC7HjXvkB5R3kTCO7kUjRdrS0BJt3M/FPxmHMBOm8JQi2BsHAHFsy27E0EolP8rp0NzXsJ+jNPyDWvOJZPA==}

  unist-util-remove-position@5.0.0:
    resolution: {integrity: sha512-Hp5Kh3wLxv0PHj9m2yZhhLt58KzPtEYKQQ4yxfYFEO7EvHwzyDYnduhHnY1mDxoqr7VUwVuHXk9RXKIiYS1N8Q==}

  unist-util-stringify-position@4.0.0:
    resolution: {integrity: sha512-0ASV06AAoKCDkS2+xw5RXJywruurpbC4JZSm7nr7MOt1ojAzvyyaO+UxZf18j8FCF6kmzCZKcAgN/yu2gm2XgQ==}

  unist-util-visit-parents@6.0.1:
    resolution: {integrity: sha512-L/PqWzfTP9lzzEa6CKs0k2nARxTdZduw3zyh8d2NVBnsyvHjSX4TWse388YrrQKbvI8w20fGjGlhgT96WwKykw==}

  unist-util-visit@5.0.0:
    resolution: {integrity: sha512-MR04uvD+07cwl/yhVuVWAtw+3GOR/knlL55Nd/wAdblk27GCVt3lqpTivy/tkJcZoNPzTwS1Y+KMojlLDhoTzg==}

  unpipe@1.0.0:
    resolution: {integrity: sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==}
    engines: {node: '>= 0.8'}

  update-browserslist-db@1.1.3:
    resolution: {integrity: sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==}
    hasBin: true
    peerDependencies:
      browserslist: '>= 4.21.0'

  use-callback-ref@1.3.3:
    resolution: {integrity: sha512-jQL3lRnocaFtu3V00JToYz/4QkNWswxijDaCVNZRiRTO3HQDLsdu1ZtmIUvV4yPp+rvWm5j0y0TG/S61cuijTg==}
    engines: {node: '>=10'}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  use-sidecar@1.1.3:
    resolution: {integrity: sha512-Fedw0aZvkhynoPYlA5WXrMCAMm+nSWdZt6lzJQ7Ok8S6Q+VsHmHpRWndVRJ8Be0ZbkfPc5LRYH+5XrzXcEeLRQ==}
    engines: {node: '>=10'}
    peerDependencies:
      '@types/react': '*'
      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0 || ^19.0.0-rc
    peerDependenciesMeta:
      '@types/react':
        optional: true

  use-sync-external-store@1.5.0:
    resolution: {integrity: sha512-Rb46I4cGGVBmjamjphe8L/UnvJD+uPPtTkNvX5mZgqdbavhI4EbgIWJiIHXJ8bc/i9EQGPRh4DwEURJ552Do0A==}
    peerDependencies:
      react: ^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0

  util-deprecate@1.0.2:
    resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}

  utils-merge@1.0.1:
    resolution: {integrity: sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==}
    engines: {node: '>= 0.4.0'}

  uuid@11.1.0:
    resolution: {integrity: sha512-0/A9rDy9P7cJ+8w1c9WD9V//9Wj15Ce2MPz8Ri6032usz+NfePxx5AcN3bN+r6ZL6jEo066/yNYB3tn4pQEx+A==}
    hasBin: true

  vaul@0.9.9:
    resolution: {integrity: sha512-7afKg48srluhZwIkaU+lgGtFCUsYBSGOl8vcc8N/M3YQlZFlynHD15AE+pwrYdc826o7nrIND4lL9Y6b9WWZZQ==}
    peerDependencies:
      react: ^16.8 || ^17.0 || ^18.0
      react-dom: ^16.8 || ^17.0 || ^18.0

  vfile-location@5.0.3:
    resolution: {integrity: sha512-5yXvWDEgqeiYiBe1lbxYF7UMAIm/IcopxMHrMQDq3nvKcjPKIhZklUKL+AE7J7uApI4kwe2snsK+eI6UTj9EHg==}

  vfile-message@4.0.2:
    resolution: {integrity: sha512-jRDZ1IMLttGj41KcZvlrYAaI3CfqpLpfpf+Mfig13viT6NKvRzWZ+lXz0Y5D60w6uJIBAOGq9mSHf0gktF0duw==}

  vfile@6.0.3:
    resolution: {integrity: sha512-KzIbH/9tXat2u30jf+smMwFCsno4wHVdNmzFyL+T/L3UGqqk6JKfVqOFOZEpZSHADH1k40ab6NUIXZq422ov3Q==}

  victory-vendor@36.9.2:
    resolution: {integrity: sha512-PnpQQMuxlwYdocC8fIJqVXvkeViHYzotI+NJrCuav0ZYFoq912ZHBk3mCeuj+5/VpodOjPe1z0Fk2ihgzlXqjQ==}

  vlq@1.0.1:
    resolution: {integrity: sha512-gQpnTgkubC6hQgdIcRdYGDSDc+SaujOdyesZQMv6JlfQee/9Mp0Qhnys6WxDWvQnL5WZdT7o2Ul187aSt0Rq+w==}

  walker@1.0.8:
    resolution: {integrity: sha512-ts/8E8l5b7kY0vlWLewOkDXMmPdLcVV4GmOQLyxuSswIJsweeFZtAsMF7k1Nszz+TYBQrlYRmzOnr398y1JemQ==}

  web-namespaces@2.0.1:
    resolution: {integrity: sha512-bKr1DkiNa2krS7qxNtdrtHAmzuYGFQLiQ13TsorsdT6ULTkPLKuu5+GsFpDlg6JFjUTwX2DyhMPG2be8uPrqsQ==}

  whatwg-fetch@3.6.20:
    resolution: {integrity: sha512-EqhiFU6daOA8kpjOWTL0olhVOF3i7OrFzSYiGsEMB8GcXS+RrzauAERX65xMeNWVqxA6HXH2m69Z9LaKKdisfg==}

  which@2.0.2:
    resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}
    engines: {node: '>= 8'}
    hasBin: true

  wrap-ansi@7.0.0:
    resolution: {integrity: sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==}
    engines: {node: '>=10'}

  wrap-ansi@8.1.0:
    resolution: {integrity: sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==}
    engines: {node: '>=12'}

  wrappy@1.0.2:
    resolution: {integrity: sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==}

  write-file-atomic@4.0.2:
    resolution: {integrity: sha512-7KxauUdBmSdWnmpaGFg+ppNjKF8uNLry8LyzjauQDOVONfFLNKrKvQOxZ/VuTIcS/gge/YNahf5RIIQWTSarlg==}
    engines: {node: ^12.13.0 || ^14.15.0 || >=16.0.0}

  ws@6.2.3:
    resolution: {integrity: sha512-jmTjYU0j60B+vHey6TfR3Z7RD61z/hmxBS3VMSGIrroOWXQEneK1zNuotOUrGyBHQj0yrpsLHPWtigEFd13ndA==}
    peerDependencies:
      bufferutil: ^4.0.1
      utf-8-validate: ^5.0.2
    peerDependenciesMeta:
      bufferutil:
        optional: true
      utf-8-validate:
        optional: true

  ws@7.5.10:
    resolution: {integrity: sha512-+dbF1tHwZpXcbOJdVOkzLDxZP1ailvSxM6ZweXTegylPny803bFhA+vqBYw4s31NSAk4S2Qz+AKXK9a4wkdjcQ==}
    engines: {node: '>=8.3.0'}
    peerDependencies:
      bufferutil: ^4.0.1
      utf-8-validate: ^5.0.2
    peerDependenciesMeta:
      bufferutil:
        optional: true
      utf-8-validate:
        optional: true

  xml-lexer@0.2.2:
    resolution: {integrity: sha512-G0i98epIwiUEiKmMcavmVdhtymW+pCAohMRgybyIME9ygfVu8QheIi+YoQh3ngiThsT0SQzJT4R0sKDEv8Ou0w==}

  xml-reader@2.4.3:
    resolution: {integrity: sha512-xWldrIxjeAMAu6+HSf9t50ot1uL5M+BtOidRCWHXIeewvSeIpscWCsp4Zxjk8kHHhdqFBrfK8U0EJeCcnyQ/gA==}

  xtend@4.0.2:
    resolution: {integrity: sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==}
    engines: {node: '>=0.4'}

  y18n@5.0.8:
    resolution: {integrity: sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==}
    engines: {node: '>=10'}

  yallist@3.1.1:
    resolution: {integrity: sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==}

  yaml@1.10.2:
    resolution: {integrity: sha512-r3vXyErRCYJ7wg28yvBY5VSoAF8ZvlcW9/BwUzEtUsjvX/DKs24dIkuwjtuprwJJHsbyUbLApepYTR1BN4uHrg==}
    engines: {node: '>= 6'}

  yaml@2.8.0:
    resolution: {integrity: sha512-4lLa/EcQCB0cJkyts+FpIRx5G/llPxfP6VQU5KByHEhLxY3IJCH0f0Hy1MHI8sClTvsIb8qwRJ6R/ZdlDJ/leQ==}
    engines: {node: '>= 14.6'}
    hasBin: true

  yargs-parser@21.1.1:
    resolution: {integrity: sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==}
    engines: {node: '>=12'}

  yargs@17.7.2:
    resolution: {integrity: sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==}
    engines: {node: '>=12'}

  zdog@1.1.3:
    resolution: {integrity: sha512-raRj6r0gPzopFm5XWBJZr/NuV4EEnT4iE+U3dp5FV5pCb588Gmm3zLIp/j9yqqcMiHH8VNQlerLTgOqL7krh6w==}

  zod@3.25.28:
    resolution: {integrity: sha512-/nt/67WYKnr5by3YS7LroZJbtcCBurDKKPBPWWzaxvVCGuG/NOsiKkrjoOhI8mJ+SQUXEbUzeB3S+6XDUEEj7Q==}

  zustand@4.5.7:
    resolution: {integrity: sha512-CHOUy7mu3lbD6o6LJLfllpjkzhHXSBlX8B9+qPddUsIfeF5S/UZ5q0kmCsnRqT1UHFQZchNFDDzMbQsuesHWlw==}
    engines: {node: '>=12.7.0'}
    peerDependencies:
      '@types/react': '>=16.8'
      immer: '>=9.0.6'
      react: '>=16.8'
    peerDependenciesMeta:
      '@types/react':
        optional: true
      immer:
        optional: true
      react:
        optional: true

  zustand@5.0.5:
    resolution: {integrity: sha512-mILtRfKW9xM47hqxGIxCv12gXusoY/xTSHBYApXozR0HmQv299whhBeeAcRy+KrPPybzosvJBCOmVjq6x12fCg==}
    engines: {node: '>=12.20.0'}
    peerDependencies:
      '@types/react': '>=18.0.0'
      immer: '>=9.0.6'
      react: '>=18.0.0'
      use-sync-external-store: '>=1.2.0'
    peerDependenciesMeta:
      '@types/react':
        optional: true
      immer:
        optional: true
      react:
        optional: true
      use-sync-external-store:
        optional: true

  zwitch@2.0.4:
    resolution: {integrity: sha512-bXE4cR/kVZhKZX/RjPEflHaKVhUVl85noU3v6b8apfQEc1x4A+zBxjZ4lN8LqGd6WZ3dl98pY4o717VFmoPp+A==}

snapshots:

  '@alloc/quick-lru@5.2.0': {}

  '@ampproject/remapping@2.3.0':
    dependencies:
      '@jridgewell/gen-mapping': 0.3.8
      '@jridgewell/trace-mapping': 0.3.25

  '@babel/code-frame@7.27.1':
    dependencies:
      '@babel/helper-validator-identifier': 7.27.1
      js-tokens: 4.0.0
      picocolors: 1.1.1

  '@babel/compat-data@7.27.2': {}

  '@babel/core@7.27.1':
    dependencies:
      '@ampproject/remapping': 2.3.0
      '@babel/code-frame': 7.27.1
      '@babel/generator': 7.27.1
      '@babel/helper-compilation-targets': 7.27.2
      '@babel/helper-module-transforms': 7.27.1(@babel/core@7.27.1)
      '@babel/helpers': 7.27.1
      '@babel/parser': 7.27.2
      '@babel/template': 7.27.2
      '@babel/traverse': 7.27.1
      '@babel/types': 7.27.1
      convert-source-map: 2.0.0
      debug: 4.4.1
      gensync: 1.0.0-beta.2
      json5: 2.2.3
      semver: 6.3.1
    transitivePeerDependencies:
      - supports-color

  '@babel/generator@7.27.1':
    dependencies:
      '@babel/parser': 7.27.2
      '@babel/types': 7.27.1
      '@jridgewell/gen-mapping': 0.3.8
      '@jridgewell/trace-mapping': 0.3.25
      jsesc: 3.1.0

  '@babel/helper-compilation-targets@7.27.2':
    dependencies:
      '@babel/compat-data': 7.27.2
      '@babel/helper-validator-option': 7.27.1
      browserslist: 4.24.5
      lru-cache: 5.1.1
      semver: 6.3.1

  '@babel/helper-module-imports@7.27.1':
    dependencies:
      '@babel/traverse': 7.27.1
      '@babel/types': 7.27.1
    transitivePeerDependencies:
      - supports-color

  '@babel/helper-module-transforms@7.27.1(@babel/core@7.27.1)':
    dependencies:
      '@babel/core': 7.27.1
      '@babel/helper-module-imports': 7.27.1
      '@babel/helper-validator-identifier': 7.27.1
      '@babel/traverse': 7.27.1
    transitivePeerDependencies:
      - supports-color

  '@babel/helper-plugin-utils@7.27.1': {}

  '@babel/helper-string-parser@7.27.1': {}

  '@babel/helper-validator-identifier@7.27.1': {}

  '@babel/helper-validator-option@7.27.1': {}

  '@babel/helpers@7.27.1':
    dependencies:
      '@babel/template': 7.27.2
      '@babel/types': 7.27.1

  '@babel/parser@7.27.2':
    dependencies:
      '@babel/types': 7.27.1

  '@babel/plugin-syntax-async-generators@7.8.4(@babel/core@7.27.1)':
    dependencies:
      '@babel/core': 7.27.1
      '@babel/helper-plugin-utils': 7.27.1

  '@babel/plugin-syntax-bigint@7.8.3(@babel/core@7.27.1)':
    dependencies:
      '@babel/core': 7.27.1
      '@babel/helper-plugin-utils': 7.27.1

  '@babel/plugin-syntax-class-properties@7.12.13(@babel/core@7.27.1)':
    dependencies:
      '@babel/core': 7.27.1
      '@babel/helper-plugin-utils': 7.27.1

  '@babel/plugin-syntax-class-static-block@7.14.5(@babel/core@7.27.1)':
    dependencies:
      '@babel/core': 7.27.1
      '@babel/helper-plugin-utils': 7.27.1

  '@babel/plugin-syntax-import-attributes@7.27.1(@babel/core@7.27.1)':
    dependencies:
      '@babel/core': 7.27.1
      '@babel/helper-plugin-utils': 7.27.1

  '@babel/plugin-syntax-import-meta@7.10.4(@babel/core@7.27.1)':
    dependencies:
      '@babel/core': 7.27.1
      '@babel/helper-plugin-utils': 7.27.1

  '@babel/plugin-syntax-json-strings@7.8.3(@babel/core@7.27.1)':
    dependencies:
      '@babel/core': 7.27.1
      '@babel/helper-plugin-utils': 7.27.1

  '@babel/plugin-syntax-logical-assignment-operators@7.10.4(@babel/core@7.27.1)':
    dependencies:
      '@babel/core': 7.27.1
      '@babel/helper-plugin-utils': 7.27.1

  '@babel/plugin-syntax-nullish-coalescing-operator@7.8.3(@babel/core@7.27.1)':
    dependencies:
      '@babel/core': 7.27.1
      '@babel/helper-plugin-utils': 7.27.1

  '@babel/plugin-syntax-numeric-separator@7.10.4(@babel/core@7.27.1)':
    dependencies:
      '@babel/core': 7.27.1
      '@babel/helper-plugin-utils': 7.27.1

  '@babel/plugin-syntax-object-rest-spread@7.8.3(@babel/core@7.27.1)':
    dependencies:
      '@babel/core': 7.27.1
      '@babel/helper-plugin-utils': 7.27.1

  '@babel/plugin-syntax-optional-catch-binding@7.8.3(@babel/core@7.27.1)':
    dependencies:
      '@babel/core': 7.27.1
      '@babel/helper-plugin-utils': 7.27.1

  '@babel/plugin-syntax-optional-chaining@7.8.3(@babel/core@7.27.1)':
    dependencies:
      '@babel/core': 7.27.1
      '@babel/helper-plugin-utils': 7.27.1

  '@babel/plugin-syntax-private-property-in-object@7.14.5(@babel/core@7.27.1)':
    dependencies:
      '@babel/core': 7.27.1
      '@babel/helper-plugin-utils': 7.27.1

  '@babel/plugin-syntax-top-level-await@7.14.5(@babel/core@7.27.1)':
    dependencies:
      '@babel/core': 7.27.1
      '@babel/helper-plugin-utils': 7.27.1

  '@babel/runtime@7.27.1': {}

  '@babel/template@7.27.2':
    dependencies:
      '@babel/code-frame': 7.27.1
      '@babel/parser': 7.27.2
      '@babel/types': 7.27.1

  '@babel/traverse@7.27.1':
    dependencies:
      '@babel/code-frame': 7.27.1
      '@babel/generator': 7.27.1
      '@babel/parser': 7.27.2
      '@babel/template': 7.27.2
      '@babel/types': 7.27.1
      debug: 4.4.1
      globals: 11.12.0
    transitivePeerDependencies:
      - supports-color

  '@babel/types@7.27.1':
    dependencies:
      '@babel/helper-string-parser': 7.27.1
      '@babel/helper-validator-identifier': 7.27.1

  '@emnapi/runtime@1.4.3':
    dependencies:
      tslib: 2.8.1
    optional: true

  '@emotion/babel-plugin@11.13.5':
    dependencies:
      '@babel/helper-module-imports': 7.27.1
      '@babel/runtime': 7.27.1
      '@emotion/hash': 0.9.2
      '@emotion/memoize': 0.9.0
      '@emotion/serialize': 1.3.3
      babel-plugin-macros: 3.1.0
      convert-source-map: 1.9.0
      escape-string-regexp: 4.0.0
      find-root: 1.1.0
      source-map: 0.5.7
      stylis: 4.2.0
    transitivePeerDependencies:
      - supports-color

  '@emotion/cache@11.14.0':
    dependencies:
      '@emotion/memoize': 0.9.0
      '@emotion/sheet': 1.4.0
      '@emotion/utils': 1.4.2
      '@emotion/weak-memoize': 0.4.0
      stylis: 4.2.0

  '@emotion/hash@0.9.2': {}

  '@emotion/is-prop-valid@1.3.1':
    dependencies:
      '@emotion/memoize': 0.9.0

  '@emotion/memoize@0.9.0': {}

  '@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      '@babel/runtime': 7.27.1
      '@emotion/babel-plugin': 11.13.5
      '@emotion/cache': 11.14.0
      '@emotion/serialize': 1.3.3
      '@emotion/use-insertion-effect-with-fallbacks': 1.2.0(react@18.3.1)
      '@emotion/utils': 1.4.2
      '@emotion/weak-memoize': 0.4.0
      hoist-non-react-statics: 3.3.2
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.22
    transitivePeerDependencies:
      - supports-color

  '@emotion/serialize@1.3.3':
    dependencies:
      '@emotion/hash': 0.9.2
      '@emotion/memoize': 0.9.0
      '@emotion/unitless': 0.10.0
      '@emotion/utils': 1.4.2
      csstype: 3.1.3

  '@emotion/sheet@1.4.0': {}

  '@emotion/styled@11.14.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      '@babel/runtime': 7.27.1
      '@emotion/babel-plugin': 11.13.5
      '@emotion/is-prop-valid': 1.3.1
      '@emotion/react': 11.14.0(@types/react@18.3.22)(react@18.3.1)
      '@emotion/serialize': 1.3.3
      '@emotion/use-insertion-effect-with-fallbacks': 1.2.0(react@18.3.1)
      '@emotion/utils': 1.4.2
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.22
    transitivePeerDependencies:
      - supports-color

  '@emotion/unitless@0.10.0': {}

  '@emotion/use-insertion-effect-with-fallbacks@1.2.0(react@18.3.1)':
    dependencies:
      react: 18.3.1

  '@emotion/utils@1.4.2': {}

  '@emotion/weak-memoize@0.4.0': {}

  '@floating-ui/core@1.7.0':
    dependencies:
      '@floating-ui/utils': 0.2.9

  '@floating-ui/dom@1.7.0':
    dependencies:
      '@floating-ui/core': 1.7.0
      '@floating-ui/utils': 0.2.9

  '@floating-ui/react-dom@2.1.2(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@floating-ui/dom': 1.7.0
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)

  '@floating-ui/utils@0.2.9': {}

  '@hookform/resolvers@3.10.0(react-hook-form@7.56.4(react@18.3.1))':
    dependencies:
      react-hook-form: 7.56.4(react@18.3.1)

  '@iconify/react@6.0.0(react@18.3.1)':
    dependencies:
      '@iconify/types': 2.0.0
      react: 18.3.1

  '@iconify/types@2.0.0': {}

  '@img/sharp-darwin-arm64@0.33.5':
    optionalDependencies:
      '@img/sharp-libvips-darwin-arm64': 1.0.4
    optional: true

  '@img/sharp-darwin-x64@0.33.5':
    optionalDependencies:
      '@img/sharp-libvips-darwin-x64': 1.0.4
    optional: true

  '@img/sharp-libvips-darwin-arm64@1.0.4':
    optional: true

  '@img/sharp-libvips-darwin-x64@1.0.4':
    optional: true

  '@img/sharp-libvips-linux-arm64@1.0.4':
    optional: true

  '@img/sharp-libvips-linux-arm@1.0.5':
    optional: true

  '@img/sharp-libvips-linux-s390x@1.0.4':
    optional: true

  '@img/sharp-libvips-linux-x64@1.0.4':
    optional: true

  '@img/sharp-libvips-linuxmusl-arm64@1.0.4':
    optional: true

  '@img/sharp-libvips-linuxmusl-x64@1.0.4':
    optional: true

  '@img/sharp-linux-arm64@0.33.5':
    optionalDependencies:
      '@img/sharp-libvips-linux-arm64': 1.0.4
    optional: true

  '@img/sharp-linux-arm@0.33.5':
    optionalDependencies:
      '@img/sharp-libvips-linux-arm': 1.0.5
    optional: true

  '@img/sharp-linux-s390x@0.33.5':
    optionalDependencies:
      '@img/sharp-libvips-linux-s390x': 1.0.4
    optional: true

  '@img/sharp-linux-x64@0.33.5':
    optionalDependencies:
      '@img/sharp-libvips-linux-x64': 1.0.4
    optional: true

  '@img/sharp-linuxmusl-arm64@0.33.5':
    optionalDependencies:
      '@img/sharp-libvips-linuxmusl-arm64': 1.0.4
    optional: true

  '@img/sharp-linuxmusl-x64@0.33.5':
    optionalDependencies:
      '@img/sharp-libvips-linuxmusl-x64': 1.0.4
    optional: true

  '@img/sharp-wasm32@0.33.5':
    dependencies:
      '@emnapi/runtime': 1.4.3
    optional: true

  '@img/sharp-win32-ia32@0.33.5':
    optional: true

  '@img/sharp-win32-x64@0.33.5':
    optional: true

  '@isaacs/cliui@8.0.2':
    dependencies:
      string-width: 5.1.2
      string-width-cjs: string-width@4.2.3
      strip-ansi: 7.1.0
      strip-ansi-cjs: strip-ansi@6.0.1
      wrap-ansi: 8.1.0
      wrap-ansi-cjs: wrap-ansi@7.0.0

  '@isaacs/ttlcache@1.4.1': {}

  '@istanbuljs/load-nyc-config@1.1.0':
    dependencies:
      camelcase: 5.3.1
      find-up: 4.1.0
      get-package-type: 0.1.0
      js-yaml: 3.14.1
      resolve-from: 5.0.0

  '@istanbuljs/schema@0.1.3': {}

  '@jest/create-cache-key-function@29.7.0':
    dependencies:
      '@jest/types': 29.6.3

  '@jest/environment@29.7.0':
    dependencies:
      '@jest/fake-timers': 29.7.0
      '@jest/types': 29.6.3
      '@types/node': 22.15.21
      jest-mock: 29.7.0

  '@jest/fake-timers@29.7.0':
    dependencies:
      '@jest/types': 29.6.3
      '@sinonjs/fake-timers': 10.3.0
      '@types/node': 22.15.21
      jest-message-util: 29.7.0
      jest-mock: 29.7.0
      jest-util: 29.7.0

  '@jest/schemas@29.6.3':
    dependencies:
      '@sinclair/typebox': 0.27.8

  '@jest/transform@29.7.0':
    dependencies:
      '@babel/core': 7.27.1
      '@jest/types': 29.6.3
      '@jridgewell/trace-mapping': 0.3.25
      babel-plugin-istanbul: 6.1.1
      chalk: 4.1.2
      convert-source-map: 2.0.0
      fast-json-stable-stringify: 2.1.0
      graceful-fs: 4.2.11
      jest-haste-map: 29.7.0
      jest-regex-util: 29.6.3
      jest-util: 29.7.0
      micromatch: 4.0.8
      pirates: 4.0.7
      slash: 3.0.0
      write-file-atomic: 4.0.2
    transitivePeerDependencies:
      - supports-color

  '@jest/types@29.6.3':
    dependencies:
      '@jest/schemas': 29.6.3
      '@types/istanbul-lib-coverage': 2.0.6
      '@types/istanbul-reports': 3.0.4
      '@types/node': 22.15.21
      '@types/yargs': 17.0.33
      chalk: 4.1.2

  '@jridgewell/gen-mapping@0.3.8':
    dependencies:
      '@jridgewell/set-array': 1.2.1
      '@jridgewell/sourcemap-codec': 1.5.0
      '@jridgewell/trace-mapping': 0.3.25

  '@jridgewell/resolve-uri@3.1.2': {}

  '@jridgewell/set-array@1.2.1': {}

  '@jridgewell/source-map@0.3.6':
    dependencies:
      '@jridgewell/gen-mapping': 0.3.8
      '@jridgewell/trace-mapping': 0.3.25

  '@jridgewell/sourcemap-codec@1.5.0': {}

  '@jridgewell/trace-mapping@0.3.25':
    dependencies:
      '@jridgewell/resolve-uri': 3.1.2
      '@jridgewell/sourcemap-codec': 1.5.0

  '@monaco-editor/loader@1.5.0':
    dependencies:
      state-local: 1.0.7

  '@monaco-editor/react@4.7.0(monaco-editor@0.50.0)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@monaco-editor/loader': 1.5.0
      monaco-editor: 0.50.0
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)

  '@mui/core-downloads-tracker@7.1.0': {}

  '@mui/material@7.1.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@emotion/styled@11.14.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@babel/runtime': 7.27.1
      '@mui/core-downloads-tracker': 7.1.0
      '@mui/system': 7.1.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@emotion/styled@11.14.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react@18.3.1)
      '@mui/types': 7.4.2(@types/react@18.3.22)
      '@mui/utils': 7.1.0(@types/react@18.3.22)(react@18.3.1)
      '@popperjs/core': 2.11.8
      '@types/react-transition-group': 4.4.12(@types/react@18.3.22)
      clsx: 2.1.1
      csstype: 3.1.3
      prop-types: 15.8.1
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      react-is: 19.1.0
      react-transition-group: 4.4.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
    optionalDependencies:
      '@emotion/react': 11.14.0(@types/react@18.3.22)(react@18.3.1)
      '@emotion/styled': 11.14.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react@18.3.1)
      '@types/react': 18.3.22

  '@mui/private-theming@7.1.0(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      '@babel/runtime': 7.27.1
      '@mui/utils': 7.1.0(@types/react@18.3.22)(react@18.3.1)
      prop-types: 15.8.1
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.22

  '@mui/styled-engine@7.1.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@emotion/styled@11.14.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@babel/runtime': 7.27.1
      '@emotion/cache': 11.14.0
      '@emotion/serialize': 1.3.3
      '@emotion/sheet': 1.4.0
      csstype: 3.1.3
      prop-types: 15.8.1
      react: 18.3.1
    optionalDependencies:
      '@emotion/react': 11.14.0(@types/react@18.3.22)(react@18.3.1)
      '@emotion/styled': 11.14.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react@18.3.1)

  '@mui/system@7.1.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@emotion/styled@11.14.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      '@babel/runtime': 7.27.1
      '@mui/private-theming': 7.1.0(@types/react@18.3.22)(react@18.3.1)
      '@mui/styled-engine': 7.1.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@emotion/styled@11.14.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react@18.3.1))(react@18.3.1)
      '@mui/types': 7.4.2(@types/react@18.3.22)
      '@mui/utils': 7.1.0(@types/react@18.3.22)(react@18.3.1)
      clsx: 2.1.1
      csstype: 3.1.3
      prop-types: 15.8.1
      react: 18.3.1
    optionalDependencies:
      '@emotion/react': 11.14.0(@types/react@18.3.22)(react@18.3.1)
      '@emotion/styled': 11.14.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react@18.3.1)
      '@types/react': 18.3.22

  '@mui/types@7.4.2(@types/react@18.3.22)':
    dependencies:
      '@babel/runtime': 7.27.1
    optionalDependencies:
      '@types/react': 18.3.22

  '@mui/utils@7.1.0(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      '@babel/runtime': 7.27.1
      '@mui/types': 7.4.2(@types/react@18.3.22)
      '@types/prop-types': 15.7.14
      clsx: 2.1.1
      prop-types: 15.8.1
      react: 18.3.1
      react-is: 19.1.0
    optionalDependencies:
      '@types/react': 18.3.22

  '@next/env@15.2.4': {}

  '@next/swc-darwin-arm64@15.2.4':
    optional: true

  '@next/swc-darwin-x64@15.2.4':
    optional: true

  '@next/swc-linux-arm64-gnu@15.2.4':
    optional: true

  '@next/swc-linux-arm64-musl@15.2.4':
    optional: true

  '@next/swc-linux-x64-gnu@15.2.4':
    optional: true

  '@next/swc-linux-x64-musl@15.2.4':
    optional: true

  '@next/swc-win32-arm64-msvc@15.2.4':
    optional: true

  '@next/swc-win32-x64-msvc@15.2.4':
    optional: true

  '@nodelib/fs.scandir@2.1.5':
    dependencies:
      '@nodelib/fs.stat': 2.0.5
      run-parallel: 1.2.0

  '@nodelib/fs.stat@2.0.5': {}

  '@nodelib/fs.walk@1.2.8':
    dependencies:
      '@nodelib/fs.scandir': 2.1.5
      fastq: 1.19.1

  '@pkgjs/parseargs@0.11.0':
    optional: true

  '@popperjs/core@2.11.8': {}

  '@radix-ui/number@1.1.1': {}

  '@radix-ui/primitive@1.1.2': {}

  '@radix-ui/react-accordion@1.2.11(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-collapsible': 1.1.11(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-collection': 1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-direction': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-id': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-alert-dialog@1.1.14(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-dialog': 1.1.14(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-slot': 1.2.3(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-arrow@1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-aspect-ratio@1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-avatar@1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-is-hydrated': 0.1.0(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-checkbox@1.3.2(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-presence': 1.1.4(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-previous': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-size': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-collapsible@1.1.11(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-id': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-presence': 1.1.4(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-collection@1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-slot': 1.2.3(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-compose-refs@1.1.2(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.22

  '@radix-ui/react-context-menu@2.2.15(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-menu': 2.1.15(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-context@1.1.2(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.22

  '@radix-ui/react-dialog@1.1.14(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-focus-guards': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-focus-scope': 1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-id': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-portal': 1.1.9(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-presence': 1.1.4(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-slot': 1.2.3(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      aria-hidden: 1.2.6
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      react-remove-scroll: 2.7.0(@types/react@18.3.22)(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-direction@1.1.1(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.22

  '@radix-ui/react-dismissable-layer@1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-escape-keydown': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-dropdown-menu@2.1.15(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-id': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-menu': 2.1.15(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-focus-guards@1.1.2(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.22

  '@radix-ui/react-focus-scope@1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-hover-card@1.1.14(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-popper': 1.2.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-portal': 1.1.9(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-presence': 1.1.4(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-id@1.1.1(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.22

  '@radix-ui/react-label@2.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-menu@2.1.15(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-collection': 1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-direction': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-focus-guards': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-focus-scope': 1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-id': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-popper': 1.2.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-portal': 1.1.9(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-presence': 1.1.4(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-roving-focus': 1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-slot': 1.2.3(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      aria-hidden: 1.2.6
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      react-remove-scroll: 2.7.0(@types/react@18.3.22)(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-menubar@1.1.15(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-collection': 1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-direction': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-id': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-menu': 2.1.15(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-roving-focus': 1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-navigation-menu@1.2.13(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-collection': 1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-direction': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-id': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-presence': 1.1.4(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-previous': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-visually-hidden': 1.2.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-popover@1.1.14(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-focus-guards': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-focus-scope': 1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-id': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-popper': 1.2.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-portal': 1.1.9(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-presence': 1.1.4(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-slot': 1.2.3(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      aria-hidden: 1.2.6
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      react-remove-scroll: 2.7.0(@types/react@18.3.22)(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-popper@1.2.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@floating-ui/react-dom': 2.1.2(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-arrow': 1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-rect': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-size': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/rect': 1.1.1
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-portal@1.1.9(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-presence@1.1.4(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-primitive@2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/react-slot': 1.2.3(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-progress@1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-radio-group@1.3.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-direction': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-presence': 1.1.4(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-roving-focus': 1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-previous': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-size': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-roving-focus@1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-collection': 1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-direction': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-id': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-scroll-area@1.2.9(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/number': 1.1.1
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-direction': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-presence': 1.1.4(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-select@2.2.5(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/number': 1.1.1
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-collection': 1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-direction': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-focus-guards': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-focus-scope': 1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-id': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-popper': 1.2.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-portal': 1.1.9(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-slot': 1.2.3(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-previous': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-visually-hidden': 1.2.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      aria-hidden: 1.2.6
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      react-remove-scroll: 2.7.0(@types/react@18.3.22)(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-separator@1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-slider@1.3.5(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/number': 1.1.1
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-collection': 1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-direction': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-previous': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-size': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-slot@1.2.3(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.22

  '@radix-ui/react-switch@1.2.5(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-previous': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-size': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-tabs@1.1.12(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-direction': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-id': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-presence': 1.1.4(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-roving-focus': 1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-toast@1.2.14(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-collection': 1.1.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-portal': 1.1.9(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-presence': 1.1.4(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-visually-hidden': 1.2.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-toggle-group@1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-direction': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-roving-focus': 1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-toggle': 1.1.9(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-toggle@1.1.9(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-tooltip@1.2.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/primitive': 1.1.2
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-context': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-dismissable-layer': 1.1.10(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-id': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-popper': 1.2.7(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-portal': 1.1.9(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-presence': 1.1.4(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-slot': 1.2.3(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-controllable-state': 1.2.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-visually-hidden': 1.2.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/react-use-callback-ref@1.1.1(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.22

  '@radix-ui/react-use-controllable-state@1.2.2(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      '@radix-ui/react-use-effect-event': 0.0.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.22

  '@radix-ui/react-use-effect-event@0.0.2(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.22

  '@radix-ui/react-use-escape-keydown@1.1.1(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      '@radix-ui/react-use-callback-ref': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.22

  '@radix-ui/react-use-is-hydrated@0.1.0(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      react: 18.3.1
      use-sync-external-store: 1.5.0(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22

  '@radix-ui/react-use-layout-effect@1.1.1(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.22

  '@radix-ui/react-use-previous@1.1.1(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.22

  '@radix-ui/react-use-rect@1.1.1(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      '@radix-ui/rect': 1.1.1
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.22

  '@radix-ui/react-use-size@1.1.1(@types/react@18.3.22)(react@18.3.1)':
    dependencies:
      '@radix-ui/react-use-layout-effect': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
    optionalDependencies:
      '@types/react': 18.3.22

  '@radix-ui/react-visually-hidden@1.2.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      '@types/react-dom': 18.3.7(@types/react@18.3.22)

  '@radix-ui/rect@1.1.1': {}

  '@react-native/assets-registry@0.79.2': {}

  '@react-native/codegen@0.79.2(@babel/core@7.27.1)':
    dependencies:
      '@babel/core': 7.27.1
      glob: 7.2.3
      hermes-parser: 0.25.1
      invariant: 2.2.4
      nullthrows: 1.1.1
      yargs: 17.7.2

  '@react-native/community-cli-plugin@0.79.2':
    dependencies:
      '@react-native/dev-middleware': 0.79.2
      chalk: 4.1.2
      debug: 2.6.9
      invariant: 2.2.4
      metro: 0.82.4
      metro-config: 0.82.4
      metro-core: 0.82.4
      semver: 7.7.2
    transitivePeerDependencies:
      - bufferutil
      - supports-color
      - utf-8-validate

  '@react-native/debugger-frontend@0.79.2': {}

  '@react-native/dev-middleware@0.79.2':
    dependencies:
      '@isaacs/ttlcache': 1.4.1
      '@react-native/debugger-frontend': 0.79.2
      chrome-launcher: 0.15.2
      chromium-edge-launcher: 0.2.0
      connect: 3.7.0
      debug: 2.6.9
      invariant: 2.2.4
      nullthrows: 1.1.1
      open: 7.4.2
      serve-static: 1.16.2
      ws: 6.2.3
    transitivePeerDependencies:
      - bufferutil
      - supports-color
      - utf-8-validate

  '@react-native/gradle-plugin@0.79.2': {}

  '@react-native/js-polyfills@0.79.2': {}

  '@react-native/normalize-colors@0.79.2': {}

  '@react-native/virtualized-lists@0.79.2(@types/react@18.3.22)(react-native@0.79.2(@babel/core@7.27.1)(@types/react@18.3.22)(react@18.3.1))(react@18.3.1)':
    dependencies:
      invariant: 2.2.4
      nullthrows: 1.1.1
      react: 18.3.1
      react-native: 0.79.2(@babel/core@7.27.1)(@types/react@18.3.22)(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22

  '@react-spring/animated@9.7.5(react@18.3.1)':
    dependencies:
      '@react-spring/shared': 9.7.5(react@18.3.1)
      '@react-spring/types': 9.7.5
      react: 18.3.1

  '@react-spring/core@9.7.5(react@18.3.1)':
    dependencies:
      '@react-spring/animated': 9.7.5(react@18.3.1)
      '@react-spring/shared': 9.7.5(react@18.3.1)
      '@react-spring/types': 9.7.5
      react: 18.3.1

  '@react-spring/konva@9.7.5(konva@9.3.20)(react-konva@18.2.10(@types/react@18.3.22)(konva@9.3.20)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@react-spring/animated': 9.7.5(react@18.3.1)
      '@react-spring/core': 9.7.5(react@18.3.1)
      '@react-spring/shared': 9.7.5(react@18.3.1)
      '@react-spring/types': 9.7.5
      konva: 9.3.20
      react: 18.3.1
      react-konva: 18.2.10(@types/react@18.3.22)(konva@9.3.20)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)

  '@react-spring/native@9.7.5(react-native@0.79.2(@babel/core@7.27.1)(@types/react@18.3.22)(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@react-spring/animated': 9.7.5(react@18.3.1)
      '@react-spring/core': 9.7.5(react@18.3.1)
      '@react-spring/shared': 9.7.5(react@18.3.1)
      '@react-spring/types': 9.7.5
      react: 18.3.1
      react-native: 0.79.2(@babel/core@7.27.1)(@types/react@18.3.22)(react@18.3.1)

  '@react-spring/rafz@9.7.5': {}

  '@react-spring/shared@9.7.5(react@18.3.1)':
    dependencies:
      '@react-spring/rafz': 9.7.5
      '@react-spring/types': 9.7.5
      react: 18.3.1

  '@react-spring/three@9.7.5(@react-three/fiber@9.1.2(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react-native@0.79.2(@babel/core@7.27.1)(@types/react@18.3.22)(react@18.3.1))(react@18.3.1)(three@0.176.0))(react@18.3.1)(three@0.176.0)':
    dependencies:
      '@react-spring/animated': 9.7.5(react@18.3.1)
      '@react-spring/core': 9.7.5(react@18.3.1)
      '@react-spring/shared': 9.7.5(react@18.3.1)
      '@react-spring/types': 9.7.5
      '@react-three/fiber': 9.1.2(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react-native@0.79.2(@babel/core@7.27.1)(@types/react@18.3.22)(react@18.3.1))(react@18.3.1)(three@0.176.0)
      react: 18.3.1
      three: 0.176.0

  '@react-spring/types@9.7.5': {}

  '@react-spring/web@9.7.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
    dependencies:
      '@react-spring/animated': 9.7.5(react@18.3.1)
      '@react-spring/core': 9.7.5(react@18.3.1)
      '@react-spring/shared': 9.7.5(react@18.3.1)
      '@react-spring/types': 9.7.5
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)

  '@react-spring/zdog@9.7.5(react-dom@18.3.1(react@18.3.1))(react-zdog@1.2.2)(react@18.3.1)(zdog@1.1.3)':
    dependencies:
      '@react-spring/animated': 9.7.5(react@18.3.1)
      '@react-spring/core': 9.7.5(react@18.3.1)
      '@react-spring/shared': 9.7.5(react@18.3.1)
      '@react-spring/types': 9.7.5
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      react-zdog: 1.2.2
      zdog: 1.1.3

  '@react-three/fiber@9.1.2(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react-native@0.79.2(@babel/core@7.27.1)(@types/react@18.3.22)(react@18.3.1))(react@18.3.1)(three@0.176.0)':
    dependencies:
      '@babel/runtime': 7.27.1
      '@types/react-reconciler': 0.28.9(@types/react@18.3.22)
      '@types/webxr': 0.5.22
      base64-js: 1.5.1
      buffer: 6.0.3
      its-fine: 2.0.0(@types/react@18.3.22)(react@18.3.1)
      react: 18.3.1
      react-reconciler: 0.31.0(react@18.3.1)
      react-use-measure: 2.1.7(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      scheduler: 0.25.0
      suspend-react: 0.1.3(react@18.3.1)
      three: 0.176.0
      use-sync-external-store: 1.5.0(react@18.3.1)
      zustand: 5.0.5(@types/react@18.3.22)(react@18.3.1)(use-sync-external-store@1.5.0(react@18.3.1))
    optionalDependencies:
      react-dom: 18.3.1(react@18.3.1)
      react-native: 0.79.2(@babel/core@7.27.1)(@types/react@18.3.22)(react@18.3.1)
    transitivePeerDependencies:
      - '@types/react'
      - immer

  '@shikijs/core@1.29.2':
    dependencies:
      '@shikijs/engine-javascript': 1.29.2
      '@shikijs/engine-oniguruma': 1.29.2
      '@shikijs/types': 1.29.2
      '@shikijs/vscode-textmate': 10.0.2
      '@types/hast': 3.0.4
      hast-util-to-html: 9.0.5

  '@shikijs/engine-javascript@1.29.2':
    dependencies:
      '@shikijs/types': 1.29.2
      '@shikijs/vscode-textmate': 10.0.2
      oniguruma-to-es: 2.3.0

  '@shikijs/engine-oniguruma@1.29.2':
    dependencies:
      '@shikijs/types': 1.29.2
      '@shikijs/vscode-textmate': 10.0.2

  '@shikijs/langs@1.29.2':
    dependencies:
      '@shikijs/types': 1.29.2

  '@shikijs/themes@1.29.2':
    dependencies:
      '@shikijs/types': 1.29.2

  '@shikijs/types@1.29.2':
    dependencies:
      '@shikijs/vscode-textmate': 10.0.2
      '@types/hast': 3.0.4

  '@shikijs/vscode-textmate@10.0.2': {}

  '@sinclair/typebox@0.27.8': {}

  '@sinonjs/commons@3.0.1':
    dependencies:
      type-detect: 4.0.8

  '@sinonjs/fake-timers@10.3.0':
    dependencies:
      '@sinonjs/commons': 3.0.1

  '@swc/counter@0.1.3': {}

  '@swc/helpers@0.5.15':
    dependencies:
      tslib: 2.8.1

  '@tailwindcss/typography@0.5.16(tailwindcss@3.4.17)':
    dependencies:
      lodash.castarray: 4.4.0
      lodash.isplainobject: 4.0.6
      lodash.merge: 4.6.2
      postcss-selector-parser: 6.0.10
      tailwindcss: 3.4.17

  '@types/babel__core@7.20.5':
    dependencies:
      '@babel/parser': 7.27.2
      '@babel/types': 7.27.1
      '@types/babel__generator': 7.27.0
      '@types/babel__template': 7.4.4
      '@types/babel__traverse': 7.20.7

  '@types/babel__generator@7.27.0':
    dependencies:
      '@babel/types': 7.27.1

  '@types/babel__template@7.4.4':
    dependencies:
      '@babel/parser': 7.27.2
      '@babel/types': 7.27.1

  '@types/babel__traverse@7.20.7':
    dependencies:
      '@babel/types': 7.27.1

  '@types/d3-array@3.2.1': {}

  '@types/d3-color@3.1.3': {}

  '@types/d3-ease@3.0.2': {}

  '@types/d3-interpolate@3.0.4':
    dependencies:
      '@types/d3-color': 3.1.3

  '@types/d3-path@3.1.1': {}

  '@types/d3-scale@4.0.9':
    dependencies:
      '@types/d3-time': 3.0.4

  '@types/d3-shape@3.1.7':
    dependencies:
      '@types/d3-path': 3.1.1

  '@types/d3-time@3.0.4': {}

  '@types/d3-timer@3.0.2': {}

  '@types/debug@4.1.12':
    dependencies:
      '@types/ms': 2.1.0

  '@types/estree-jsx@1.0.5':
    dependencies:
      '@types/estree': 1.0.7

  '@types/estree@1.0.7': {}

  '@types/graceful-fs@4.1.9':
    dependencies:
      '@types/node': 22.15.21

  '@types/hast@2.3.10':
    dependencies:
      '@types/unist': 2.0.11

  '@types/hast@3.0.4':
    dependencies:
      '@types/unist': 3.0.3

  '@types/istanbul-lib-coverage@2.0.6': {}

  '@types/istanbul-lib-report@3.0.3':
    dependencies:
      '@types/istanbul-lib-coverage': 2.0.6

  '@types/istanbul-reports@3.0.4':
    dependencies:
      '@types/istanbul-lib-report': 3.0.3

  '@types/katex@0.16.7': {}

  '@types/mdast@4.0.4':
    dependencies:
      '@types/unist': 3.0.3

  '@types/ms@2.1.0': {}

  '@types/node@22.15.21':
    dependencies:
      undici-types: 6.21.0

  '@types/parse-json@4.0.2': {}

  '@types/prop-types@15.7.14': {}

  '@types/react-dom@18.3.7(@types/react@18.3.22)':
    dependencies:
      '@types/react': 18.3.22

  '@types/react-reconciler@0.28.9(@types/react@18.3.22)':
    dependencies:
      '@types/react': 18.3.22

  '@types/react-syntax-highlighter@15.5.13':
    dependencies:
      '@types/react': 18.3.22

  '@types/react-transition-group@4.4.12(@types/react@18.3.22)':
    dependencies:
      '@types/react': 18.3.22

  '@types/react@18.3.22':
    dependencies:
      '@types/prop-types': 15.7.14
      csstype: 3.1.3

  '@types/stack-utils@2.0.3': {}

  '@types/unist@2.0.11': {}

  '@types/unist@3.0.3': {}

  '@types/uuid@10.0.0': {}

  '@types/webxr@0.5.22': {}

  '@types/yargs-parser@21.0.3': {}

  '@types/yargs@17.0.33':
    dependencies:
      '@types/yargs-parser': 21.0.3

  '@ungap/structured-clone@1.3.0': {}

  abort-controller@3.0.0:
    dependencies:
      event-target-shim: 5.0.1

  accepts@1.3.8:
    dependencies:
      mime-types: 2.1.35
      negotiator: 0.6.3

  acorn@8.14.1: {}

  add@2.0.6: {}

  agent-base@7.1.3: {}

  anser@1.4.10: {}

  ansi-regex@5.0.1: {}

  ansi-regex@6.1.0: {}

  ansi-styles@4.3.0:
    dependencies:
      color-convert: 2.0.1

  ansi-styles@5.2.0: {}

  ansi-styles@6.2.1: {}

  any-promise@1.3.0: {}

  anymatch@3.1.3:
    dependencies:
      normalize-path: 3.0.0
      picomatch: 2.3.1

  arg@5.0.2: {}

  argparse@1.0.10:
    dependencies:
      sprintf-js: 1.0.3

  aria-hidden@1.2.6:
    dependencies:
      tslib: 2.8.1

  asap@2.0.6: {}

  async-limiter@1.0.1: {}

  autoprefixer@10.4.21(postcss@8.5.3):
    dependencies:
      browserslist: 4.24.5
      caniuse-lite: 1.0.30001718
      fraction.js: 4.3.7
      normalize-range: 0.1.2
      picocolors: 1.1.1
      postcss: 8.5.3
      postcss-value-parser: 4.2.0

  babel-jest@29.7.0(@babel/core@7.27.1):
    dependencies:
      '@babel/core': 7.27.1
      '@jest/transform': 29.7.0
      '@types/babel__core': 7.20.5
      babel-plugin-istanbul: 6.1.1
      babel-preset-jest: 29.6.3(@babel/core@7.27.1)
      chalk: 4.1.2
      graceful-fs: 4.2.11
      slash: 3.0.0
    transitivePeerDependencies:
      - supports-color

  babel-plugin-istanbul@6.1.1:
    dependencies:
      '@babel/helper-plugin-utils': 7.27.1
      '@istanbuljs/load-nyc-config': 1.1.0
      '@istanbuljs/schema': 0.1.3
      istanbul-lib-instrument: 5.2.1
      test-exclude: 6.0.0
    transitivePeerDependencies:
      - supports-color

  babel-plugin-jest-hoist@29.6.3:
    dependencies:
      '@babel/template': 7.27.2
      '@babel/types': 7.27.1
      '@types/babel__core': 7.20.5
      '@types/babel__traverse': 7.20.7

  babel-plugin-macros@3.1.0:
    dependencies:
      '@babel/runtime': 7.27.1
      cosmiconfig: 7.1.0
      resolve: 1.22.10

  babel-plugin-syntax-hermes-parser@0.25.1:
    dependencies:
      hermes-parser: 0.25.1

  babel-preset-current-node-syntax@1.1.0(@babel/core@7.27.1):
    dependencies:
      '@babel/core': 7.27.1
      '@babel/plugin-syntax-async-generators': 7.8.4(@babel/core@7.27.1)
      '@babel/plugin-syntax-bigint': 7.8.3(@babel/core@7.27.1)
      '@babel/plugin-syntax-class-properties': 7.12.13(@babel/core@7.27.1)
      '@babel/plugin-syntax-class-static-block': 7.14.5(@babel/core@7.27.1)
      '@babel/plugin-syntax-import-attributes': 7.27.1(@babel/core@7.27.1)
      '@babel/plugin-syntax-import-meta': 7.10.4(@babel/core@7.27.1)
      '@babel/plugin-syntax-json-strings': 7.8.3(@babel/core@7.27.1)
      '@babel/plugin-syntax-logical-assignment-operators': 7.10.4(@babel/core@7.27.1)
      '@babel/plugin-syntax-nullish-coalescing-operator': 7.8.3(@babel/core@7.27.1)
      '@babel/plugin-syntax-numeric-separator': 7.10.4(@babel/core@7.27.1)
      '@babel/plugin-syntax-object-rest-spread': 7.8.3(@babel/core@7.27.1)
      '@babel/plugin-syntax-optional-catch-binding': 7.8.3(@babel/core@7.27.1)
      '@babel/plugin-syntax-optional-chaining': 7.8.3(@babel/core@7.27.1)
      '@babel/plugin-syntax-private-property-in-object': 7.14.5(@babel/core@7.27.1)
      '@babel/plugin-syntax-top-level-await': 7.14.5(@babel/core@7.27.1)

  babel-preset-jest@29.6.3(@babel/core@7.27.1):
    dependencies:
      '@babel/core': 7.27.1
      babel-plugin-jest-hoist: 29.6.3
      babel-preset-current-node-syntax: 1.1.0(@babel/core@7.27.1)

  bail@2.0.2: {}

  balanced-match@1.0.2: {}

  base64-js@1.5.1: {}

  binary-extensions@2.3.0: {}

  brace-expansion@1.1.11:
    dependencies:
      balanced-match: 1.0.2
      concat-map: 0.0.1

  brace-expansion@2.0.1:
    dependencies:
      balanced-match: 1.0.2

  braces@3.0.3:
    dependencies:
      fill-range: 7.1.1

  browserslist@4.24.5:
    dependencies:
      caniuse-lite: 1.0.30001718
      electron-to-chromium: 1.5.157
      node-releases: 2.0.19
      update-browserslist-db: 1.1.3(browserslist@4.24.5)

  bser@2.1.1:
    dependencies:
      node-int64: 0.4.0

  buffer-from@1.1.2: {}

  buffer@6.0.3:
    dependencies:
      base64-js: 1.5.1
      ieee754: 1.2.1

  busboy@1.6.0:
    dependencies:
      streamsearch: 1.1.0

  caller-callsite@2.0.0:
    dependencies:
      callsites: 2.0.0

  caller-path@2.0.0:
    dependencies:
      caller-callsite: 2.0.0

  callsites@2.0.0: {}

  callsites@3.1.0: {}

  camelcase-css@2.0.1: {}

  camelcase@5.3.1: {}

  camelcase@6.3.0: {}

  caniuse-lite@1.0.30001718: {}

  ccount@2.0.1: {}

  chalk@4.1.2:
    dependencies:
      ansi-styles: 4.3.0
      supports-color: 7.2.0

  character-entities-html4@2.1.0: {}

  character-entities-legacy@1.1.4: {}

  character-entities-legacy@3.0.0: {}

  character-entities@1.2.4: {}

  character-entities@2.0.2: {}

  character-reference-invalid@1.1.4: {}

  character-reference-invalid@2.0.1: {}

  chokidar@3.6.0:
    dependencies:
      anymatch: 3.1.3
      braces: 3.0.3
      glob-parent: 5.1.2
      is-binary-path: 2.1.0
      is-glob: 4.0.3
      normalize-path: 3.0.0
      readdirp: 3.6.0
    optionalDependencies:
      fsevents: 2.3.3

  chroma-js@3.1.2: {}

  chrome-launcher@0.15.2:
    dependencies:
      '@types/node': 22.15.21
      escape-string-regexp: 4.0.0
      is-wsl: 2.2.0
      lighthouse-logger: 1.4.2
    transitivePeerDependencies:
      - supports-color

  chromium-edge-launcher@0.2.0:
    dependencies:
      '@types/node': 22.15.21
      escape-string-regexp: 4.0.0
      is-wsl: 2.2.0
      lighthouse-logger: 1.4.2
      mkdirp: 1.0.4
      rimraf: 3.0.2
    transitivePeerDependencies:
      - supports-color

  ci-info@2.0.0: {}

  ci-info@3.9.0: {}

  class-variance-authority@0.7.1:
    dependencies:
      clsx: 2.1.1

  client-only@0.0.1: {}

  cliui@8.0.1:
    dependencies:
      string-width: 4.2.3
      strip-ansi: 6.0.1
      wrap-ansi: 7.0.0

  clsx@2.1.1: {}

  cmdk@1.1.1(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      '@radix-ui/react-compose-refs': 1.1.2(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-dialog': 1.1.14(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@radix-ui/react-id': 1.1.1(@types/react@18.3.22)(react@18.3.1)
      '@radix-ui/react-primitive': 2.1.3(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    transitivePeerDependencies:
      - '@types/react'
      - '@types/react-dom'

  color-convert@2.0.1:
    dependencies:
      color-name: 1.1.4

  color-name@1.1.4: {}

  color-string@1.9.1:
    dependencies:
      color-name: 1.1.4
      simple-swizzle: 0.2.2
    optional: true

  color@4.2.3:
    dependencies:
      color-convert: 2.0.1
      color-string: 1.9.1
    optional: true

  colord@2.9.3: {}

  comma-separated-tokens@1.0.8: {}

  comma-separated-tokens@2.0.3: {}

  commander@12.1.0: {}

  commander@2.20.3: {}

  commander@4.1.1: {}

  commander@8.3.0: {}

  concat-map@0.0.1: {}

  connect@3.7.0:
    dependencies:
      debug: 2.6.9
      finalhandler: 1.1.2
      parseurl: 1.3.3
      utils-merge: 1.0.1
    transitivePeerDependencies:
      - supports-color

  convert-source-map@1.9.0: {}

  convert-source-map@2.0.0: {}

  cosmiconfig@5.2.1:
    dependencies:
      import-fresh: 2.0.0
      is-directory: 0.3.1
      js-yaml: 3.14.1
      parse-json: 4.0.0

  cosmiconfig@7.1.0:
    dependencies:
      '@types/parse-json': 4.0.2
      import-fresh: 3.3.1
      parse-json: 5.2.0
      path-type: 4.0.0
      yaml: 1.10.2

  cross-spawn@7.0.6:
    dependencies:
      path-key: 3.1.1
      shebang-command: 2.0.0
      which: 2.0.2

  cssesc@3.0.0: {}

  csstype@3.1.3: {}

  d3-array@3.2.4:
    dependencies:
      internmap: 2.0.3

  d3-color@3.1.0: {}

  d3-ease@3.0.1: {}

  d3-format@3.1.0: {}

  d3-interpolate@3.0.1:
    dependencies:
      d3-color: 3.1.0

  d3-path@3.1.0: {}

  d3-scale@4.0.2:
    dependencies:
      d3-array: 3.2.4
      d3-format: 3.1.0
      d3-interpolate: 3.0.1
      d3-time: 3.1.0
      d3-time-format: 4.1.0

  d3-shape@3.2.0:
    dependencies:
      d3-path: 3.1.0

  d3-time-format@4.1.0:
    dependencies:
      d3-time: 3.1.0

  d3-time@3.1.0:
    dependencies:
      d3-array: 3.2.4

  d3-timer@3.0.1: {}

  date-fns@3.6.0: {}

  debug@2.6.9:
    dependencies:
      ms: 2.0.0

  debug@4.4.1:
    dependencies:
      ms: 2.1.3

  decimal.js-light@2.5.1: {}

  decode-named-character-reference@1.1.0:
    dependencies:
      character-entities: 2.0.2

  deep-rename-keys@0.2.1:
    dependencies:
      kind-of: 3.2.2
      rename-keys: 1.2.0

  depd@2.0.0: {}

  dequal@2.0.3: {}

  destroy@1.2.0: {}

  detect-libc@2.0.4:
    optional: true

  detect-node-es@1.1.0: {}

  devlop@1.1.0:
    dependencies:
      dequal: 2.0.3

  didyoumean@1.2.2: {}

  dlv@1.1.3: {}

  dom-helpers@5.2.1:
    dependencies:
      '@babel/runtime': 7.27.1
      csstype: 3.1.3

  eastasianwidth@0.2.0: {}

  ee-first@1.1.1: {}

  electron-to-chromium@1.5.157: {}

  embla-carousel-react@8.6.0(react@18.3.1):
    dependencies:
      embla-carousel: 8.6.0
      embla-carousel-reactive-utils: 8.6.0(embla-carousel@8.6.0)
      react: 18.3.1

  embla-carousel-reactive-utils@8.6.0(embla-carousel@8.6.0):
    dependencies:
      embla-carousel: 8.6.0

  embla-carousel@8.6.0: {}

  emoji-regex-xs@1.0.0: {}

  emoji-regex@8.0.0: {}

  emoji-regex@9.2.2: {}

  encodeurl@1.0.2: {}

  encodeurl@2.0.0: {}

  entities@6.0.0: {}

  error-ex@1.3.2:
    dependencies:
      is-arrayish: 0.2.1

  error-stack-parser@2.1.4:
    dependencies:
      stackframe: 1.3.4

  escalade@3.2.0: {}

  escape-html@1.0.3: {}

  escape-string-regexp@2.0.0: {}

  escape-string-regexp@4.0.0: {}

  escape-string-regexp@5.0.0: {}

  esprima@4.0.1: {}

  estree-util-is-identifier-name@3.0.0: {}

  etag@1.8.1: {}

  event-target-shim@5.0.1: {}

  eventemitter3@2.0.3: {}

  eventemitter3@4.0.7: {}

  events@3.3.0: {}

  exponential-backoff@3.1.2: {}

  extend@3.0.2: {}

  fast-deep-equal@3.1.3: {}

  fast-equals@5.2.2: {}

  fast-glob@3.3.3:
    dependencies:
      '@nodelib/fs.stat': 2.0.5
      '@nodelib/fs.walk': 1.2.8
      glob-parent: 5.1.2
      merge2: 1.4.1
      micromatch: 4.0.8

  fast-json-stable-stringify@2.1.0: {}

  fast-plist@0.1.3: {}

  fastq@1.19.1:
    dependencies:
      reusify: 1.1.0

  fault@1.0.4:
    dependencies:
      format: 0.2.2

  fb-watchman@2.0.2:
    dependencies:
      bser: 2.1.1

  file-icons-js@1.1.0: {}

  fill-range@7.1.1:
    dependencies:
      to-regex-range: 5.0.1

  finalhandler@1.1.2:
    dependencies:
      debug: 2.6.9
      encodeurl: 1.0.2
      escape-html: 1.0.3
      on-finished: 2.3.0
      parseurl: 1.3.3
      statuses: 1.5.0
      unpipe: 1.0.0
    transitivePeerDependencies:
      - supports-color

  find-root@1.1.0: {}

  find-up@4.1.0:
    dependencies:
      locate-path: 5.0.0
      path-exists: 4.0.0

  flow-enums-runtime@0.0.6: {}

  foreground-child@3.3.1:
    dependencies:
      cross-spawn: 7.0.6
      signal-exit: 4.1.0

  format@0.2.2: {}

  fraction.js@4.3.7: {}

  framer-motion@11.18.2(@emotion/is-prop-valid@1.3.1)(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      motion-dom: 11.18.1
      motion-utils: 11.18.1
      tslib: 2.8.1
    optionalDependencies:
      '@emotion/is-prop-valid': 1.3.1
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)

  fresh@0.5.2: {}

  fs.realpath@1.0.0: {}

  fsevents@2.3.3:
    optional: true

  function-bind@1.1.2: {}

  gensync@1.0.0-beta.2: {}

  get-caller-file@2.0.5: {}

  get-nonce@1.0.1: {}

  get-package-type@0.1.0: {}

  glob-parent@5.1.2:
    dependencies:
      is-glob: 4.0.3

  glob-parent@6.0.2:
    dependencies:
      is-glob: 4.0.3

  glob@10.4.5:
    dependencies:
      foreground-child: 3.3.1
      jackspeak: 3.4.3
      minimatch: 9.0.5
      minipass: 7.1.2
      package-json-from-dist: 1.0.1
      path-scurry: 1.11.1

  glob@7.2.3:
    dependencies:
      fs.realpath: 1.0.0
      inflight: 1.0.6
      inherits: 2.0.4
      minimatch: 3.1.2
      once: 1.4.0
      path-is-absolute: 1.0.1

  globals@11.12.0: {}

  graceful-fs@4.2.11: {}

  has-flag@4.0.0: {}

  hasown@2.0.2:
    dependencies:
      function-bind: 1.1.2

  hast-util-from-dom@5.0.1:
    dependencies:
      '@types/hast': 3.0.4
      hastscript: 9.0.1
      web-namespaces: 2.0.1

  hast-util-from-html-isomorphic@2.0.0:
    dependencies:
      '@types/hast': 3.0.4
      hast-util-from-dom: 5.0.1
      hast-util-from-html: 2.0.3
      unist-util-remove-position: 5.0.0

  hast-util-from-html@2.0.3:
    dependencies:
      '@types/hast': 3.0.4
      devlop: 1.1.0
      hast-util-from-parse5: 8.0.3
      parse5: 7.3.0
      vfile: 6.0.3
      vfile-message: 4.0.2

  hast-util-from-parse5@8.0.3:
    dependencies:
      '@types/hast': 3.0.4
      '@types/unist': 3.0.3
      devlop: 1.1.0
      hastscript: 9.0.1
      property-information: 7.1.0
      vfile: 6.0.3
      vfile-location: 5.0.3
      web-namespaces: 2.0.1

  hast-util-is-element@3.0.0:
    dependencies:
      '@types/hast': 3.0.4

  hast-util-parse-selector@2.2.5: {}

  hast-util-parse-selector@4.0.0:
    dependencies:
      '@types/hast': 3.0.4

  hast-util-raw@9.1.0:
    dependencies:
      '@types/hast': 3.0.4
      '@types/unist': 3.0.3
      '@ungap/structured-clone': 1.3.0
      hast-util-from-parse5: 8.0.3
      hast-util-to-parse5: 8.0.0
      html-void-elements: 3.0.0
      mdast-util-to-hast: 13.2.0
      parse5: 7.3.0
      unist-util-position: 5.0.0
      unist-util-visit: 5.0.0
      vfile: 6.0.3
      web-namespaces: 2.0.1
      zwitch: 2.0.4

  hast-util-to-html@9.0.5:
    dependencies:
      '@types/hast': 3.0.4
      '@types/unist': 3.0.3
      ccount: 2.0.1
      comma-separated-tokens: 2.0.3
      hast-util-whitespace: 3.0.0
      html-void-elements: 3.0.0
      mdast-util-to-hast: 13.2.0
      property-information: 7.1.0
      space-separated-tokens: 2.0.2
      stringify-entities: 4.0.4
      zwitch: 2.0.4

  hast-util-to-jsx-runtime@2.3.6:
    dependencies:
      '@types/estree': 1.0.7
      '@types/hast': 3.0.4
      '@types/unist': 3.0.3
      comma-separated-tokens: 2.0.3
      devlop: 1.1.0
      estree-util-is-identifier-name: 3.0.0
      hast-util-whitespace: 3.0.0
      mdast-util-mdx-expression: 2.0.1
      mdast-util-mdx-jsx: 3.2.0
      mdast-util-mdxjs-esm: 2.0.1
      property-information: 7.1.0
      space-separated-tokens: 2.0.2
      style-to-js: 1.1.16
      unist-util-position: 5.0.0
      vfile-message: 4.0.2
    transitivePeerDependencies:
      - supports-color

  hast-util-to-parse5@8.0.0:
    dependencies:
      '@types/hast': 3.0.4
      comma-separated-tokens: 2.0.3
      devlop: 1.1.0
      property-information: 6.5.0
      space-separated-tokens: 2.0.2
      web-namespaces: 2.0.1
      zwitch: 2.0.4

  hast-util-to-text@4.0.2:
    dependencies:
      '@types/hast': 3.0.4
      '@types/unist': 3.0.3
      hast-util-is-element: 3.0.0
      unist-util-find-after: 5.0.0

  hast-util-whitespace@3.0.0:
    dependencies:
      '@types/hast': 3.0.4

  hastscript@6.0.0:
    dependencies:
      '@types/hast': 2.3.10
      comma-separated-tokens: 1.0.8
      hast-util-parse-selector: 2.2.5
      property-information: 5.6.0
      space-separated-tokens: 1.1.5

  hastscript@9.0.1:
    dependencies:
      '@types/hast': 3.0.4
      comma-separated-tokens: 2.0.3
      hast-util-parse-selector: 4.0.0
      property-information: 7.1.0
      space-separated-tokens: 2.0.2

  hermes-estree@0.25.1: {}

  hermes-estree@0.28.1: {}

  hermes-parser@0.25.1:
    dependencies:
      hermes-estree: 0.25.1

  hermes-parser@0.28.1:
    dependencies:
      hermes-estree: 0.28.1

  highlight.js@10.7.3: {}

  highlightjs-vue@1.0.0: {}

  hoist-non-react-statics@3.3.2:
    dependencies:
      react-is: 16.13.1

  html-url-attributes@3.0.1: {}

  html-void-elements@3.0.0: {}

  http-errors@2.0.0:
    dependencies:
      depd: 2.0.0
      inherits: 2.0.4
      setprototypeof: 1.2.0
      statuses: 2.0.1
      toidentifier: 1.0.1

  https-proxy-agent@7.0.6:
    dependencies:
      agent-base: 7.1.3
      debug: 4.4.1
    transitivePeerDependencies:
      - supports-color

  ieee754@1.2.1: {}

  image-size@1.2.1:
    dependencies:
      queue: 6.0.2

  import-fresh@2.0.0:
    dependencies:
      caller-path: 2.0.0
      resolve-from: 3.0.0

  import-fresh@3.3.1:
    dependencies:
      parent-module: 1.0.1
      resolve-from: 4.0.0

  imurmurhash@0.1.4: {}

  inflight@1.0.6:
    dependencies:
      once: 1.4.0
      wrappy: 1.0.2

  inherits@2.0.4: {}

  inline-style-parser@0.2.4: {}

  input-otp@1.4.2(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)

  internmap@2.0.3: {}

  invariant@2.2.4:
    dependencies:
      loose-envify: 1.4.0

  is-alphabetical@1.0.4: {}

  is-alphabetical@2.0.1: {}

  is-alphanumerical@1.0.4:
    dependencies:
      is-alphabetical: 1.0.4
      is-decimal: 1.0.4

  is-alphanumerical@2.0.1:
    dependencies:
      is-alphabetical: 2.0.1
      is-decimal: 2.0.1

  is-arrayish@0.2.1: {}

  is-arrayish@0.3.2:
    optional: true

  is-binary-path@2.1.0:
    dependencies:
      binary-extensions: 2.3.0

  is-buffer@1.1.6: {}

  is-core-module@2.16.1:
    dependencies:
      hasown: 2.0.2

  is-decimal@1.0.4: {}

  is-decimal@2.0.1: {}

  is-directory@0.3.1: {}

  is-docker@2.2.1: {}

  is-extglob@2.1.1: {}

  is-fullwidth-code-point@3.0.0: {}

  is-glob@4.0.3:
    dependencies:
      is-extglob: 2.1.1

  is-hexadecimal@1.0.4: {}

  is-hexadecimal@2.0.1: {}

  is-number@7.0.0: {}

  is-plain-obj@4.1.0: {}

  is-wsl@2.2.0:
    dependencies:
      is-docker: 2.2.1

  isexe@2.0.0: {}

  istanbul-lib-coverage@3.2.2: {}

  istanbul-lib-instrument@5.2.1:
    dependencies:
      '@babel/core': 7.27.1
      '@babel/parser': 7.27.2
      '@istanbuljs/schema': 0.1.3
      istanbul-lib-coverage: 3.2.2
      semver: 6.3.1
    transitivePeerDependencies:
      - supports-color

  its-fine@1.2.5(@types/react@18.3.22)(react@18.3.1):
    dependencies:
      '@types/react-reconciler': 0.28.9(@types/react@18.3.22)
      react: 18.3.1
    transitivePeerDependencies:
      - '@types/react'

  its-fine@2.0.0(@types/react@18.3.22)(react@18.3.1):
    dependencies:
      '@types/react-reconciler': 0.28.9(@types/react@18.3.22)
      react: 18.3.1
    transitivePeerDependencies:
      - '@types/react'

  jackspeak@3.4.3:
    dependencies:
      '@isaacs/cliui': 8.0.2
    optionalDependencies:
      '@pkgjs/parseargs': 0.11.0

  jest-environment-node@29.7.0:
    dependencies:
      '@jest/environment': 29.7.0
      '@jest/fake-timers': 29.7.0
      '@jest/types': 29.6.3
      '@types/node': 22.15.21
      jest-mock: 29.7.0
      jest-util: 29.7.0

  jest-get-type@29.6.3: {}

  jest-haste-map@29.7.0:
    dependencies:
      '@jest/types': 29.6.3
      '@types/graceful-fs': 4.1.9
      '@types/node': 22.15.21
      anymatch: 3.1.3
      fb-watchman: 2.0.2
      graceful-fs: 4.2.11
      jest-regex-util: 29.6.3
      jest-util: 29.7.0
      jest-worker: 29.7.0
      micromatch: 4.0.8
      walker: 1.0.8
    optionalDependencies:
      fsevents: 2.3.3

  jest-message-util@29.7.0:
    dependencies:
      '@babel/code-frame': 7.27.1
      '@jest/types': 29.6.3
      '@types/stack-utils': 2.0.3
      chalk: 4.1.2
      graceful-fs: 4.2.11
      micromatch: 4.0.8
      pretty-format: 29.7.0
      slash: 3.0.0
      stack-utils: 2.0.6

  jest-mock@29.7.0:
    dependencies:
      '@jest/types': 29.6.3
      '@types/node': 22.15.21
      jest-util: 29.7.0

  jest-regex-util@29.6.3: {}

  jest-util@29.7.0:
    dependencies:
      '@jest/types': 29.6.3
      '@types/node': 22.15.21
      chalk: 4.1.2
      ci-info: 3.9.0
      graceful-fs: 4.2.11
      picomatch: 2.3.1

  jest-validate@29.7.0:
    dependencies:
      '@jest/types': 29.6.3
      camelcase: 6.3.0
      chalk: 4.1.2
      jest-get-type: 29.6.3
      leven: 3.1.0
      pretty-format: 29.7.0

  jest-worker@29.7.0:
    dependencies:
      '@types/node': 22.15.21
      jest-util: 29.7.0
      merge-stream: 2.0.0
      supports-color: 8.1.1

  jiti@1.21.7: {}

  jotai@2.12.4(@types/react@18.3.22)(react@18.3.1):
    optionalDependencies:
      '@types/react': 18.3.22
      react: 18.3.1

  js-tokens@4.0.0: {}

  js-yaml@3.14.1:
    dependencies:
      argparse: 1.0.10
      esprima: 4.0.1

  jsc-safe-url@0.2.4: {}

  jsesc@3.1.0: {}

  json-parse-better-errors@1.0.2: {}

  json-parse-even-better-errors@2.3.1: {}

  json5@2.2.3: {}

  katex@0.16.22:
    dependencies:
      commander: 8.3.0

  kind-of@3.2.2:
    dependencies:
      is-buffer: 1.1.6

  konva@9.3.20: {}

  leven@3.1.0: {}

  lighthouse-logger@1.4.2:
    dependencies:
      debug: 2.6.9
      marky: 1.3.0
    transitivePeerDependencies:
      - supports-color

  lilconfig@3.1.3: {}

  lines-and-columns@1.2.4: {}

  locate-path@5.0.0:
    dependencies:
      p-locate: 4.1.0

  lodash.castarray@4.4.0: {}

  lodash.isplainobject@4.0.6: {}

  lodash.merge@4.6.2: {}

  lodash.throttle@4.1.1: {}

  lodash@4.17.21: {}

  longest-streak@3.1.0: {}

  loose-envify@1.4.0:
    dependencies:
      js-tokens: 4.0.0

  lowlight@1.20.0:
    dependencies:
      fault: 1.0.4
      highlight.js: 10.7.3

  lru-cache@10.4.3: {}

  lru-cache@5.1.1:
    dependencies:
      yallist: 3.1.1

  lucide-react@0.454.0(react@18.3.1):
    dependencies:
      react: 18.3.1

  makeerror@1.0.12:
    dependencies:
      tmpl: 1.0.5

  markdown-table@3.0.4: {}

  marky@1.3.0: {}

  material-icon-theme@5.23.0:
    dependencies:
      chroma-js: 3.1.2
      events: 3.3.0
      fast-deep-equal: 3.1.3
      svgson: 5.3.1

  mdast-util-find-and-replace@3.0.2:
    dependencies:
      '@types/mdast': 4.0.4
      escape-string-regexp: 5.0.0
      unist-util-is: 6.0.0
      unist-util-visit-parents: 6.0.1

  mdast-util-from-markdown@2.0.2:
    dependencies:
      '@types/mdast': 4.0.4
      '@types/unist': 3.0.3
      decode-named-character-reference: 1.1.0
      devlop: 1.1.0
      mdast-util-to-string: 4.0.0
      micromark: 4.0.2
      micromark-util-decode-numeric-character-reference: 2.0.2
      micromark-util-decode-string: 2.0.1
      micromark-util-normalize-identifier: 2.0.1
      micromark-util-symbol: 2.0.1
      micromark-util-types: 2.0.2
      unist-util-stringify-position: 4.0.0
    transitivePeerDependencies:
      - supports-color

  mdast-util-gfm-autolink-literal@2.0.1:
    dependencies:
      '@types/mdast': 4.0.4
      ccount: 2.0.1
      devlop: 1.1.0
      mdast-util-find-and-replace: 3.0.2
      micromark-util-character: 2.1.1

  mdast-util-gfm-footnote@2.1.0:
    dependencies:
      '@types/mdast': 4.0.4
      devlop: 1.1.0
      mdast-util-from-markdown: 2.0.2
      mdast-util-to-markdown: 2.1.2
      micromark-util-normalize-identifier: 2.0.1
    transitivePeerDependencies:
      - supports-color

  mdast-util-gfm-strikethrough@2.0.0:
    dependencies:
      '@types/mdast': 4.0.4
      mdast-util-from-markdown: 2.0.2
      mdast-util-to-markdown: 2.1.2
    transitivePeerDependencies:
      - supports-color

  mdast-util-gfm-table@2.0.0:
    dependencies:
      '@types/mdast': 4.0.4
      devlop: 1.1.0
      markdown-table: 3.0.4
      mdast-util-from-markdown: 2.0.2
      mdast-util-to-markdown: 2.1.2
    transitivePeerDependencies:
      - supports-color

  mdast-util-gfm-task-list-item@2.0.0:
    dependencies:
      '@types/mdast': 4.0.4
      devlop: 1.1.0
      mdast-util-from-markdown: 2.0.2
      mdast-util-to-markdown: 2.1.2
    transitivePeerDependencies:
      - supports-color

  mdast-util-gfm@3.1.0:
    dependencies:
      mdast-util-from-markdown: 2.0.2
      mdast-util-gfm-autolink-literal: 2.0.1
      mdast-util-gfm-footnote: 2.1.0
      mdast-util-gfm-strikethrough: 2.0.0
      mdast-util-gfm-table: 2.0.0
      mdast-util-gfm-task-list-item: 2.0.0
      mdast-util-to-markdown: 2.1.2
    transitivePeerDependencies:
      - supports-color

  mdast-util-math@3.0.0:
    dependencies:
      '@types/hast': 3.0.4
      '@types/mdast': 4.0.4
      devlop: 1.1.0
      longest-streak: 3.1.0
      mdast-util-from-markdown: 2.0.2
      mdast-util-to-markdown: 2.1.2
      unist-util-remove-position: 5.0.0
    transitivePeerDependencies:
      - supports-color

  mdast-util-mdx-expression@2.0.1:
    dependencies:
      '@types/estree-jsx': 1.0.5
      '@types/hast': 3.0.4
      '@types/mdast': 4.0.4
      devlop: 1.1.0
      mdast-util-from-markdown: 2.0.2
      mdast-util-to-markdown: 2.1.2
    transitivePeerDependencies:
      - supports-color

  mdast-util-mdx-jsx@3.2.0:
    dependencies:
      '@types/estree-jsx': 1.0.5
      '@types/hast': 3.0.4
      '@types/mdast': 4.0.4
      '@types/unist': 3.0.3
      ccount: 2.0.1
      devlop: 1.1.0
      mdast-util-from-markdown: 2.0.2
      mdast-util-to-markdown: 2.1.2
      parse-entities: 4.0.2
      stringify-entities: 4.0.4
      unist-util-stringify-position: 4.0.0
      vfile-message: 4.0.2
    transitivePeerDependencies:
      - supports-color

  mdast-util-mdxjs-esm@2.0.1:
    dependencies:
      '@types/estree-jsx': 1.0.5
      '@types/hast': 3.0.4
      '@types/mdast': 4.0.4
      devlop: 1.1.0
      mdast-util-from-markdown: 2.0.2
      mdast-util-to-markdown: 2.1.2
    transitivePeerDependencies:
      - supports-color

  mdast-util-phrasing@4.1.0:
    dependencies:
      '@types/mdast': 4.0.4
      unist-util-is: 6.0.0

  mdast-util-to-hast@13.2.0:
    dependencies:
      '@types/hast': 3.0.4
      '@types/mdast': 4.0.4
      '@ungap/structured-clone': 1.3.0
      devlop: 1.1.0
      micromark-util-sanitize-uri: 2.0.1
      trim-lines: 3.0.1
      unist-util-position: 5.0.0
      unist-util-visit: 5.0.0
      vfile: 6.0.3

  mdast-util-to-markdown@2.1.2:
    dependencies:
      '@types/mdast': 4.0.4
      '@types/unist': 3.0.3
      longest-streak: 3.1.0
      mdast-util-phrasing: 4.1.0
      mdast-util-to-string: 4.0.0
      micromark-util-classify-character: 2.0.1
      micromark-util-decode-string: 2.0.1
      unist-util-visit: 5.0.0
      zwitch: 2.0.4

  mdast-util-to-string@4.0.0:
    dependencies:
      '@types/mdast': 4.0.4

  mdi-material-ui@7.9.4(@mui/material@7.1.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@emotion/styled@11.14.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1):
    dependencies:
      '@mui/material': 7.1.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@emotion/styled@11.14.0(@emotion/react@11.14.0(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react@18.3.1))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      react: 18.3.1

  memoize-one@5.2.1: {}

  merge-stream@2.0.0: {}

  merge2@1.4.1: {}

  metro-babel-transformer@0.82.4:
    dependencies:
      '@babel/core': 7.27.1
      flow-enums-runtime: 0.0.6
      hermes-parser: 0.28.1
      nullthrows: 1.1.1
    transitivePeerDependencies:
      - supports-color

  metro-cache-key@0.82.4:
    dependencies:
      flow-enums-runtime: 0.0.6

  metro-cache@0.82.4:
    dependencies:
      exponential-backoff: 3.1.2
      flow-enums-runtime: 0.0.6
      https-proxy-agent: 7.0.6
      metro-core: 0.82.4
    transitivePeerDependencies:
      - supports-color

  metro-config@0.82.4:
    dependencies:
      connect: 3.7.0
      cosmiconfig: 5.2.1
      flow-enums-runtime: 0.0.6
      jest-validate: 29.7.0
      metro: 0.82.4
      metro-cache: 0.82.4
      metro-core: 0.82.4
      metro-runtime: 0.82.4
    transitivePeerDependencies:
      - bufferutil
      - supports-color
      - utf-8-validate

  metro-core@0.82.4:
    dependencies:
      flow-enums-runtime: 0.0.6
      lodash.throttle: 4.1.1
      metro-resolver: 0.82.4

  metro-file-map@0.82.4:
    dependencies:
      debug: 4.4.1
      fb-watchman: 2.0.2
      flow-enums-runtime: 0.0.6
      graceful-fs: 4.2.11
      invariant: 2.2.4
      jest-worker: 29.7.0
      micromatch: 4.0.8
      nullthrows: 1.1.1
      walker: 1.0.8
    transitivePeerDependencies:
      - supports-color

  metro-minify-terser@0.82.4:
    dependencies:
      flow-enums-runtime: 0.0.6
      terser: 5.39.2

  metro-resolver@0.82.4:
    dependencies:
      flow-enums-runtime: 0.0.6

  metro-runtime@0.82.4:
    dependencies:
      '@babel/runtime': 7.27.1
      flow-enums-runtime: 0.0.6

  metro-source-map@0.82.4:
    dependencies:
      '@babel/traverse': 7.27.1
      '@babel/traverse--for-generate-function-map': '@babel/traverse@7.27.1'
      '@babel/types': 7.27.1
      flow-enums-runtime: 0.0.6
      invariant: 2.2.4
      metro-symbolicate: 0.82.4
      nullthrows: 1.1.1
      ob1: 0.82.4
      source-map: 0.5.7
      vlq: 1.0.1
    transitivePeerDependencies:
      - supports-color

  metro-symbolicate@0.82.4:
    dependencies:
      flow-enums-runtime: 0.0.6
      invariant: 2.2.4
      metro-source-map: 0.82.4
      nullthrows: 1.1.1
      source-map: 0.5.7
      vlq: 1.0.1
    transitivePeerDependencies:
      - supports-color

  metro-transform-plugins@0.82.4:
    dependencies:
      '@babel/core': 7.27.1
      '@babel/generator': 7.27.1
      '@babel/template': 7.27.2
      '@babel/traverse': 7.27.1
      flow-enums-runtime: 0.0.6
      nullthrows: 1.1.1
    transitivePeerDependencies:
      - supports-color

  metro-transform-worker@0.82.4:
    dependencies:
      '@babel/core': 7.27.1
      '@babel/generator': 7.27.1
      '@babel/parser': 7.27.2
      '@babel/types': 7.27.1
      flow-enums-runtime: 0.0.6
      metro: 0.82.4
      metro-babel-transformer: 0.82.4
      metro-cache: 0.82.4
      metro-cache-key: 0.82.4
      metro-minify-terser: 0.82.4
      metro-source-map: 0.82.4
      metro-transform-plugins: 0.82.4
      nullthrows: 1.1.1
    transitivePeerDependencies:
      - bufferutil
      - supports-color
      - utf-8-validate

  metro@0.82.4:
    dependencies:
      '@babel/code-frame': 7.27.1
      '@babel/core': 7.27.1
      '@babel/generator': 7.27.1
      '@babel/parser': 7.27.2
      '@babel/template': 7.27.2
      '@babel/traverse': 7.27.1
      '@babel/types': 7.27.1
      accepts: 1.3.8
      chalk: 4.1.2
      ci-info: 2.0.0
      connect: 3.7.0
      debug: 4.4.1
      error-stack-parser: 2.1.4
      flow-enums-runtime: 0.0.6
      graceful-fs: 4.2.11
      hermes-parser: 0.28.1
      image-size: 1.2.1
      invariant: 2.2.4
      jest-worker: 29.7.0
      jsc-safe-url: 0.2.4
      lodash.throttle: 4.1.1
      metro-babel-transformer: 0.82.4
      metro-cache: 0.82.4
      metro-cache-key: 0.82.4
      metro-config: 0.82.4
      metro-core: 0.82.4
      metro-file-map: 0.82.4
      metro-resolver: 0.82.4
      metro-runtime: 0.82.4
      metro-source-map: 0.82.4
      metro-symbolicate: 0.82.4
      metro-transform-plugins: 0.82.4
      metro-transform-worker: 0.82.4
      mime-types: 2.1.35
      nullthrows: 1.1.1
      serialize-error: 2.1.0
      source-map: 0.5.7
      throat: 5.0.0
      ws: 7.5.10
      yargs: 17.7.2
    transitivePeerDependencies:
      - bufferutil
      - supports-color
      - utf-8-validate

  micromark-core-commonmark@2.0.3:
    dependencies:
      decode-named-character-reference: 1.1.0
      devlop: 1.1.0
      micromark-factory-destination: 2.0.1
      micromark-factory-label: 2.0.1
      micromark-factory-space: 2.0.1
      micromark-factory-title: 2.0.1
      micromark-factory-whitespace: 2.0.1
      micromark-util-character: 2.1.1
      micromark-util-chunked: 2.0.1
      micromark-util-classify-character: 2.0.1
      micromark-util-html-tag-name: 2.0.1
      micromark-util-normalize-identifier: 2.0.1
      micromark-util-resolve-all: 2.0.1
      micromark-util-subtokenize: 2.1.0
      micromark-util-symbol: 2.0.1
      micromark-util-types: 2.0.2

  micromark-extension-gfm-autolink-literal@2.1.0:
    dependencies:
      micromark-util-character: 2.1.1
      micromark-util-sanitize-uri: 2.0.1
      micromark-util-symbol: 2.0.1
      micromark-util-types: 2.0.2

  micromark-extension-gfm-footnote@2.1.0:
    dependencies:
      devlop: 1.1.0
      micromark-core-commonmark: 2.0.3
      micromark-factory-space: 2.0.1
      micromark-util-character: 2.1.1
      micromark-util-normalize-identifier: 2.0.1
      micromark-util-sanitize-uri: 2.0.1
      micromark-util-symbol: 2.0.1
      micromark-util-types: 2.0.2

  micromark-extension-gfm-strikethrough@2.1.0:
    dependencies:
      devlop: 1.1.0
      micromark-util-chunked: 2.0.1
      micromark-util-classify-character: 2.0.1
      micromark-util-resolve-all: 2.0.1
      micromark-util-symbol: 2.0.1
      micromark-util-types: 2.0.2

  micromark-extension-gfm-table@2.1.1:
    dependencies:
      devlop: 1.1.0
      micromark-factory-space: 2.0.1
      micromark-util-character: 2.1.1
      micromark-util-symbol: 2.0.1
      micromark-util-types: 2.0.2

  micromark-extension-gfm-tagfilter@2.0.0:
    dependencies:
      micromark-util-types: 2.0.2

  micromark-extension-gfm-task-list-item@2.1.0:
    dependencies:
      devlop: 1.1.0
      micromark-factory-space: 2.0.1
      micromark-util-character: 2.1.1
      micromark-util-symbol: 2.0.1
      micromark-util-types: 2.0.2

  micromark-extension-gfm@3.0.0:
    dependencies:
      micromark-extension-gfm-autolink-literal: 2.1.0
      micromark-extension-gfm-footnote: 2.1.0
      micromark-extension-gfm-strikethrough: 2.1.0
      micromark-extension-gfm-table: 2.1.1
      micromark-extension-gfm-tagfilter: 2.0.0
      micromark-extension-gfm-task-list-item: 2.1.0
      micromark-util-combine-extensions: 2.0.1
      micromark-util-types: 2.0.2

  micromark-extension-math@3.1.0:
    dependencies:
      '@types/katex': 0.16.7
      devlop: 1.1.0
      katex: 0.16.22
      micromark-factory-space: 2.0.1
      micromark-util-character: 2.1.1
      micromark-util-symbol: 2.0.1
      micromark-util-types: 2.0.2

  micromark-factory-destination@2.0.1:
    dependencies:
      micromark-util-character: 2.1.1
      micromark-util-symbol: 2.0.1
      micromark-util-types: 2.0.2

  micromark-factory-label@2.0.1:
    dependencies:
      devlop: 1.1.0
      micromark-util-character: 2.1.1
      micromark-util-symbol: 2.0.1
      micromark-util-types: 2.0.2

  micromark-factory-space@2.0.1:
    dependencies:
      micromark-util-character: 2.1.1
      micromark-util-types: 2.0.2

  micromark-factory-title@2.0.1:
    dependencies:
      micromark-factory-space: 2.0.1
      micromark-util-character: 2.1.1
      micromark-util-symbol: 2.0.1
      micromark-util-types: 2.0.2

  micromark-factory-whitespace@2.0.1:
    dependencies:
      micromark-factory-space: 2.0.1
      micromark-util-character: 2.1.1
      micromark-util-symbol: 2.0.1
      micromark-util-types: 2.0.2

  micromark-util-character@2.1.1:
    dependencies:
      micromark-util-symbol: 2.0.1
      micromark-util-types: 2.0.2

  micromark-util-chunked@2.0.1:
    dependencies:
      micromark-util-symbol: 2.0.1

  micromark-util-classify-character@2.0.1:
    dependencies:
      micromark-util-character: 2.1.1
      micromark-util-symbol: 2.0.1
      micromark-util-types: 2.0.2

  micromark-util-combine-extensions@2.0.1:
    dependencies:
      micromark-util-chunked: 2.0.1
      micromark-util-types: 2.0.2

  micromark-util-decode-numeric-character-reference@2.0.2:
    dependencies:
      micromark-util-symbol: 2.0.1

  micromark-util-decode-string@2.0.1:
    dependencies:
      decode-named-character-reference: 1.1.0
      micromark-util-character: 2.1.1
      micromark-util-decode-numeric-character-reference: 2.0.2
      micromark-util-symbol: 2.0.1

  micromark-util-encode@2.0.1: {}

  micromark-util-html-tag-name@2.0.1: {}

  micromark-util-normalize-identifier@2.0.1:
    dependencies:
      micromark-util-symbol: 2.0.1

  micromark-util-resolve-all@2.0.1:
    dependencies:
      micromark-util-types: 2.0.2

  micromark-util-sanitize-uri@2.0.1:
    dependencies:
      micromark-util-character: 2.1.1
      micromark-util-encode: 2.0.1
      micromark-util-symbol: 2.0.1

  micromark-util-subtokenize@2.1.0:
    dependencies:
      devlop: 1.1.0
      micromark-util-chunked: 2.0.1
      micromark-util-symbol: 2.0.1
      micromark-util-types: 2.0.2

  micromark-util-symbol@2.0.1: {}

  micromark-util-types@2.0.2: {}

  micromark@4.0.2:
    dependencies:
      '@types/debug': 4.1.12
      debug: 4.4.1
      decode-named-character-reference: 1.1.0
      devlop: 1.1.0
      micromark-core-commonmark: 2.0.3
      micromark-factory-space: 2.0.1
      micromark-util-character: 2.1.1
      micromark-util-chunked: 2.0.1
      micromark-util-combine-extensions: 2.0.1
      micromark-util-decode-numeric-character-reference: 2.0.2
      micromark-util-encode: 2.0.1
      micromark-util-normalize-identifier: 2.0.1
      micromark-util-resolve-all: 2.0.1
      micromark-util-sanitize-uri: 2.0.1
      micromark-util-subtokenize: 2.1.0
      micromark-util-symbol: 2.0.1
      micromark-util-types: 2.0.2
    transitivePeerDependencies:
      - supports-color

  micromatch@4.0.8:
    dependencies:
      braces: 3.0.3
      picomatch: 2.3.1

  mime-db@1.52.0: {}

  mime-types@2.1.35:
    dependencies:
      mime-db: 1.52.0

  mime@1.6.0: {}

  minimatch@3.1.2:
    dependencies:
      brace-expansion: 1.1.11

  minimatch@9.0.5:
    dependencies:
      brace-expansion: 2.0.1

  minipass@7.1.2: {}

  mkdirp@1.0.4: {}

  monaco-editor@0.50.0: {}

  monaco-themes@0.4.5:
    dependencies:
      fast-plist: 0.1.3

  motion-dom@11.18.1:
    dependencies:
      motion-utils: 11.18.1

  motion-utils@11.18.1: {}

  ms@2.0.0: {}

  ms@2.1.3: {}

  mz@2.7.0:
    dependencies:
      any-promise: 1.3.0
      object-assign: 4.1.1
      thenify-all: 1.6.0

  nanoid@3.3.11: {}

  negotiator@0.6.3: {}

  next-themes@0.4.6(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)

  next@15.2.4(@babel/core@7.27.1)(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      '@next/env': 15.2.4
      '@swc/counter': 0.1.3
      '@swc/helpers': 0.5.15
      busboy: 1.6.0
      caniuse-lite: 1.0.30001718
      postcss: 8.4.31
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      styled-jsx: 5.1.6(@babel/core@7.27.1)(react@18.3.1)
    optionalDependencies:
      '@next/swc-darwin-arm64': 15.2.4
      '@next/swc-darwin-x64': 15.2.4
      '@next/swc-linux-arm64-gnu': 15.2.4
      '@next/swc-linux-arm64-musl': 15.2.4
      '@next/swc-linux-x64-gnu': 15.2.4
      '@next/swc-linux-x64-musl': 15.2.4
      '@next/swc-win32-arm64-msvc': 15.2.4
      '@next/swc-win32-x64-msvc': 15.2.4
      sharp: 0.33.5
    transitivePeerDependencies:
      - '@babel/core'
      - babel-plugin-macros

  node-int64@0.4.0: {}

  node-releases@2.0.19: {}

  normalize-path@3.0.0: {}

  normalize-range@0.1.2: {}

  nullthrows@1.1.1: {}

  ob1@0.82.4:
    dependencies:
      flow-enums-runtime: 0.0.6

  object-assign@4.1.1: {}

  object-hash@3.0.0: {}

  on-finished@2.3.0:
    dependencies:
      ee-first: 1.1.1

  on-finished@2.4.1:
    dependencies:
      ee-first: 1.1.1

  once@1.4.0:
    dependencies:
      wrappy: 1.0.2

  oniguruma-to-es@2.3.0:
    dependencies:
      emoji-regex-xs: 1.0.0
      regex: 5.1.1
      regex-recursion: 5.1.1

  open@7.4.2:
    dependencies:
      is-docker: 2.2.1
      is-wsl: 2.2.0

  p-limit@2.3.0:
    dependencies:
      p-try: 2.2.0

  p-locate@4.1.0:
    dependencies:
      p-limit: 2.3.0

  p-try@2.2.0: {}

  package-json-from-dist@1.0.1: {}

  parent-module@1.0.1:
    dependencies:
      callsites: 3.1.0

  parse-entities@2.0.0:
    dependencies:
      character-entities: 1.2.4
      character-entities-legacy: 1.1.4
      character-reference-invalid: 1.1.4
      is-alphanumerical: 1.0.4
      is-decimal: 1.0.4
      is-hexadecimal: 1.0.4

  parse-entities@4.0.2:
    dependencies:
      '@types/unist': 2.0.11
      character-entities-legacy: 3.0.0
      character-reference-invalid: 2.0.1
      decode-named-character-reference: 1.1.0
      is-alphanumerical: 2.0.1
      is-decimal: 2.0.1
      is-hexadecimal: 2.0.1

  parse-json@4.0.0:
    dependencies:
      error-ex: 1.3.2
      json-parse-better-errors: 1.0.2

  parse-json@5.2.0:
    dependencies:
      '@babel/code-frame': 7.27.1
      error-ex: 1.3.2
      json-parse-even-better-errors: 2.3.1
      lines-and-columns: 1.2.4

  parse5@7.3.0:
    dependencies:
      entities: 6.0.0

  parseurl@1.3.3: {}

  path-exists@4.0.0: {}

  path-is-absolute@1.0.1: {}

  path-key@3.1.1: {}

  path-parse@1.0.7: {}

  path-scurry@1.11.1:
    dependencies:
      lru-cache: 10.4.3
      minipass: 7.1.2

  path-type@4.0.0: {}

  picocolors@1.1.1: {}

  picomatch@2.3.1: {}

  pify@2.3.0: {}

  pirates@4.0.7: {}

  postcss-import@15.1.0(postcss@8.5.3):
    dependencies:
      postcss: 8.5.3
      postcss-value-parser: 4.2.0
      read-cache: 1.0.0
      resolve: 1.22.10

  postcss-js@4.0.1(postcss@8.5.3):
    dependencies:
      camelcase-css: 2.0.1
      postcss: 8.5.3

  postcss-load-config@4.0.2(postcss@8.5.3):
    dependencies:
      lilconfig: 3.1.3
      yaml: 2.8.0
    optionalDependencies:
      postcss: 8.5.3

  postcss-nested@6.2.0(postcss@8.5.3):
    dependencies:
      postcss: 8.5.3
      postcss-selector-parser: 6.1.2

  postcss-selector-parser@6.0.10:
    dependencies:
      cssesc: 3.0.0
      util-deprecate: 1.0.2

  postcss-selector-parser@6.1.2:
    dependencies:
      cssesc: 3.0.0
      util-deprecate: 1.0.2

  postcss-value-parser@4.2.0: {}

  postcss@8.4.31:
    dependencies:
      nanoid: 3.3.11
      picocolors: 1.1.1
      source-map-js: 1.2.1

  postcss@8.5.3:
    dependencies:
      nanoid: 3.3.11
      picocolors: 1.1.1
      source-map-js: 1.2.1

  pretty-format@29.7.0:
    dependencies:
      '@jest/schemas': 29.6.3
      ansi-styles: 5.2.0
      react-is: 18.3.1

  prismjs@1.27.0: {}

  prismjs@1.30.0: {}

  promise@8.3.0:
    dependencies:
      asap: 2.0.6

  prop-types@15.8.1:
    dependencies:
      loose-envify: 1.4.0
      object-assign: 4.1.1
      react-is: 16.13.1

  property-information@5.6.0:
    dependencies:
      xtend: 4.0.2

  property-information@6.5.0: {}

  property-information@7.1.0: {}

  queue-microtask@1.2.3: {}

  queue@6.0.2:
    dependencies:
      inherits: 2.0.4

  range-parser@1.2.1: {}

  react-day-picker@8.10.1(date-fns@3.6.0)(react@18.3.1):
    dependencies:
      date-fns: 3.6.0
      react: 18.3.1

  react-devtools-core@6.1.2:
    dependencies:
      shell-quote: 1.8.2
      ws: 7.5.10
    transitivePeerDependencies:
      - bufferutil
      - utf-8-validate

  react-dom@18.3.1(react@18.3.1):
    dependencies:
      loose-envify: 1.4.0
      react: 18.3.1
      scheduler: 0.23.2

  react-file-icon@1.6.0(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      colord: 2.9.3
      prop-types: 15.8.1
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)

  react-hook-form@7.56.4(react@18.3.1):
    dependencies:
      react: 18.3.1

  react-is@16.13.1: {}

  react-is@18.3.1: {}

  react-is@19.1.0: {}

  react-konva@18.2.10(@types/react@18.3.22)(konva@9.3.20)(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      '@types/react-reconciler': 0.28.9(@types/react@18.3.22)
      its-fine: 1.2.5(@types/react@18.3.22)(react@18.3.1)
      konva: 9.3.20
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      react-reconciler: 0.29.2(react@18.3.1)
      scheduler: 0.23.2
    transitivePeerDependencies:
      - '@types/react'

  react-markdown@10.1.0(@types/react@18.3.22)(react@18.3.1):
    dependencies:
      '@types/hast': 3.0.4
      '@types/mdast': 4.0.4
      '@types/react': 18.3.22
      devlop: 1.1.0
      hast-util-to-jsx-runtime: 2.3.6
      html-url-attributes: 3.0.1
      mdast-util-to-hast: 13.2.0
      react: 18.3.1
      remark-parse: 11.0.0
      remark-rehype: 11.1.2
      unified: 11.0.5
      unist-util-visit: 5.0.0
      vfile: 6.0.3
    transitivePeerDependencies:
      - supports-color

  react-native@0.79.2(@babel/core@7.27.1)(@types/react@18.3.22)(react@18.3.1):
    dependencies:
      '@jest/create-cache-key-function': 29.7.0
      '@react-native/assets-registry': 0.79.2
      '@react-native/codegen': 0.79.2(@babel/core@7.27.1)
      '@react-native/community-cli-plugin': 0.79.2
      '@react-native/gradle-plugin': 0.79.2
      '@react-native/js-polyfills': 0.79.2
      '@react-native/normalize-colors': 0.79.2
      '@react-native/virtualized-lists': 0.79.2(@types/react@18.3.22)(react-native@0.79.2(@babel/core@7.27.1)(@types/react@18.3.22)(react@18.3.1))(react@18.3.1)
      abort-controller: 3.0.0
      anser: 1.4.10
      ansi-regex: 5.0.1
      babel-jest: 29.7.0(@babel/core@7.27.1)
      babel-plugin-syntax-hermes-parser: 0.25.1
      base64-js: 1.5.1
      chalk: 4.1.2
      commander: 12.1.0
      event-target-shim: 5.0.1
      flow-enums-runtime: 0.0.6
      glob: 7.2.3
      invariant: 2.2.4
      jest-environment-node: 29.7.0
      memoize-one: 5.2.1
      metro-runtime: 0.82.4
      metro-source-map: 0.82.4
      nullthrows: 1.1.1
      pretty-format: 29.7.0
      promise: 8.3.0
      react: 18.3.1
      react-devtools-core: 6.1.2
      react-refresh: 0.14.2
      regenerator-runtime: 0.13.11
      scheduler: 0.25.0
      semver: 7.7.2
      stacktrace-parser: 0.1.11
      whatwg-fetch: 3.6.20
      ws: 6.2.3
      yargs: 17.7.2
    optionalDependencies:
      '@types/react': 18.3.22
    transitivePeerDependencies:
      - '@babel/core'
      - '@react-native-community/cli'
      - bufferutil
      - supports-color
      - utf-8-validate

  react-reconciler@0.29.2(react@18.3.1):
    dependencies:
      loose-envify: 1.4.0
      react: 18.3.1
      scheduler: 0.23.2

  react-reconciler@0.31.0(react@18.3.1):
    dependencies:
      react: 18.3.1
      scheduler: 0.25.0

  react-refresh@0.14.2: {}

  react-remove-scroll-bar@2.3.8(@types/react@18.3.22)(react@18.3.1):
    dependencies:
      react: 18.3.1
      react-style-singleton: 2.2.3(@types/react@18.3.22)(react@18.3.1)
      tslib: 2.8.1
    optionalDependencies:
      '@types/react': 18.3.22

  react-remove-scroll@2.7.0(@types/react@18.3.22)(react@18.3.1):
    dependencies:
      react: 18.3.1
      react-remove-scroll-bar: 2.3.8(@types/react@18.3.22)(react@18.3.1)
      react-style-singleton: 2.2.3(@types/react@18.3.22)(react@18.3.1)
      tslib: 2.8.1
      use-callback-ref: 1.3.3(@types/react@18.3.22)(react@18.3.1)
      use-sidecar: 1.1.3(@types/react@18.3.22)(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22

  react-resizable-panels@2.1.9(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)

  react-smooth@4.0.4(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      fast-equals: 5.2.2
      prop-types: 15.8.1
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      react-transition-group: 4.4.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1)

  react-spring@9.7.5(@react-three/fiber@9.1.2(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react-native@0.79.2(@babel/core@7.27.1)(@types/react@18.3.22)(react@18.3.1))(react@18.3.1)(three@0.176.0))(konva@9.3.20)(react-dom@18.3.1(react@18.3.1))(react-konva@18.2.10(@types/react@18.3.22)(konva@9.3.20)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react-native@0.79.2(@babel/core@7.27.1)(@types/react@18.3.22)(react@18.3.1))(react-zdog@1.2.2)(react@18.3.1)(three@0.176.0)(zdog@1.1.3):
    dependencies:
      '@react-spring/core': 9.7.5(react@18.3.1)
      '@react-spring/konva': 9.7.5(konva@9.3.20)(react-konva@18.2.10(@types/react@18.3.22)(konva@9.3.20)(react-dom@18.3.1(react@18.3.1))(react@18.3.1))(react@18.3.1)
      '@react-spring/native': 9.7.5(react-native@0.79.2(@babel/core@7.27.1)(@types/react@18.3.22)(react@18.3.1))(react@18.3.1)
      '@react-spring/three': 9.7.5(@react-three/fiber@9.1.2(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react-native@0.79.2(@babel/core@7.27.1)(@types/react@18.3.22)(react@18.3.1))(react@18.3.1)(three@0.176.0))(react@18.3.1)(three@0.176.0)
      '@react-spring/web': 9.7.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      '@react-spring/zdog': 9.7.5(react-dom@18.3.1(react@18.3.1))(react-zdog@1.2.2)(react@18.3.1)(zdog@1.1.3)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    transitivePeerDependencies:
      - '@react-three/fiber'
      - konva
      - react-konva
      - react-native
      - react-zdog
      - three
      - zdog

  react-style-singleton@2.2.3(@types/react@18.3.22)(react@18.3.1):
    dependencies:
      get-nonce: 1.0.1
      react: 18.3.1
      tslib: 2.8.1
    optionalDependencies:
      '@types/react': 18.3.22

  react-syntax-highlighter@15.6.1(react@18.3.1):
    dependencies:
      '@babel/runtime': 7.27.1
      highlight.js: 10.7.3
      highlightjs-vue: 1.0.0
      lowlight: 1.20.0
      prismjs: 1.30.0
      react: 18.3.1
      refractor: 3.6.0

  react-transition-group@4.4.5(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      '@babel/runtime': 7.27.1
      dom-helpers: 5.2.1
      loose-envify: 1.4.0
      prop-types: 15.8.1
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)

  react-use-measure@2.1.7(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      react: 18.3.1
    optionalDependencies:
      react-dom: 18.3.1(react@18.3.1)

  react-virtuoso@4.12.7(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)

  react-zdog@1.2.2:
    dependencies:
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      resize-observer-polyfill: 1.5.1

  react@18.3.1:
    dependencies:
      loose-envify: 1.4.0

  read-cache@1.0.0:
    dependencies:
      pify: 2.3.0

  readdirp@3.6.0:
    dependencies:
      picomatch: 2.3.1

  recharts-scale@0.4.5:
    dependencies:
      decimal.js-light: 2.5.1

  recharts@2.15.3(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      clsx: 2.1.1
      eventemitter3: 4.0.7
      lodash: 4.17.21
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
      react-is: 18.3.1
      react-smooth: 4.0.4(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      recharts-scale: 0.4.5
      tiny-invariant: 1.3.3
      victory-vendor: 36.9.2

  refractor@3.6.0:
    dependencies:
      hastscript: 6.0.0
      parse-entities: 2.0.0
      prismjs: 1.27.0

  regenerator-runtime@0.13.11: {}

  regex-recursion@5.1.1:
    dependencies:
      regex: 5.1.1
      regex-utilities: 2.3.0

  regex-utilities@2.3.0: {}

  regex@5.1.1:
    dependencies:
      regex-utilities: 2.3.0

  rehype-katex@7.0.1:
    dependencies:
      '@types/hast': 3.0.4
      '@types/katex': 0.16.7
      hast-util-from-html-isomorphic: 2.0.0
      hast-util-to-text: 4.0.2
      katex: 0.16.22
      unist-util-visit-parents: 6.0.1
      vfile: 6.0.3

  rehype-raw@7.0.0:
    dependencies:
      '@types/hast': 3.0.4
      hast-util-raw: 9.1.0
      vfile: 6.0.3

  remark-gfm@4.0.1:
    dependencies:
      '@types/mdast': 4.0.4
      mdast-util-gfm: 3.1.0
      micromark-extension-gfm: 3.0.0
      remark-parse: 11.0.0
      remark-stringify: 11.0.0
      unified: 11.0.5
    transitivePeerDependencies:
      - supports-color

  remark-math@6.0.0:
    dependencies:
      '@types/mdast': 4.0.4
      mdast-util-math: 3.0.0
      micromark-extension-math: 3.1.0
      unified: 11.0.5
    transitivePeerDependencies:
      - supports-color

  remark-parse@11.0.0:
    dependencies:
      '@types/mdast': 4.0.4
      mdast-util-from-markdown: 2.0.2
      micromark-util-types: 2.0.2
      unified: 11.0.5
    transitivePeerDependencies:
      - supports-color

  remark-rehype@11.1.2:
    dependencies:
      '@types/hast': 3.0.4
      '@types/mdast': 4.0.4
      mdast-util-to-hast: 13.2.0
      unified: 11.0.5
      vfile: 6.0.3

  remark-stringify@11.0.0:
    dependencies:
      '@types/mdast': 4.0.4
      mdast-util-to-markdown: 2.1.2
      unified: 11.0.5

  rename-keys@1.2.0: {}

  require-directory@2.1.1: {}

  resize-observer-polyfill@1.5.1: {}

  resolve-from@3.0.0: {}

  resolve-from@4.0.0: {}

  resolve-from@5.0.0: {}

  resolve@1.22.10:
    dependencies:
      is-core-module: 2.16.1
      path-parse: 1.0.7
      supports-preserve-symlinks-flag: 1.0.0

  reusify@1.1.0: {}

  rimraf@3.0.2:
    dependencies:
      glob: 7.2.3

  run-parallel@1.2.0:
    dependencies:
      queue-microtask: 1.2.3

  scheduler@0.23.2:
    dependencies:
      loose-envify: 1.4.0

  scheduler@0.25.0: {}

  semver@6.3.1: {}

  semver@7.7.2: {}

  send@0.19.0:
    dependencies:
      debug: 2.6.9
      depd: 2.0.0
      destroy: 1.2.0
      encodeurl: 1.0.2
      escape-html: 1.0.3
      etag: 1.8.1
      fresh: 0.5.2
      http-errors: 2.0.0
      mime: 1.6.0
      ms: 2.1.3
      on-finished: 2.4.1
      range-parser: 1.2.1
      statuses: 2.0.1
    transitivePeerDependencies:
      - supports-color

  serialize-error@2.1.0: {}

  serve-static@1.16.2:
    dependencies:
      encodeurl: 2.0.0
      escape-html: 1.0.3
      parseurl: 1.3.3
      send: 0.19.0
    transitivePeerDependencies:
      - supports-color

  setprototypeof@1.2.0: {}

  sharp@0.33.5:
    dependencies:
      color: 4.2.3
      detect-libc: 2.0.4
      semver: 7.7.2
    optionalDependencies:
      '@img/sharp-darwin-arm64': 0.33.5
      '@img/sharp-darwin-x64': 0.33.5
      '@img/sharp-libvips-darwin-arm64': 1.0.4
      '@img/sharp-libvips-darwin-x64': 1.0.4
      '@img/sharp-libvips-linux-arm': 1.0.5
      '@img/sharp-libvips-linux-arm64': 1.0.4
      '@img/sharp-libvips-linux-s390x': 1.0.4
      '@img/sharp-libvips-linux-x64': 1.0.4
      '@img/sharp-libvips-linuxmusl-arm64': 1.0.4
      '@img/sharp-libvips-linuxmusl-x64': 1.0.4
      '@img/sharp-linux-arm': 0.33.5
      '@img/sharp-linux-arm64': 0.33.5
      '@img/sharp-linux-s390x': 0.33.5
      '@img/sharp-linux-x64': 0.33.5
      '@img/sharp-linuxmusl-arm64': 0.33.5
      '@img/sharp-linuxmusl-x64': 0.33.5
      '@img/sharp-wasm32': 0.33.5
      '@img/sharp-win32-ia32': 0.33.5
      '@img/sharp-win32-x64': 0.33.5
    optional: true

  shebang-command@2.0.0:
    dependencies:
      shebang-regex: 3.0.0

  shebang-regex@3.0.0: {}

  shell-quote@1.8.2: {}

  shiki@1.29.2:
    dependencies:
      '@shikijs/core': 1.29.2
      '@shikijs/engine-javascript': 1.29.2
      '@shikijs/engine-oniguruma': 1.29.2
      '@shikijs/langs': 1.29.2
      '@shikijs/themes': 1.29.2
      '@shikijs/types': 1.29.2
      '@shikijs/vscode-textmate': 10.0.2
      '@types/hast': 3.0.4

  signal-exit@3.0.7: {}

  signal-exit@4.1.0: {}

  simple-swizzle@0.2.2:
    dependencies:
      is-arrayish: 0.3.2
    optional: true

  slash@3.0.0: {}

  sonner@1.7.4(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)

  source-map-js@1.2.1: {}

  source-map-support@0.5.21:
    dependencies:
      buffer-from: 1.1.2
      source-map: 0.6.1

  source-map@0.5.7: {}

  source-map@0.6.1: {}

  space-separated-tokens@1.1.5: {}

  space-separated-tokens@2.0.2: {}

  sprintf-js@1.0.3: {}

  stack-utils@2.0.6:
    dependencies:
      escape-string-regexp: 2.0.0

  stackframe@1.3.4: {}

  stacktrace-parser@0.1.11:
    dependencies:
      type-fest: 0.7.1

  state-local@1.0.7: {}

  statuses@1.5.0: {}

  statuses@2.0.1: {}

  streamsearch@1.1.0: {}

  string-width@4.2.3:
    dependencies:
      emoji-regex: 8.0.0
      is-fullwidth-code-point: 3.0.0
      strip-ansi: 6.0.1

  string-width@5.1.2:
    dependencies:
      eastasianwidth: 0.2.0
      emoji-regex: 9.2.2
      strip-ansi: 7.1.0

  stringify-entities@4.0.4:
    dependencies:
      character-entities-html4: 2.1.0
      character-entities-legacy: 3.0.0

  strip-ansi@6.0.1:
    dependencies:
      ansi-regex: 5.0.1

  strip-ansi@7.1.0:
    dependencies:
      ansi-regex: 6.1.0

  style-to-js@1.1.16:
    dependencies:
      style-to-object: 1.0.8

  style-to-object@1.0.8:
    dependencies:
      inline-style-parser: 0.2.4

  styled-jsx@5.1.6(@babel/core@7.27.1)(react@18.3.1):
    dependencies:
      client-only: 0.0.1
      react: 18.3.1
    optionalDependencies:
      '@babel/core': 7.27.1

  stylis@4.2.0: {}

  sucrase@3.35.0:
    dependencies:
      '@jridgewell/gen-mapping': 0.3.8
      commander: 4.1.1
      glob: 10.4.5
      lines-and-columns: 1.2.4
      mz: 2.7.0
      pirates: 4.0.7
      ts-interface-checker: 0.1.13

  supports-color@7.2.0:
    dependencies:
      has-flag: 4.0.0

  supports-color@8.1.1:
    dependencies:
      has-flag: 4.0.0

  supports-preserve-symlinks-flag@1.0.0: {}

  suspend-react@0.1.3(react@18.3.1):
    dependencies:
      react: 18.3.1

  svgson@5.3.1:
    dependencies:
      deep-rename-keys: 0.2.1
      xml-reader: 2.4.3

  tailwind-merge@2.6.0: {}

  tailwindcss-animate@1.0.7(tailwindcss@3.4.17):
    dependencies:
      tailwindcss: 3.4.17

  tailwindcss@3.4.17:
    dependencies:
      '@alloc/quick-lru': 5.2.0
      arg: 5.0.2
      chokidar: 3.6.0
      didyoumean: 1.2.2
      dlv: 1.1.3
      fast-glob: 3.3.3
      glob-parent: 6.0.2
      is-glob: 4.0.3
      jiti: 1.21.7
      lilconfig: 3.1.3
      micromatch: 4.0.8
      normalize-path: 3.0.0
      object-hash: 3.0.0
      picocolors: 1.1.1
      postcss: 8.5.3
      postcss-import: 15.1.0(postcss@8.5.3)
      postcss-js: 4.0.1(postcss@8.5.3)
      postcss-load-config: 4.0.2(postcss@8.5.3)
      postcss-nested: 6.2.0(postcss@8.5.3)
      postcss-selector-parser: 6.1.2
      resolve: 1.22.10
      sucrase: 3.35.0
    transitivePeerDependencies:
      - ts-node

  terser@5.39.2:
    dependencies:
      '@jridgewell/source-map': 0.3.6
      acorn: 8.14.1
      commander: 2.20.3
      source-map-support: 0.5.21

  test-exclude@6.0.0:
    dependencies:
      '@istanbuljs/schema': 0.1.3
      glob: 7.2.3
      minimatch: 3.1.2

  thenify-all@1.6.0:
    dependencies:
      thenify: 3.3.1

  thenify@3.3.1:
    dependencies:
      any-promise: 1.3.0

  three@0.176.0: {}

  throat@5.0.0: {}

  tiny-invariant@1.3.3: {}

  tmpl@1.0.5: {}

  to-regex-range@5.0.1:
    dependencies:
      is-number: 7.0.0

  toidentifier@1.0.1: {}

  trim-lines@3.0.1: {}

  trough@2.2.0: {}

  ts-interface-checker@0.1.13: {}

  tslib@2.8.1: {}

  type-detect@4.0.8: {}

  type-fest@0.7.1: {}

  typescript@5.8.3: {}

  undici-types@6.21.0: {}

  unified@11.0.5:
    dependencies:
      '@types/unist': 3.0.3
      bail: 2.0.2
      devlop: 1.1.0
      extend: 3.0.2
      is-plain-obj: 4.1.0
      trough: 2.2.0
      vfile: 6.0.3

  unist-util-find-after@5.0.0:
    dependencies:
      '@types/unist': 3.0.3
      unist-util-is: 6.0.0

  unist-util-is@6.0.0:
    dependencies:
      '@types/unist': 3.0.3

  unist-util-position@5.0.0:
    dependencies:
      '@types/unist': 3.0.3

  unist-util-remove-position@5.0.0:
    dependencies:
      '@types/unist': 3.0.3
      unist-util-visit: 5.0.0

  unist-util-stringify-position@4.0.0:
    dependencies:
      '@types/unist': 3.0.3

  unist-util-visit-parents@6.0.1:
    dependencies:
      '@types/unist': 3.0.3
      unist-util-is: 6.0.0

  unist-util-visit@5.0.0:
    dependencies:
      '@types/unist': 3.0.3
      unist-util-is: 6.0.0
      unist-util-visit-parents: 6.0.1

  unpipe@1.0.0: {}

  update-browserslist-db@1.1.3(browserslist@4.24.5):
    dependencies:
      browserslist: 4.24.5
      escalade: 3.2.0
      picocolors: 1.1.1

  use-callback-ref@1.3.3(@types/react@18.3.22)(react@18.3.1):
    dependencies:
      react: 18.3.1
      tslib: 2.8.1
    optionalDependencies:
      '@types/react': 18.3.22

  use-sidecar@1.1.3(@types/react@18.3.22)(react@18.3.1):
    dependencies:
      detect-node-es: 1.1.0
      react: 18.3.1
      tslib: 2.8.1
    optionalDependencies:
      '@types/react': 18.3.22

  use-sync-external-store@1.5.0(react@18.3.1):
    dependencies:
      react: 18.3.1

  util-deprecate@1.0.2: {}

  utils-merge@1.0.1: {}

  uuid@11.1.0: {}

  vaul@0.9.9(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
    dependencies:
      '@radix-ui/react-dialog': 1.1.14(@types/react-dom@18.3.7(@types/react@18.3.22))(@types/react@18.3.22)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
      react: 18.3.1
      react-dom: 18.3.1(react@18.3.1)
    transitivePeerDependencies:
      - '@types/react'
      - '@types/react-dom'

  vfile-location@5.0.3:
    dependencies:
      '@types/unist': 3.0.3
      vfile: 6.0.3

  vfile-message@4.0.2:
    dependencies:
      '@types/unist': 3.0.3
      unist-util-stringify-position: 4.0.0

  vfile@6.0.3:
    dependencies:
      '@types/unist': 3.0.3
      vfile-message: 4.0.2

  victory-vendor@36.9.2:
    dependencies:
      '@types/d3-array': 3.2.1
      '@types/d3-ease': 3.0.2
      '@types/d3-interpolate': 3.0.4
      '@types/d3-scale': 4.0.9
      '@types/d3-shape': 3.1.7
      '@types/d3-time': 3.0.4
      '@types/d3-timer': 3.0.2
      d3-array: 3.2.4
      d3-ease: 3.0.1
      d3-interpolate: 3.0.1
      d3-scale: 4.0.2
      d3-shape: 3.2.0
      d3-time: 3.1.0
      d3-timer: 3.0.1

  vlq@1.0.1: {}

  walker@1.0.8:
    dependencies:
      makeerror: 1.0.12

  web-namespaces@2.0.1: {}

  whatwg-fetch@3.6.20: {}

  which@2.0.2:
    dependencies:
      isexe: 2.0.0

  wrap-ansi@7.0.0:
    dependencies:
      ansi-styles: 4.3.0
      string-width: 4.2.3
      strip-ansi: 6.0.1

  wrap-ansi@8.1.0:
    dependencies:
      ansi-styles: 6.2.1
      string-width: 5.1.2
      strip-ansi: 7.1.0

  wrappy@1.0.2: {}

  write-file-atomic@4.0.2:
    dependencies:
      imurmurhash: 0.1.4
      signal-exit: 3.0.7

  ws@6.2.3:
    dependencies:
      async-limiter: 1.0.1

  ws@7.5.10: {}

  xml-lexer@0.2.2:
    dependencies:
      eventemitter3: 2.0.3

  xml-reader@2.4.3:
    dependencies:
      eventemitter3: 2.0.3
      xml-lexer: 0.2.2

  xtend@4.0.2: {}

  y18n@5.0.8: {}

  yallist@3.1.1: {}

  yaml@1.10.2: {}

  yaml@2.8.0: {}

  yargs-parser@21.1.1: {}

  yargs@17.7.2:
    dependencies:
      cliui: 8.0.1
      escalade: 3.2.0
      get-caller-file: 2.0.5
      require-directory: 2.1.1
      string-width: 4.2.3
      y18n: 5.0.8
      yargs-parser: 21.1.1

  zdog@1.1.3: {}

  zod@3.25.28: {}

  zustand@4.5.7(@types/react@18.3.22)(react@18.3.1):
    dependencies:
      use-sync-external-store: 1.5.0(react@18.3.1)
    optionalDependencies:
      '@types/react': 18.3.22
      react: 18.3.1

  zustand@5.0.5(@types/react@18.3.22)(react@18.3.1)(use-sync-external-store@1.5.0(react@18.3.1)):
    optionalDependencies:
      '@types/react': 18.3.22
      react: 18.3.1
      use-sync-external-store: 1.5.0(react@18.3.1)

  zwitch@2.0.4: {}


--- File: postcss.config.mjs ---
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;


--- File: tailwind.config.ts ---
// tailwind.config.ts
import type { Config } from "tailwindcss"

const config: Config = {
  darkMode: ["class"],
  content: [
    "./pages/**/*.{ts,tsx}",
    "./components/**/*.{ts,tsx}",
    "./app/**/*.{ts,tsx}",
    "./src/**/*.{ts,tsx}",
    "*.{js,ts,jsx,tsx,mdx}",
  ],
  prefix: "",
  theme: {
    container: {
      center: true,
      padding: "2rem",
      screens: {
        "2xl": "1400px",
      },
    },
    extend: {
      colors: {
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
        },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
        success: {
          DEFAULT: "hsl(var(--success))",
          foreground: "hsl(var(--success-foreground))",
        },
        warning: {
          DEFAULT: "hsl(var(--warning))",
          foreground: "hsl(var(--warning-foreground))",
        },
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      fontFamily: {
        sans: ["var(--font-ui)"],
        mono: ["var(--font-mono)"],
      },
      keyframes: {
        "accordion-down": {
          from: { height: "0" },
          to: { height: "var(--radix-accordion-content-height)" },
        },
        "accordion-up": {
          from: { height: "var(--radix-accordion-content-height)" },
          to: { height: "0" },
        },
        blink: {
          "0%, 100%": { opacity: "1" },
          "50%": { opacity: "0" },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
        "blink": "blink 1s step-start infinite",
      },
    },
  },
  plugins: [
    require("@tailwindcss/typography"),
    require("tailwindcss-animate")
  ], // Merged plugins
}

export default config

--- File: tsconfig.json ---
{
  "compilerOptions": {
    "target": "es5",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}


--- File: .git\config ---
[core]
	repositoryformatversion = 0
	filemode = false
	bare = false
	logallrefupdates = true
	ignorecase = true
[remote "origin"]
	url = https://github.com/nakib555/-vsgfg.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch "main"]
	remote = origin
	merge = refs/heads/main


--- File: .git\description ---
Unnamed repository; edit this file 'description' to name the repository.


--- File: .git\HEAD ---
ref: refs/heads/main


--- File: .git\index ---
[Could not read file: 'utf-8' codec can't decode byte 0xc0 in position 18: invalid start byte]

--- File: .git\packed-refs ---
# pack-refs with: peeled fully-peeled sorted 
59624740a7ac85e83f8cc966f48c9c2ac233c0dd refs/remotes/origin/-vsgfg
386f96a8013d8433b6f820620bba4ba7efd7c02b refs/remotes/origin/main
7070a5cbba91fd2426d437f9c9dd579e81a5f76d refs/remotes/origin/master


--- File: .git\hooks\applypatch-msg.sample ---
#!/bin/sh
#
# An example hook script to check the commit log message taken by
# applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.  The hook is
# allowed to edit the commit message file.
#
# To enable this hook, rename this file to "applypatch-msg".

. git-sh-setup
commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
:


--- File: .git\hooks\commit-msg.sample ---
#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

test "" = "$(grep '^Signed-off-by: ' "$1" |
	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
	echo >&2 Duplicate Signed-off-by lines.
	exit 1
}


--- File: .git\hooks\fsmonitor-watchman.sample ---
#!/usr/bin/perl

use strict;
use warnings;
use IPC::Open2;

# An example hook script to integrate Watchman
# (https://facebook.github.io/watchman/) with git to speed up detecting
# new and modified files.
#
# The hook is passed a version (currently 2) and last update token
# formatted as a string and outputs to stdout a new update token and
# all files that have been modified since the update token. Paths must
# be relative to the root of the working tree and separated by a single NUL.
#
# To enable this hook, rename this file to "query-watchman" and set
# 'git config core.fsmonitor .git/hooks/query-watchman'
#
my ($version, $last_update_token) = @ARGV;

# Uncomment for debugging
# print STDERR "$0 $version $last_update_token\n";

# Check the hook interface version
if ($version ne 2) {
	die "Unsupported query-fsmonitor hook version '$version'.\n" .
	    "Falling back to scanning...\n";
}

my $git_work_tree = get_working_dir();

my $retry = 1;

my $json_pkg;
eval {
	require JSON::XS;
	$json_pkg = "JSON::XS";
	1;
} or do {
	require JSON::PP;
	$json_pkg = "JSON::PP";
};

launch_watchman();

sub launch_watchman {
	my $o = watchman_query();
	if (is_work_tree_watched($o)) {
		output_result($o->{clock}, @{$o->{files}});
	}
}

sub output_result {
	my ($clockid, @files) = @_;

	# Uncomment for debugging watchman output
	# open (my $fh, ">", ".git/watchman-output.out");
	# binmode $fh, ":utf8";
	# print $fh "$clockid\n@files\n";
	# close $fh;

	binmode STDOUT, ":utf8";
	print $clockid;
	print "\0";
	local $, = "\0";
	print @files;
}

sub watchman_clock {
	my $response = qx/watchman clock "$git_work_tree"/;
	die "Failed to get clock id on '$git_work_tree'.\n" .
		"Falling back to scanning...\n" if $? != 0;

	return $json_pkg->new->utf8->decode($response);
}

sub watchman_query {
	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
	or die "open2() failed: $!\n" .
	"Falling back to scanning...\n";

	# In the query expression below we're asking for names of files that
	# changed since $last_update_token but not from the .git folder.
	#
	# To accomplish this, we're using the "since" generator to use the
	# recency index to select candidate nodes and "fields" to limit the
	# output to file names only. Then we're using the "expression" term to
	# further constrain the results.
	my $last_update_line = "";
	if (substr($last_update_token, 0, 1) eq "c") {
		$last_update_token = "\"$last_update_token\"";
		$last_update_line = qq[\n"since": $last_update_token,];
	}
	my $query = <<"	END";
		["query", "$git_work_tree", {$last_update_line
			"fields": ["name"],
			"expression": ["not", ["dirname", ".git"]]
		}]
	END

	# Uncomment for debugging the watchman query
	# open (my $fh, ">", ".git/watchman-query.json");
	# print $fh $query;
	# close $fh;

	print CHLD_IN $query;
	close CHLD_IN;
	my $response = do {local $/; <CHLD_OUT>};

	# Uncomment for debugging the watch response
	# open ($fh, ">", ".git/watchman-response.json");
	# print $fh $response;
	# close $fh;

	die "Watchman: command returned no output.\n" .
	"Falling back to scanning...\n" if $response eq "";
	die "Watchman: command returned invalid output: $response\n" .
	"Falling back to scanning...\n" unless $response =~ /^\{/;

	return $json_pkg->new->utf8->decode($response);
}

sub is_work_tree_watched {
	my ($output) = @_;
	my $error = $output->{error};
	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
		$retry--;
		my $response = qx/watchman watch "$git_work_tree"/;
		die "Failed to make watchman watch '$git_work_tree'.\n" .
		    "Falling back to scanning...\n" if $? != 0;
		$output = $json_pkg->new->utf8->decode($response);
		$error = $output->{error};
		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		# Uncomment for debugging watchman output
		# open (my $fh, ">", ".git/watchman-output.out");
		# close $fh;

		# Watchman will always return all files on the first query so
		# return the fast "everything is dirty" flag to git and do the
		# Watchman query just to get it over with now so we won't pay
		# the cost in git to look up each individual file.
		my $o = watchman_clock();
		$error = $output->{error};

		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		output_result($o->{clock}, ("/"));
		$last_update_token = $o->{clock};

		eval { launch_watchman() };
		return 0;
	}

	die "Watchman: $error.\n" .
	"Falling back to scanning...\n" if $error;

	return 1;
}

sub get_working_dir {
	my $working_dir;
	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
		$working_dir = Win32::GetCwd();
		$working_dir =~ tr/\\/\//;
	} else {
		require Cwd;
		$working_dir = Cwd::cwd();
	}

	return $working_dir;
}


--- File: .git\hooks\post-update.sample ---
#!/bin/sh
#
# An example hook script to prepare a packed repository for use over
# dumb transports.
#
# To enable this hook, rename this file to "post-update".

exec git update-server-info


--- File: .git\hooks\pre-applypatch.sample ---
#!/bin/sh
#
# An example hook script to verify what is about to be committed
# by applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-applypatch".

. git-sh-setup
precommit="$(git rev-parse --git-path hooks/pre-commit)"
test -x "$precommit" && exec "$precommit" ${1+"$@"}
:


--- File: .git\hooks\pre-commit.sample ---
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff-index --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --


--- File: .git\hooks\pre-merge-commit.sample ---
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git merge" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message to
# stderr if it wants to stop the merge commit.
#
# To enable this hook, rename this file to "pre-merge-commit".

. git-sh-setup
test -x "$GIT_DIR/hooks/pre-commit" &&
        exec "$GIT_DIR/hooks/pre-commit"
:


--- File: .git\hooks\pre-push.sample ---
#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local oid> <remote ref> <remote oid>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

while read local_ref local_oid remote_ref remote_oid
do
	if test "$local_oid" = "$zero"
	then
		# Handle delete
		:
	else
		if test "$remote_oid" = "$zero"
		then
			# New branch, examine all commits
			range="$local_oid"
		else
			# Update to existing branch, examine new commits
			range="$remote_oid..$local_oid"
		fi

		# Check for WIP commit
		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
		if test -n "$commit"
		then
			echo >&2 "Found WIP commit in $local_ref, not pushing"
			exit 1
		fi
	fi
done

exit 0


--- File: .git\hooks\pre-rebase.sample ---
#!/bin/sh
#
# Copyright (c) 2006, 2008 Junio C Hamano
#
# The "pre-rebase" hook is run just before "git rebase" starts doing
# its job, and can prevent the command from running by exiting with
# non-zero status.
#
# The hook is called with the following parameters:
#
# $1 -- the upstream the series was forked from.
# $2 -- the branch being rebased (or empty when rebasing the current branch).
#
# This sample shows how to prevent topic branches that are already
# merged to 'next' branch from getting rebased, because allowing it
# would result in rebasing already published history.

publish=next
basebranch="$1"
if test "$#" = 2
then
	topic="refs/heads/$2"
else
	topic=`git symbolic-ref HEAD` ||
	exit 0 ;# we do not interrupt rebasing detached HEAD
fi

case "$topic" in
refs/heads/??/*)
	;;
*)
	exit 0 ;# we do not interrupt others.
	;;
esac

# Now we are dealing with a topic branch being rebased
# on top of master.  Is it OK to rebase it?

# Does the topic really exist?
git show-ref -q "$topic" || {
	echo >&2 "No such branch $topic"
	exit 1
}

# Is topic fully merged to master?
not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
if test -z "$not_in_master"
then
	echo >&2 "$topic is fully merged to master; better remove it."
	exit 1 ;# we could allow it, but there is no point.
fi

# Is topic ever merged to next?  If so you should not be rebasing it.
only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
only_next_2=`git rev-list ^master           ${publish} | sort`
if test "$only_next_1" = "$only_next_2"
then
	not_in_topic=`git rev-list "^$topic" master`
	if test -z "$not_in_topic"
	then
		echo >&2 "$topic is already up to date with master"
		exit 1 ;# we could allow it, but there is no point.
	else
		exit 0
	fi
else
	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
	/usr/bin/perl -e '
		my $topic = $ARGV[0];
		my $msg = "* $topic has commits already merged to public branch:\n";
		my (%not_in_next) = map {
			/^([0-9a-f]+) /;
			($1 => 1);
		} split(/\n/, $ARGV[1]);
		for my $elem (map {
				/^([0-9a-f]+) (.*)$/;
				[$1 => $2];
			} split(/\n/, $ARGV[2])) {
			if (!exists $not_in_next{$elem->[0]}) {
				if ($msg) {
					print STDERR $msg;
					undef $msg;
				}
				print STDERR " $elem->[1]\n";
			}
		}
	' "$topic" "$not_in_next" "$not_in_master"
	exit 1
fi

<<\DOC_END

This sample hook safeguards topic branches that have been
published from being rewound.

The workflow assumed here is:

 * Once a topic branch forks from "master", "master" is never
   merged into it again (either directly or indirectly).

 * Once a topic branch is fully cooked and merged into "master",
   it is deleted.  If you need to build on top of it to correct
   earlier mistakes, a new topic branch is created by forking at
   the tip of the "master".  This is not strictly necessary, but
   it makes it easier to keep your history simple.

 * Whenever you need to test or publish your changes to topic
   branches, merge them into "next" branch.

The script, being an example, hardcodes the publish branch name
to be "next", but it is trivial to make it configurable via
$GIT_DIR/config mechanism.

With this workflow, you would want to know:

(1) ... if a topic branch has ever been merged to "next".  Young
    topic branches can have stupid mistakes you would rather
    clean up before publishing, and things that have not been
    merged into other branches can be easily rebased without
    affecting other people.  But once it is published, you would
    not want to rewind it.

(2) ... if a topic branch has been fully merged to "master".
    Then you can delete it.  More importantly, you should not
    build on top of it -- other people may already want to
    change things related to the topic as patches against your
    "master", so if you need further changes, it is better to
    fork the topic (perhaps with the same name) afresh from the
    tip of "master".

Let's look at this example:

		   o---o---o---o---o---o---o---o---o---o "next"
		  /       /           /           /
		 /   a---a---b A     /           /
		/   /               /           /
	       /   /   c---c---c---c B         /
	      /   /   /             \         /
	     /   /   /   b---b C     \       /
	    /   /   /   /             \     /
    ---o---o---o---o---o---o---o---o---o---o---o "master"


A, B and C are topic branches.

 * A has one fix since it was merged up to "next".

 * B has finished.  It has been fully merged up to "master" and "next",
   and is ready to be deleted.

 * C has not merged to "next" at all.

We would want to allow C to be rebased, refuse A, and encourage
B to be deleted.

To compute (1):

	git rev-list ^master ^topic next
	git rev-list ^master        next

	if these match, topic has not merged in next at all.

To compute (2):

	git rev-list master..topic

	if this is empty, it is fully merged to "master".

DOC_END


--- File: .git\hooks\pre-receive.sample ---
#!/bin/sh
#
# An example hook script to make use of push options.
# The example simply echoes all push options that start with 'echoback='
# and rejects all pushes when the "reject" push option is used.
#
# To enable this hook, rename this file to "pre-receive".

if test -n "$GIT_PUSH_OPTION_COUNT"
then
	i=0
	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
	do
		eval "value=\$GIT_PUSH_OPTION_$i"
		case "$value" in
		echoback=*)
			echo "echo from the pre-receive-hook: ${value#*=}" >&2
			;;
		reject)
			exit 1
		esac
		i=$((i + 1))
	done
fi


--- File: .git\hooks\prepare-commit-msg.sample ---
#!/bin/sh
#
# An example hook script to prepare the commit log message.
# Called by "git commit" with the name of the file that has the
# commit message, followed by the description of the commit
# message's source.  The hook's purpose is to edit the commit
# message file.  If the hook fails with a non-zero status,
# the commit is aborted.
#
# To enable this hook, rename this file to "prepare-commit-msg".

# This hook includes three examples. The first one removes the
# "# Please enter the commit message..." help message.
#
# The second includes the output of "git diff --name-status -r"
# into the message, just before the "git status" output.  It is
# commented because it doesn't cope with --amend or with squashed
# commits.
#
# The third example adds a Signed-off-by line to the message, that can
# still be edited.  This is rarely a good idea.

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

/usr/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"

# case "$COMMIT_SOURCE,$SHA1" in
#  ,|template,)
#    /usr/bin/perl -i.bak -pe '
#       print "\n" . `git diff --cached --name-status -r`
# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
#  *) ;;
# esac

# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
# if test -z "$COMMIT_SOURCE"
# then
#   /usr/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
# fi


--- File: .git\hooks\push-to-checkout.sample ---
#!/bin/sh

# An example hook script to update a checked-out tree on a git push.
#
# This hook is invoked by git-receive-pack(1) when it reacts to git
# push and updates reference(s) in its repository, and when the push
# tries to update the branch that is currently checked out and the
# receive.denyCurrentBranch configuration variable is set to
# updateInstead.
#
# By default, such a push is refused if the working tree and the index
# of the remote repository has any difference from the currently
# checked out commit; when both the working tree and the index match
# the current commit, they are updated to match the newly pushed tip
# of the branch. This hook is to be used to override the default
# behaviour; however the code below reimplements the default behaviour
# as a starting point for convenient modification.
#
# The hook receives the commit with which the tip of the current
# branch is going to be updated:
commit=$1

# It can exit with a non-zero status to refuse the push (when it does
# so, it must not modify the index or the working tree).
die () {
	echo >&2 "$*"
	exit 1
}

# Or it can make any necessary changes to the working tree and to the
# index to bring them to the desired state when the tip of the current
# branch is updated to the new commit, and exit with a zero status.
#
# For example, the hook can simply run git read-tree -u -m HEAD "$1"
# in order to emulate git fetch that is run in the reverse direction
# with git push, as the two-tree form of git read-tree -u -m is
# essentially the same as git switch or git checkout that switches
# branches while keeping the local changes in the working tree that do
# not interfere with the difference between the branches.

# The below is a more-or-less exact translation to shell of the C code
# for the default behaviour for git's push-to-checkout hook defined in
# the push_to_deploy() function in builtin/receive-pack.c.
#
# Note that the hook will be executed from the repository directory,
# not from the working tree, so if you want to perform operations on
# the working tree, you will have to adapt your code accordingly, e.g.
# by adding "cd .." or using relative paths.

if ! git update-index -q --ignore-submodules --refresh
then
	die "Up-to-date check failed"
fi

if ! git diff-files --quiet --ignore-submodules --
then
	die "Working directory has unstaged changes"
fi

# This is a rough translation of:
#
#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
if git cat-file -e HEAD 2>/dev/null
then
	head=HEAD
else
	head=$(git hash-object -t tree --stdin </dev/null)
fi

if ! git diff-index --quiet --cached --ignore-submodules $head --
then
	die "Working directory has staged changes"
fi

if ! git read-tree -u -m "$commit"
then
	die "Could not update working tree to new HEAD"
fi


--- File: .git\hooks\sendemail-validate.sample ---
#!/bin/sh

# An example hook script to validate a patch (and/or patch series) before
# sending it via email.
#
# The hook should exit with non-zero status after issuing an appropriate
# message if it wants to prevent the email(s) from being sent.
#
# To enable this hook, rename this file to "sendemail-validate".
#
# By default, it will only check that the patch(es) can be applied on top of
# the default upstream branch without conflicts in a secondary worktree. After
# validation (successful or not) of the last patch of a series, the worktree
# will be deleted.
#
# The following config variables can be set to change the default remote and
# remote ref that are used to apply the patches against:
#
#   sendemail.validateRemote (default: origin)
#   sendemail.validateRemoteRef (default: HEAD)
#
# Replace the TODO placeholders with appropriate checks according to your
# needs.

validate_cover_letter () {
	file="$1"
	# TODO: Replace with appropriate checks (e.g. spell checking).
	true
}

validate_patch () {
	file="$1"
	# Ensure that the patch applies without conflicts.
	git am -3 "$file" || return
	# TODO: Replace with appropriate checks for this patch
	# (e.g. checkpatch.pl).
	true
}

validate_series () {
	# TODO: Replace with appropriate checks for the whole series
	# (e.g. quick build, coding style checks, etc.).
	true
}

# main -------------------------------------------------------------------------

if test "$GIT_SENDEMAIL_FILE_COUNTER" = 1
then
	remote=$(git config --default origin --get sendemail.validateRemote) &&
	ref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&
	worktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&
	git worktree add -fd --checkout "$worktree" "refs/remotes/$remote/$ref" &&
	git config --replace-all sendemail.validateWorktree "$worktree"
else
	worktree=$(git config --get sendemail.validateWorktree)
fi || {
	echo "sendemail-validate: error: failed to prepare worktree" >&2
	exit 1
}

unset GIT_DIR GIT_WORK_TREE
cd "$worktree" &&

if grep -q "^diff --git " "$1"
then
	validate_patch "$1"
else
	validate_cover_letter "$1"
fi &&

if test "$GIT_SENDEMAIL_FILE_COUNTER" = "$GIT_SENDEMAIL_FILE_TOTAL"
then
	git config --unset-all sendemail.validateWorktree &&
	trap 'git worktree remove -ff "$worktree"' EXIT &&
	validate_series
fi


--- File: .git\hooks\update.sample ---
#!/bin/sh
#
# An example hook script to block unannotated tags from entering.
# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
#
# To enable this hook, rename this file to "update".
#
# Config
# ------
# hooks.allowunannotated
#   This boolean sets whether unannotated tags will be allowed into the
#   repository.  By default they won't be.
# hooks.allowdeletetag
#   This boolean sets whether deleting tags will be allowed in the
#   repository.  By default they won't be.
# hooks.allowmodifytag
#   This boolean sets whether a tag may be modified after creation. By default
#   it won't be.
# hooks.allowdeletebranch
#   This boolean sets whether deleting branches will be allowed in the
#   repository.  By default they won't be.
# hooks.denycreatebranch
#   This boolean sets whether remotely creating branches will be denied
#   in the repository.  By default this is allowed.
#

# --- Command line
refname="$1"
oldrev="$2"
newrev="$3"

# --- Safety check
if [ -z "$GIT_DIR" ]; then
	echo "Don't run this script from the command line." >&2
	echo " (if you want, you could supply GIT_DIR then run" >&2
	echo "  $0 <ref> <oldrev> <newrev>)" >&2
	exit 1
fi

if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
	exit 1
fi

# --- Config
allowunannotated=$(git config --type=bool hooks.allowunannotated)
allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
allowmodifytag=$(git config --type=bool hooks.allowmodifytag)

# check for no description
projectdesc=$(sed -e '1q' "$GIT_DIR/description")
case "$projectdesc" in
"Unnamed repository"* | "")
	echo "*** Project description file hasn't been set" >&2
	exit 1
	;;
esac

# --- Check types
# if $newrev is 0000...0000, it's a commit to delete a ref.
zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
if [ "$newrev" = "$zero" ]; then
	newrev_type=delete
else
	newrev_type=$(git cat-file -t $newrev)
fi

case "$refname","$newrev_type" in
	refs/tags/*,commit)
		# un-annotated tag
		short_refname=${refname##refs/tags/}
		if [ "$allowunannotated" != "true" ]; then
			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
			exit 1
		fi
		;;
	refs/tags/*,delete)
		# delete tag
		if [ "$allowdeletetag" != "true" ]; then
			echo "*** Deleting a tag is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/tags/*,tag)
		# annotated tag
		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
		then
			echo "*** Tag '$refname' already exists." >&2
			echo "*** Modifying a tag is not allowed in this repository." >&2
			exit 1
		fi
		;;
	refs/heads/*,commit)
		# branch
		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
			echo "*** Creating a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/heads/*,delete)
		# delete branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	refs/remotes/*,commit)
		# tracking branch
		;;
	refs/remotes/*,delete)
		# delete tracking branch
		if [ "$allowdeletebranch" != "true" ]; then
			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
			exit 1
		fi
		;;
	*)
		# Anything else (is there anything else?)
		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
		exit 1
		;;
esac

# --- Finished
exit 0


--- File: .git\info\exclude ---
# git ls-files --others --exclude-from=.git/info/exclude
# Lines that start with '#' are comments.
# For a project mostly in C, the following would be a good set of
# exclude patterns (uncomment them if you want to use them):
# *.[oa]
# *~


--- File: .git\logs\HEAD ---
0000000000000000000000000000000000000000 386f96a8013d8433b6f820620bba4ba7efd7c02b Nakib <nakib@example.com> 1748329268 +0600	clone: from https://github.com/nakib555/-vsgfg.git


--- File: .git\logs\refs\heads\main ---
0000000000000000000000000000000000000000 386f96a8013d8433b6f820620bba4ba7efd7c02b Nakib <nakib@example.com> 1748329268 +0600	clone: from https://github.com/nakib555/-vsgfg.git


--- File: .git\logs\refs\remotes\origin\HEAD ---
0000000000000000000000000000000000000000 386f96a8013d8433b6f820620bba4ba7efd7c02b Nakib <nakib@example.com> 1748329268 +0600	clone: from https://github.com/nakib555/-vsgfg.git


--- File: .git\objects\pack\pack-0bc9d77604f8a0dd91ad0bc6605c1f782a812124.idx ---
[Could not read file: 'utf-8' codec can't decode byte 0xff in position 0: invalid start byte]

--- File: .git\objects\pack\pack-0bc9d77604f8a0dd91ad0bc6605c1f782a812124.pack ---
[Could not read file: ]

--- File: .git\objects\pack\pack-0bc9d77604f8a0dd91ad0bc6605c1f782a812124.rev ---
[Could not read file: 'utf-8' codec can't decode byte 0x8b in position 15: invalid start byte]

--- File: .git\refs\heads\main ---
386f96a8013d8433b6f820620bba4ba7efd7c02b


--- File: .git\refs\remotes\origin\HEAD ---
ref: refs/remotes/origin/main


--- File: app\globals.css ---
/* app/globals.css */


@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%; /* Default Light Theme Base */
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
    --destructive: 0 84.2% 60.2%;
    --code-keyword: 280 60% 70%;
    --code-string: 100 50% 50%;
    --code-comment: 215 10% 50%;
    --code-number: 30 70% 60%;
    --code-boolean: 190 50% 60%;
    --code-tag: 0 70% 60%;
    --code-attribute: 40 70% 60%;
    --search-highlight-bg: 48 96% 53.1%;
    --destructive-foreground: 210 40% 98%;
    --success: 142.1 76.2% 36.3%;
    --success-foreground: 355.7 100% 97.3%;
    --warning: 38 92.7% 50.2%;
    --warning-foreground: 222.2 84% 4.9%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;
    --radius: 0.5rem;
    --font-ui: var(--font-inter);
    --font-mono: var(--font-jetbrains);
  }

  .dark { /* Default Dark Theme */
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --code-keyword: 280 60% 70%;
    --code-string: 100 50% 50%;
    --code-comment: 215 10% 50%;
    --code-number: 30 70% 60%;
    --code-boolean: 190 50% 60%;
    --code-tag: 0 70% 60%;
    --code-attribute: 40 70% 60%;
    --search-highlight-bg: 48 96% 53.1%;
    --destructive: 0 62.8% 50.6%;
    --destructive-foreground: 210 40% 98%;
    --success: 142.1 70.6% 45.3%;
    --success-foreground: 144.9 80.4% 10%;
    --warning: 48 96% 53.1%;
    --warning-foreground: 223 47.4% 11.2%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }

  .midnight-blue {
    --background: 220 40% 10%;
    --foreground: 210 30% 90%;
    --card: 220 40% 12%;
    --card-foreground: 210 30% 90%;
    --popover: 220 40% 12%;
    --popover-foreground: 210 30% 90%;
    --primary: 200 70% 75%;
    --primary-foreground: 220 40% 5%;
    --secondary: 220 30% 20%;
    --secondary-foreground: 210 30% 85%;
    --muted: 220 30% 20%;
    --muted-foreground: 210 25% 60%;
    --accent: 220 30% 25%;
    --accent-foreground: 200 70% 75%;
    --destructive: 0 70% 55%;
    --destructive-foreground: 210 30% 90%;
    --success: 140 60% 45%;
    --success-foreground: 210 30% 90%;
    --warning: 40 80% 55%;
    --warning-foreground: 220 40% 5%;
    --border: 220 30% 25%;
    --input: 220 30% 22%;
    --ring: 200 70% 65%;
    --code-keyword: 270 60% 75%;
    --code-string: 90 50% 55%;
    --code-comment: 210 15% 55%;
    --code-number: 35 70% 65%;
    --code-boolean: 180 50% 65%;
    --code-tag: 5 70% 65%;
    --code-attribute: 45 70% 65%;
    --search-highlight-bg: 45 90% 60%;
  }

  .sandstone {
    --background: 35 40% 92%;
    --foreground: 30 30% 20%;
    --card: 35 40% 95%;
    --card-foreground: 30 30% 20%;
    --popover: 35 40% 95%;
    --popover-foreground: 30 30% 20%;
    --primary: 25 60% 45%;
    --primary-foreground: 35 40% 98%;
    --secondary: 35 30% 85%;
    --secondary-foreground: 25 60% 35%;
    --muted: 35 30% 85%;
    --muted-foreground: 30 25% 50%;
    --accent: 35 30% 88%;
    --accent-foreground: 25 60% 45%;
    --destructive: 0 60% 50%;
    --destructive-foreground: 35 40% 98%;
    --success: 120 50% 40%;
    --success-foreground: 35 40% 98%;
    --warning: 40 70% 50%;
    --warning-foreground: 30 30% 20%;
    --border: 35 30% 80%;
    --input: 35 30% 82%;
    --ring: 25 60% 55%;
    --code-keyword: 260 50% 50%;
    --code-string: 110 40% 40%;
    --code-comment: 30 10% 50%;
    --code-number: 20 60% 50%;
    --code-boolean: 200 40% 50%;
    --code-tag: 10 60% 50%;
    --code-attribute: 50 60% 50%;
    --search-highlight-bg: 50 80% 60%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    font-family: var(--font-ui);
    line-height: 1.6;
  }
  h1, h2, h3, h4, h5, h6 {
    font-family: var(--font-ui);
  }
  .katex {
    color: hsl(var(--foreground)) !important; 
    font-size: 1.05em; 
  }
  .katex .text { 
    font-family: var(--font-ui) !important;
  }
}

/* Terminal command styles */
.ps-success { color: hsl(var(--success)); }
.ps-error { color: hsl(var(--destructive)); }
.ps-info { color: hsl(217.2, 91.2%, 59.8%); }
.ps-command { color: hsl(var(--warning)); }

.search-highlight {
  background-color: hsla(var(--search-highlight-bg), 0.3);
  @apply rounded-sm px-0.5;
}
.dark .search-highlight { background-color: hsla(var(--search-highlight-bg), 0.4); }
.midnight-blue .search-highlight { background-color: hsla(var(--search-highlight-bg), 0.5); }
.sandstone .search-highlight { background-color: hsla(var(--search-highlight-bg), 0.25); }


/* --- AI Chat Code Block Enhancements --- */
.ai-chat-code-block {
  @apply relative my-4 rounded-md bg-muted/30 border border-border/50 overflow-hidden;
}

.ai-chat-code-block-header {
  @apply px-3 py-1.5 text-xs text-muted-foreground border-b border-border/70 flex justify-between items-center bg-muted/50 rounded-t-md;
}
.dark .ai-chat-code-block-header { @apply bg-muted/40 border-border/60; }
.midnight-blue .ai-chat-code-block-header { @apply bg-accent/30 border-accent/40; }
.sandstone .ai-chat-code-block-header { @apply bg-accent/40 border-accent/50; }


.ai-chat-code-block .shiki-container > pre.shiki,
.ai-chat-code-block .shiki-container > pre.shiki-fallback {
  @apply m-0 overflow-x-auto p-0;
  line-height: 1.625;
  font-size: 0.875rem;
  counter-reset: lineNumber;
}

.ai-chat-code-block .shiki-container > pre.shiki code,
.ai-chat-code-block .shiki-container > pre.shiki-fallback code {
  font-family: var(--font-mono);
  @apply p-0 block; 
}

.ai-chat-code-block .shiki-container > pre.shiki .line,
.ai-chat-code-block .shiki-container > pre.shiki-fallback .line { 
  @apply block relative pl-[3.25em] pr-3 py-px; 
  counter-increment: lineNumber;
  min-height: 1.625em; 
}

.ai-chat-code-block .shiki-container > pre.shiki .line::before,
.ai-chat-code-block .shiki-container > pre.shiki-fallback .line::before {
  content: counter(lineNumber);
  @apply absolute left-0 top-0 w-[2.75em] pr-2 text-right text-muted-foreground/70 select-none;
  font-size: 0.8em; 
  padding-top: inherit; 
  line-height: inherit; 
}
.dark .ai-chat-code-block .shiki-container > pre.shiki .line::before,
.dark .ai-chat-code-block .shiki-container > pre.shiki-fallback .line::before {
  @apply text-muted-foreground/50;
}


.ai-chat-code-block .shiki-container > pre.shiki .line.highlighted {
  background-color: hsl(var(--accent) / 0.5);
}

.ai-chat-code-block .shiki-container > pre.shiki-fallback {
  background-color: hsl(var(--muted) / 0.7);
  color: hsl(var(--foreground));
}
.ai-chat-code-block .shiki-container > pre.shiki-fallback code {
  white-space: pre-wrap;
  @apply p-3; 
}

.ai-chat-code-block .shiki-container > pre::-webkit-scrollbar {
  @apply h-2 w-2;
}
.ai-chat-code-block .shiki-container > pre::-webkit-scrollbar-track {
  @apply bg-transparent;
}
.ai-chat-code-block .shiki-container > pre::-webkit-scrollbar-thumb {
  @apply bg-border rounded;
}
.ai-chat-code-block .shiki-container > pre::-webkit-scrollbar-thumb:hover {
  @apply bg-muted-foreground/70;
}


/* Enhanced Tailwind Typography Styles for AI Chat */
@layer components {
  .prose {
    @apply text-foreground;
    line-height: 1.75; 
  }
  .dark .prose, .midnight-blue .prose, .sandstone .prose {
    @apply text-foreground;
  }

  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    @apply font-semibold tracking-tight text-foreground;
  }
  .prose h1 { @apply text-2xl mt-8 mb-4; } 
  .prose h2 { @apply text-xl mt-7 mb-3.5; }
  .prose h3 { @apply text-lg mt-6 mb-3; }

  .prose p {
    @apply my-4; 
  }

  .prose a {
    @apply text-primary hover:text-primary/80 font-medium underline underline-offset-4 transition-colors; 
  }
  .midnight-blue .prose a { @apply text-blue-400 hover:text-blue-300; }
  .sandstone .prose a { @apply text-orange-700 hover:text-orange-800; }

  .prose strong { @apply font-semibold text-foreground; }

  .prose blockquote {
    @apply pl-5 py-3 italic border-l-[5px] border-border bg-muted/20 text-muted-foreground my-5 rounded-r-md shadow-sm; 
  }
  .dark .prose blockquote { @apply border-border bg-muted/30 text-muted-foreground; }
  .midnight-blue .prose blockquote { @apply border-accent/60 bg-accent/25 text-accent-foreground/80; }
  .sandstone .prose blockquote { @apply border-accent/60 bg-accent/35 text-accent-foreground/90; }
  .prose blockquote p { @apply my-1; } 


  .prose ul, .prose ol {
    @apply my-4 pl-6 space-y-2; 
  }
  .prose ul li::marker { @apply text-muted-foreground font-semibold text-lg; } 
  .prose ol li::marker { @apply text-muted-foreground font-semibold; }
  .prose li > p { @apply my-1.5; }
  .prose ul ul, .prose ol ol, .prose ul ol, .prose ol ul {
    @apply my-2 pl-5; 
  }
  .prose li .ai-chat-code-block, .prose blockquote .ai-chat-code-block { 
    @apply my-2; 
  }


  .prose code { /* Inline code */
    @apply bg-muted/70 text-foreground font-mono text-[0.875em] px-1.5 py-1 rounded-md border border-border/50; 
  }
  .dark .prose code { @apply bg-muted/70 text-foreground border-border/50; }
  .midnight-blue .prose code { @apply bg-accent/30 text-accent-foreground/90 border-accent/40; }
  .sandstone .prose code { @apply bg-accent/40 text-accent-foreground/90 border-accent/50; }

  .prose pre code { 
    color: inherit !important;
    padding: 0 !important;
    font-size: inherit !important;
    background-color: transparent !important;
    border: none !important;
  }

  .prose kbd {
    @apply px-2.5 py-1.5 text-xs font-semibold text-foreground bg-muted border border-border rounded-md shadow-sm; 
  }
  .dark .prose kbd { @apply bg-muted/80 border-border/70; }
  .midnight-blue .prose kbd { @apply bg-accent/50 border-accent/60 text-accent-foreground; }
  .sandstone .prose kbd { @apply bg-accent/60 border-accent/70 text-accent-foreground; }

  .prose mark {
    @apply bg-yellow-300 dark:bg-yellow-600/40 text-yellow-950 dark:text-yellow-100 px-1 py-0.5 rounded; 
  }
  .midnight-blue .prose mark { @apply bg-yellow-600/50 text-yellow-50; }
  .sandstone .prose mark { @apply bg-yellow-300/80 text-yellow-950; }

  .prose table {
    @apply w-auto min-w-[50%] my-6 border-collapse border border-border text-sm rounded-lg overflow-hidden shadow-md; 
  }
  .dark .prose table { @apply border-border; }

  .prose thead { @apply border-b-2 border-border bg-muted/40; } 
  .dark .prose thead { @apply border-border bg-muted/25; }
  .midnight-blue .prose thead { @apply bg-accent/40; }
  .sandstone .prose thead { @apply bg-accent/30; }


  .prose th {
    @apply border border-border px-4 py-3 text-left font-semibold text-foreground; 
  }
  .dark .prose th { @apply text-foreground; }
  .midnight-blue .prose th { @apply text-foreground; }
  .sandstone .prose th { @apply text-foreground; }

  .prose tbody tr {
    @apply border-b border-border transition-colors hover:bg-muted/30; 
  }
  .dark .prose tbody tr { @apply border-border hover:bg-muted/20; }
  .prose tbody tr:last-child { @apply border-b-0; }
  .midnight-blue .prose tbody tr:hover { @apply hover:bg-accent/25; }
  .sandstone .prose tbody tr:hover { @apply hover:bg-accent/20; }

  .prose td {
    @apply border border-border px-4 py-3 text-left; 
  }
  .dark .prose td { @apply border-border; }

  .prose hr {
    @apply my-10 border-t-2 border-border/70; 
  }
  .dark .prose hr, .midnight-blue .prose hr, .sandstone .prose hr {
    @apply border-border/70;
  }

  .prose dl { @apply my-5; }
  .prose dt { @apply font-semibold mt-4 mb-1 text-foreground; }
  .prose dd { @apply pl-6 mb-2 text-muted-foreground; }
  .midnight-blue .prose dd { @apply text-accent-foreground/70; }
  .sandstone .prose dd { @apply text-accent-foreground/80; }
  .prose dd + dt { @apply mt-3; } 

  .prose sub, .prose sup {
    @apply text-[0.75em] align-baseline relative leading-none; 
  }
  .prose sub { @apply -bottom-[0.2em]; }
  .prose sup { @apply -top-[0.4em]; }


  .ai-action-delimiter { @apply block font-mono text-xs px-2 py-1 rounded-sm my-1; }
  .ai-action-delimiter-start { @apply bg-blue-100 text-blue-700 dark:bg-blue-900/50 dark:text-blue-300 border border-blue-300 dark:border-blue-700; }
  .midnight-blue .ai-action-delimiter-start { @apply bg-sky-800/50 text-sky-300 border-sky-700; }
  .sandstone .ai-action-delimiter-start { @apply bg-orange-100 text-orange-700 border-orange-300; }
  .ai-action-delimiter-end { @apply bg-gray-100 text-gray-600 dark:bg-gray-700/50 dark:text-gray-300 border border-gray-300 dark:border-gray-600; }
  .midnight-blue .ai-action-delimiter-end { @apply bg-slate-700/50 text-slate-300 border-slate-600; }
  .sandstone .ai-action-delimiter-end { @apply bg-stone-200 text-stone-600 border-stone-400; }

  .ai-action-progress-bar-container { @apply my-4 p-3 border border-border rounded-lg bg-muted/30; }
  .ai-action-step { @apply flex items-start space-x-3 py-2.5 border-b border-border/50; }
  .ai-action-progress-bar-container .ai-action-step:last-child { @apply border-b-0 pb-1; }
  .ai-action-step.step-active { @apply bg-accent/30 -mx-3 px-3 rounded-md; }
  .ai-action-step-indicator-wrapper { @apply flex flex-col items-center pt-0.5; }
  .ai-action-step-icon { @apply h-5 w-5 text-primary shrink-0; }
  .ai-action-step-status-icon { @apply h-5 w-5 shrink-0; }
  .ai-action-step-status-icon.status-pending { @apply text-muted-foreground animate-spin; }
  .ai-action-step-status-icon.status-success { @apply text-success; }
  .ai-action-step-status-icon.status-error { @apply text-destructive; }
  .ai-action-step-status-icon.status-idle { @apply text-muted-foreground opacity-50; }
  .ai-action-step-content { @apply flex-1 min-w-0; }
  .ai-action-step-description { @apply text-sm font-medium text-foreground; }
  .ai-action-step-description.description-completed { @apply text-muted-foreground line-through; }
  .ai-action-command-box { @apply mt-1.5 p-2.5 bg-background border border-border rounded-md text-xs font-mono text-foreground whitespace-pre-wrap break-all; }
  .dark .ai-action-command-box { @apply bg-muted/40 border-border; }
  .midnight-blue .ai-action-command-box { @apply bg-slate-800/60 border-slate-700; }
  .sandstone .ai-action-command-box { @apply bg-stone-100 border-stone-300; }
  .ai-action-file-details { @apply mt-1 text-xs text-muted-foreground italic; }
  .ai-action-file-details code { @apply bg-transparent p-0 font-normal text-muted-foreground; }
  .ai-action-error-message { @apply mt-1 text-xs text-destructive bg-destructive/10 p-2 rounded-md; }

  /* Styles for AI Live Preview Blocks */
  .ai-live-preview-block {
    @apply my-6 p-4 border border-dashed border-primary/50 rounded-lg bg-background shadow-md;
    /* Add any specific container styling you want for these blocks */
  }

  .dark .ai-live-preview-block {
    @apply border-primary/40;
  }
  
  .midnight-blue .ai-live-preview-block {
    @apply border-sky-500/50 bg-slate-800/30;
  }

  .sandstone .ai-live-preview-block {
    @apply border-orange-500/50 bg-orange-50/30;
  }

  /* Attempt to reset some prose styles that might interfere with live preview content */
  .ai-live-preview-block p,
  .ai-live-preview-block div,
  .ai-live-preview-block button,
  .ai-live-preview-block input,
  .ai-live-preview-block select,
  .ai-live-preview-block textarea,
  .ai-live-preview-block span, /* Added span for more coverage */
  .ai-live-preview-block label { /* Added label */
    margin: revert;
    padding: revert;
    font-size: revert;
    line-height: revert;
    color: revert; /* Allows the preview's own styles or theme variables to take precedence */
    font-weight: revert;
    font-style: revert;
    text-decoration: revert;
    border: revert; /* Revert border if prose adds it */
    background-color: revert; /* Revert background if prose adds it */
  }
  /* Provide some very basic default styling for buttons inside live previews if they don't style themselves */
  .ai-live-preview-block button:not([style*="background-color"]):not([class*="bg-"]) {
    @apply bg-primary text-primary-foreground hover:bg-primary/90 px-3 py-1.5 rounded-md text-sm;
  }
}

/* Live string highlighting during typing */
.live-string-double,
.live-string-single,
.live-string-backtick {
  color: hsl(var(--code-string));
}

.prose .live-string-double,
.prose .live-string-single,
.prose .live-string-backtick {
  color: hsl(var(--code-string)) !important;
  background-color: transparent !important;
  padding: 0 !important;
  font-family: inherit !important;
  font-size: inherit !important;
  border-radius: 0 !important;
}

/* Live math highlighting during typing */
.live-math-inline-content,
.live-math-block-content {
  color: hsl(var(--code-number)); /* Using code-number color (orange-ish) as an example */
  /* font-style: italic; */ /* Optional: make it italic */
}
.live-math-inline-delimiter,
.live-math-block-delimiter {
  color: hsl(var(--code-number) / 0.7); /* Make delimiters slightly less prominent */
}

.prose .live-math-inline-content,
.prose .live-math-block-content,
.prose .live-math-inline-delimiter,
.prose .live-math-block-delimiter {
  background-color: transparent !important;
  padding: 0 !important;
  font-family: inherit !important; /* Use surrounding font during typing */
  font-size: inherit !important;
  border-radius: 0 !important;
}
.prose .live-math-inline-content,
.prose .live-math-block-content {
  color: hsl(var(--code-number)) !important; 
}
.prose .live-math-inline-delimiter,
.prose .live-math-block-delimiter {
  color: hsl(var(--code-number) / 0.7) !important;
}


.prose :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)){
  color: var(--tw-prose-pre-code);
  background-color: transparent !important;
 }

--- File: app\layout.tsx ---
// app/layout.tsx
import type React from "react"
import type { Metadata } from "next"
import { Inter, JetBrains_Mono } from "next/font/google"
import "./globals.css"
import "katex/dist/katex.min.css"
import { ThemeProvider } from "@/components/theme-provider"
import { SonnerToaster as Toaster } from "@/components/ui"; // Updated import for SonnerToaster

const inter = Inter({ subsets: ["latin"], variable: "--font-inter" })
const jetbrainsMono = JetBrains_Mono({
  subsets: ["latin"],
  variable: "--font-jetbrains",
})

export const metadata: Metadata = {
  title: "AI Coding Assistant",
  description: "A modern IDE with AI assistance for coding",
  generator: 'v0.dev'
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${inter.variable} ${jetbrainsMono.variable} font-sans`}>
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
          themes={['light', 'dark', 'system', 'midnight-blue', 'sandstone']}
        >
          <Toaster /> {/* This will now use the SonnerToaster from components/ui/feedback.tsx */}
          {children}
        </ThemeProvider>
      </body>
    </html>
  )
}

--- File: app\page.tsx ---
// app/page.tsx
"use client"

import { useState, useCallback, useRef } from "react"
import { Resizable as CustomResizable } from "@/components/resizable" // Your custom Resizable
import Sidebar from "@/components/sidebar"
import EditorArea, { type EditorAreaRef } from "@/components/editor-area"
import Terminal, { type TerminalRef } from "@/components/terminal"
import type { CodeFile } from "@/types/file"
import { type EditorTheme } from "@/components/code-editor";

export default function Home() {
  const [terminalVisible, setTerminalVisible] = useState(true)
  const [activeFile, setActiveFile] = useState<CodeFile | null>(null)
  const [editorTypingTarget, setEditorTypingTarget] = useState<{ path: string; content: string; onComplete: () => void } | null>(null);
  const [isTerminalInputDisabled, setIsTerminalInputDisabled] = useState(false);


  const editorAreaRef = useRef<EditorAreaRef>(null);
  const terminalRef = useRef<TerminalRef>(null);

  const [selectedEditorTheme, setSelectedEditorTheme] = useState<EditorTheme | undefined>(undefined);
  const [selectedTerminalTheme, setSelectedTerminalTheme] = useState<string | undefined>(undefined);


  const handleFileContentChange = useCallback((fileIdOrPath: string, newContent: string) => {
    setActiveFile(prev => {
      if (prev && (prev.id === fileIdOrPath || prev.path === fileIdOrPath)) {
        return { ...prev, content: newContent };
      }
      return prev;
    });
  }, []);


  const toggleTerminal = () => {
    setTerminalVisible(!terminalVisible)
  }

  const terminalWorkingDirectory = "my_project";

  const triggerEditorAreaRefresh = useCallback(() => {
    editorAreaRef.current?.triggerFileTreeRefresh();
  }, []);


  const handleAiOpenFileInEditor = useCallback(async (filePath: string) => {
    if (editorAreaRef.current) {
      const fileItem = { name: filePath.split('/').pop() || filePath, path: filePath, isDirectory: false, id: filePath };
      await editorAreaRef.current.handleFileSelectProgrammatic(fileItem);
    }
    setEditorTypingTarget(null);
  }, []);

  const handleAiEditorTypingComplete = useCallback((filePath: string) => {
    if (editorTypingTarget && editorTypingTarget.path === filePath && editorTypingTarget.onComplete) {
      editorTypingTarget.onComplete();
    }
    setEditorTypingTarget(null);
  }, [editorTypingTarget]);

  const handleAiExecuteTerminalCommand = useCallback(async (command: string): Promise<{ success: boolean; output: string }> => {
    if (isTerminalInputDisabled) {
      console.warn("[Home Page] AI tried to execute terminal command while input is disabled by user setting.");
      return { success: false, output: "Terminal input is currently disabled by user setting." };
    }
    if (terminalRef.current) {
      if (!terminalVisible) setTerminalVisible(true); 
      return await terminalRef.current.executeExternalCommand(command);
    }
    return { success: false, output: "Terminal not available." };
  }, [terminalVisible, isTerminalInputDisabled]);


  return (
    <div className="h-screen flex flex-col bg-background text-foreground">
      <div className="flex flex-1 overflow-hidden">
        <CustomResizable // Use your custom Resizable
          direction="horizontal"
          initialSize={350} 
          minSize={250}
          maxSize={1000} 
          resizerSide="right"
          className="border-r border-border flex flex-col" 
        >
          <Sidebar
            onRefreshFileTree={triggerEditorAreaRefresh}
            onAiOpenFileInEditor={handleAiOpenFileInEditor}
            onAiExecuteTerminalCommand={handleAiExecuteTerminalCommand}
            setSelectedEditorTheme={setSelectedEditorTheme}
            setSelectedTerminalTheme={setSelectedTerminalTheme}
            currentEditorTheme={selectedEditorTheme}
            currentTerminalTheme={selectedTerminalTheme}
            isTerminalInputDisabled={isTerminalInputDisabled}
            setIsTerminalInputDisabled={setIsTerminalInputDisabled}
          />
        </CustomResizable>

        <div className="flex-1 flex flex-col overflow-hidden">
          <EditorArea
            ref={editorAreaRef}
            activeFile={activeFile}
            setActiveFile={setActiveFile}
            onFileContentChange={handleFileContentChange}
            toggleTerminal={toggleTerminal}
            selectedEditorTheme={selectedEditorTheme}
            rootDirectoryName={terminalWorkingDirectory}
            editorTypingTarget={editorTypingTarget}
            onEditorTypingComplete={handleAiEditorTypingComplete}
          />

          {terminalVisible && (
            <CustomResizable // Use your custom Resizable
              direction="vertical"
              initialSize={200} 
              minSize={100}
              maxSize="40vh" 
              resizerSide="top"
              className="border-t border-border overflow-hidden" 
            >
              <Terminal
                ref={terminalRef}
                theme={selectedTerminalTheme}
                workingDirectory={terminalWorkingDirectory}
                isInputDisabledBySetting={isTerminalInputDisabled}
              />
            </CustomResizable>
          )}
        </div>
      </div>
    </div>
  )
}

--- File: app\api\files\route.ts ---
// app/api/files/route.ts
import { NextResponse } from 'next/server';
import fs from 'fs/promises';
import path from 'path';
import type { CodeFile, FileTreeItem } from '@/types/file';

const ROOT_PROJECT_DIR = 'my_project';
const projectRootPath = path.resolve(process.cwd(), ROOT_PROJECT_DIR);

interface ApiFileEntry {
  id: string;
  name: string;
  path: string;
  isDirectory: boolean;
  children?: ApiFileEntry[];
  content?: string;
  language?: string;
}

async function getFileLanguage(filePath: string): Promise<string> {
  const extension = path.extname(filePath).toLowerCase().substring(1);
  switch (extension) {
    case 'js': return 'javascript';
    case 'ts': return 'typescript';
    case 'html': return 'html';
    case 'css': return 'css';
    case 'json': return 'json';
    case 'md': return 'markdown';
    case 'py': return 'python';
    case 'txt': return 'plaintext';
    default: return 'plaintext';
  }
}

async function readDirectoryRecursive(dirPath: string, relativePathBase: string = ""): Promise<ApiFileEntry[]> {
  const functionStartTime = Date.now();
  console.log(`[API Files DEBUG] readDirectoryRecursive START for dirPath: "${dirPath}", relativePathBase: "${relativePathBase}"`);

  try {
    await fs.access(dirPath);
  } catch (e) {
    if ((e as NodeJS.ErrnoException).code === 'ENOENT') {
      if (dirPath === projectRootPath) {
        try {
          await fs.mkdir(projectRootPath, { recursive: true });
          console.log(`[API Files DEBUG] Created missing project root directory: ${projectRootPath}`);
        } catch (mkdirError) {
          console.error(`[API Files DEBUG] Failed to create project root directory ${projectRootPath}:`, mkdirError);
          return [];
        }
      } else {
        console.warn(`[API Files DEBUG] Directory not found (not creating): ${dirPath}`);
        return [];
      }
    } else {
      console.error(`[API Files DEBUG] Error accessing directory ${dirPath}:`, e);
      throw e;
    }
  }

  let entries;
  try {
    entries = await fs.readdir(dirPath, { withFileTypes: true });
  } catch (readdirError) {
    console.error(`[API Files DEBUG] Error reading directory contents for ${dirPath}:`, readdirError);
    return []; // Return empty if we can't read the directory
  }
  
  console.log(`[API Files DEBUG] Found ${entries.length} entries in "${dirPath}"`);
  const filesAndFolders: ApiFileEntry[] = [];

  for (const entry of entries) {
    const entryProcessingStartTime = Date.now();
    // Explicitly skip common large/irrelevant directories
    if (entry.name === 'node_modules' || entry.name === '.git' || entry.name === '.next' || entry.name === 'out' || entry.name === 'build') {
        console.log(`[API Files DEBUG] SKIPPING common large directory: "${entry.name}" in "${dirPath}"`);
        continue;
    }

    const entryAbsolutePath = path.join(dirPath, entry.name);
    const entryRelativePath = path.join(relativePathBase, entry.name).replace(/\\/g, '/');

    if (entry.isDirectory()) {
      console.log(`[API Files DEBUG] Processing subdirectory: "${entryAbsolutePath}"`);
      filesAndFolders.push({
        id: entryRelativePath,
        name: entry.name,
        path: entryRelativePath,
        isDirectory: true,
        children: await readDirectoryRecursive(entryAbsolutePath, entryRelativePath),
      });
    } else {
      filesAndFolders.push({
        id: entryRelativePath,
        name: entry.name,
        path: entryRelativePath,
        isDirectory: false,
        language: await getFileLanguage(entry.name),
      });
    }
    console.log(`[API Files DEBUG] Processed entry "${entry.name}" in ${Date.now() - entryProcessingStartTime}ms`);
  }

  filesAndFolders.sort((a, b) => {
    if (a.isDirectory && !b.isDirectory) return -1;
    if (!a.isDirectory && b.isDirectory) return 1;
    return a.name.localeCompare(b.name);
  });
  console.log(`[API Files DEBUG] readDirectoryRecursive END for dirPath: "${dirPath}" in ${Date.now() - functionStartTime}ms`);
  return filesAndFolders;
}

export async function GET(request: Request) {
  const overallStartTime = Date.now();
  console.log(`[API Files GET] Request received at ${new Date(overallStartTime).toISOString()}`);
  const { searchParams } = new URL(request.url);
  const filePathParam = searchParams.get('path');

  try {
    if (filePathParam) {
      const fullFilePath = path.join(projectRootPath, filePathParam);
      if (!fullFilePath.startsWith(projectRootPath)) {
        console.warn(`[API Files GET] Invalid file path requested (path traversal attempt): ${filePathParam}`);
        return NextResponse.json({ error: 'Invalid file path requested.' }, { status: 400 });
      }
      try {
        const content = await fs.readFile(fullFilePath, 'utf-8');
        const language = await getFileLanguage(filePathParam);
        console.log(`[API Files GET] File content for '${filePathParam}' served in ${Date.now() - overallStartTime}ms`);
        return NextResponse.json({
          id: filePathParam,
          name: path.basename(filePathParam),
          path: filePathParam,
          content,
          language,
          isDirectory: false,
        } as CodeFile);
      } catch (error) {
        console.error(`[API Files GET] Error reading file ${filePathParam}:`, error);
        return NextResponse.json({ error: `File not found or unreadable: ${filePathParam}` }, { status: 404 });
      }
    } else {
      console.log(`[API Files GET] Starting to read directory structure for project root: ${projectRootPath}`);
      const structure = await readDirectoryRecursive(projectRootPath);
      console.log(`[API Files GET] Directory structure served in ${Date.now() - overallStartTime}ms`);
      return NextResponse.json(structure);
    }
  } catch (error) {
    console.error(`[API Files GET] Error in GET handler after ${Date.now() - overallStartTime}ms:`, error);
    return NextResponse.json({ error: "Failed to process file/directory request." }, { status: 500 });
  }
}

// POST function remains the same
export async function POST(request: Request) {
  const { targetPath: relativePath, content, type } = await request.json();

  if (!relativePath || typeof relativePath !== 'string') {
    return NextResponse.json({ error: 'Invalid targetPath provided.' }, { status: 400 });
  }
  if (!type || typeof type !== 'string' || !['createFile', 'createFolder'].includes(type)) {
    return NextResponse.json({ error: 'Invalid type provided. Must be "createFile" or "createFolder".' }, { status: 400 });
  }

  if (type === 'createFile' && typeof content !== 'string') {
    return NextResponse.json({ error: 'Content is required and must be a string for file creation.' }, { status: 400 });
  }

  const fullPath = path.join(projectRootPath, relativePath);

  if (!fullPath.startsWith(projectRootPath)) {
    return NextResponse.json({ error: 'Invalid file path requested (path traversal attempt).' }, { status: 400 });
  }

  try {
    // Ensure parent directory exists for file creation or folder creation
    const parentDir = path.dirname(fullPath);
    // Create parent directory only if it's not the project root itself
    if (parentDir !== projectRootPath && parentDir !== fullPath) await fs.mkdir(parentDir, { recursive: true });

    if (type === 'createFolder') {
      await fs.mkdir(fullPath, { recursive: true });
      return NextResponse.json({ message: `Directory created: ${relativePath}` }, { status: 201 });
    } else { // type === 'createFile'
      await fs.writeFile(fullPath, content || '');
      return NextResponse.json({ message: `File created/updated: ${relativePath}` }, { status: 201 });
    }
  } catch (error: any) {
    console.error(`Error creating ${type === 'createFolder' ? 'directory' : 'file'} ${relativePath}:`, error);
    return NextResponse.json({ error: `Failed to create ${type === 'createFolder' ? 'directory' : 'file'}: ${error.message}` }, { status: 500 });
  }
}

--- File: app\api\search\route.ts ---
// app/api/search/route.ts
import { NextRequest, NextResponse } from 'next/server';

// IMPORTANT: Use environment variables in a real application!
const GOOGLE_SEARCH_API_KEY = process.env.GOOGLE_SEARCH_API_KEY || "YOUR_GOOGLE_CSE_API_KEY_FALLBACK";
const GOOGLE_SEARCH_ENGINE_ID = process.env.GOOGLE_SEARCH_ENGINE_ID || "YOUR_GOOGLE_CSE_ID_FALLBACK";

interface SearchResultItem {
  title: string;
  link: string;
  snippet: string;
  pagemap?: {
    metatags?: Array<{
      [key: string]: string;
    }>;
  };
}

interface GoogleSearchResponse {
  items?: SearchResultItem[];
  error?: {
    code: number;
    message: string;
  };
  searchInformation?: {
    formattedTotalResults?: string;
    formattedSearchTime?: string;
  };
}

export async function POST(req: NextRequest) {
  if (!GOOGLE_SEARCH_API_KEY || GOOGLE_SEARCH_API_KEY === "YOUR_GOOGLE_CSE_API_KEY_FALLBACK") {
    console.error("Google Search API Key is not configured.");
    return NextResponse.json({ error: "Search service is not configured (API Key missing)." }, { status: 500 });
  }
  if (!GOOGLE_SEARCH_ENGINE_ID || GOOGLE_SEARCH_ENGINE_ID === "YOUR_GOOGLE_CSE_ID_FALLBACK") {
    console.error("Google Search Engine ID is not configured.");
    return NextResponse.json({ error: "Search service is not configured (Engine ID missing)." }, { status: 500 });
  }

  try {
    const body = await req.json();
    const query = body.query;

    if (!query || typeof query !== 'string') {
      return NextResponse.json({ error: 'Search query is required and must be a string.' }, { status: 400 });
    }

    const searchUrl = `https://www.googleapis.com/customsearch/v1?key=${GOOGLE_SEARCH_API_KEY}&cx=${GOOGLE_SEARCH_ENGINE_ID}&q=${encodeURIComponent(query)}&num=5`;

    console.log(`[API Search] Performing search for: "${query}"`);
    const searchResponse = await fetch(searchUrl);

    if (!searchResponse.ok) {
      const errorData: GoogleSearchResponse = await searchResponse.json().catch(() => ({}));
      console.error(`[API Search] Google Search API error: ${searchResponse.status}`, errorData);
      const message = errorData.error?.message || `Google Search API request failed with status ${searchResponse.status}`;
      return NextResponse.json({ error: `Search failed: ${message}` }, { status: searchResponse.status });
    }

    const searchData: GoogleSearchResponse = await searchResponse.json();

    if (searchData.error) {
        console.error(`[API Search] Google Search API returned an error object:`, searchData.error);
        return NextResponse.json({ error: `Search API error: ${searchData.error.message}` }, { status: searchData.error.code || 500 });
    }

    const formattedResults = searchData.items?.map(item => ({
      title: item.title,
      link: item.link,
      snippet: item.snippet,
      description: item.pagemap?.metatags?.find(tag => tag['og:description'])?.['og:description'] || item.snippet,
    })) || [];

    console.log(`[API Search] Found ${formattedResults.length} results for "${query}".`);
    return NextResponse.json({ results: formattedResults, searchInformation: searchData.searchInformation });

  } catch (error: any) {
    console.error('[API Search] Internal error:', error);
    return NextResponse.json({ error: `An internal error occurred: ${error.message}` }, { status: 500 });
  }
}

--- File: app\api\terminal\route.ts ---
// app/api/terminal/route.ts
import { NextRequest, NextResponse } from 'next/server';
import { spawn, ChildProcessWithoutNullStreams, SpawnOptionsWithoutStdio } from 'child_process';
import path from 'path';
import fs from 'fs';

const ROOT_PROJECT_DIR_NAME = 'my_project';
const projectWorkingDirectory = path.resolve(process.cwd(), ROOT_PROJECT_DIR_NAME);

// THIS IS THE CRITICAL PATH - Ensure it's correct for your setup
const relativePwshPath = path.join('powershell', 'pwsh7.5', 'pwsh.exe');
const absolutePwshPath = path.resolve(process.cwd(), relativePwshPath);

interface Session {
  process: ChildProcessWithoutNullStreams;
  buffer: string;
  isProcessing: boolean;
  commandQueue: string[];
  currentCommandCallback: ((output: { output: string; currentPath: string; error?: string | null }) => void) | null;
  processReady: Promise<void>;
  resolveProcessReady: () => void;
  rejectProcessReady: (reason?: any) => void;
}

const sessions: { [key: string]: Session } = {};
const PROMPT_DELIMITER = "END_OF_PROMPT_UNIQUE_STRING_DELIMITER_V1_XYZ";
const initialPromptSetupDelay = 2000; // ms to wait for initial prompt setup

function ensureSession(sessionId: string): Session | null {
  if (sessions[sessionId]) {
    console.log(`[API Terminal ${sessionId}] Reusing existing session.`);
    return sessions[sessionId];
  }

  console.log(`[API Terminal ${sessionId}] Attempting to create new session.`);
  console.log(`[API Terminal ${sessionId}] Resolved PowerShell Executable Path: ${absolutePwshPath}`);
  console.log(`[API Terminal ${sessionId}] Resolved Project Working Directory: ${projectWorkingDirectory}`);

  if (!fs.existsSync(absolutePwshPath)) {
    const errorMsg = `PowerShell executable NOT FOUND at resolved path: ${absolutePwshPath}. Relative path used: ${relativePwshPath}. Ensure pwsh.exe is at this location relative to your project root.`;
    console.error(`[API Terminal ${sessionId}] ${errorMsg}`);
    return null;
  }
  console.log(`[API Terminal ${sessionId}] PowerShell executable confirmed to exist at: ${absolutePwshPath}`);


  if (!fs.existsSync(projectWorkingDirectory)) {
    try {
      fs.mkdirSync(projectWorkingDirectory, { recursive: true });
      console.log(`[API Terminal ${sessionId}] Created project working directory at: ${projectWorkingDirectory}`);
    } catch (err) {
      const errorMsg = `Failed to create project working directory '${projectWorkingDirectory}': ${(err as Error).message}`;
      console.error(`[API Terminal ${sessionId}] ${errorMsg}`);
      return null;
    }
  }
  console.log(`[API Terminal ${sessionId}] Project working directory confirmed at: ${projectWorkingDirectory}`);


  let pwsh: ChildProcessWithoutNullStreams;
  const spawnOptions: SpawnOptionsWithoutStdio = {
      cwd: projectWorkingDirectory, // PowerShell will start in this directory
      shell: false,
      windowsHide: true,
      env: { ...process.env },
  };

  try {
    console.log(`[API Terminal ${sessionId}] Attempting to spawn PowerShell with command: "${absolutePwshPath}" and options:`, JSON.stringify(spawnOptions));
    // Arguments for PowerShell:
    // -NoLogo: Suppresses the copyright banner at startup.
    // -NoProfile: Does not load the current user's PowerShell profile.
    // -NonInteractive: Does not present an interactive prompt to the user. Commands are expected via stdin.
    // -NoExit: Keeps PowerShell running after initial commands (important for a persistent session).
    pwsh = spawn(absolutePwshPath, ['-NoLogo', '-NoProfile', '-NonInteractive', '-NoExit'], spawnOptions);
    console.log(`[API Terminal ${sessionId}] PowerShell process spawn initiated. PID: ${pwsh.pid ?? 'N/A'}`);
  } catch (spawnError: any) {
    const errorMsg = `Synchronous error during spawn of PowerShell process from '${absolutePwshPath}': ${spawnError.message}. Code: ${spawnError.code}, Errno: ${spawnError.errno}, Syscall: ${spawnError.syscall}`;
    console.error(`[API Terminal ${sessionId}] ${errorMsg}`, spawnError);
    return null;
  }

  let resolveProcessReady!: () => void;
  let rejectProcessReady!: (reason?: any) => void;
  const processReadyPromise = new Promise<void>((resolve, reject) => {
    resolveProcessReady = resolve;
    rejectProcessReady = reject;
  });

  const newSession: Session = {
    process: pwsh,
    buffer: '',
    isProcessing: true,
    commandQueue: [],
    currentCommandCallback: null,
    processReady: processReadyPromise,
    resolveProcessReady,
    rejectProcessReady,
  };
  sessions[sessionId] = newSession;

  let initialPromptSent = false;
  const initialPromptTimeout = setTimeout(() => {
    if (!initialPromptSent && sessions[sessionId] && sessions[sessionId].process.stdin.writable) {
        console.log(`[API Terminal ${sessionId}] Sending initial prompt command (after ${initialPromptSetupDelay}ms timeout).`);
        // This command gets the current path and then writes our unique delimiter.
        sessions[sessionId].process.stdin.write(`Write-Host -NoNewline ((Get-Location).Path); Write-Host "\`n${PROMPT_DELIMITER}";\n`);
        initialPromptSent = true;
    } else if (!initialPromptSent && sessions[sessionId]) {
        const warnMsg = `[API Terminal ${sessionId}] Initial prompt: stdin not writable after ${initialPromptSetupDelay}ms timeout. Process might have exited or failed to start correctly.`;
        console.warn(warnMsg);
        sessions[sessionId].rejectProcessReady(new Error(warnMsg));
    }
  }, initialPromptSetupDelay);


  pwsh.stdout.on('data', (data: Buffer) => {
    const session = sessions[sessionId];
    if (session) {
      const outputStr = data.toString();
      session.buffer += outputStr;
      // console.log(`[API Terminal ${sessionId}] STDOUT raw chunk:`, outputStr.replace(/\n/g, '\\n'));
      if (!initialPromptSent && session.buffer.includes(PROMPT_DELIMITER)) {
          clearTimeout(initialPromptTimeout);
          initialPromptSent = true;
          console.log(`[API Terminal ${sessionId}] Initial prompt delimiter received from STDOUT. Resolving process readiness.`);
          session.resolveProcessReady();
      }
      processBufferedOutput(sessionId);
    }
  });

  pwsh.stderr.on('data', (data: Buffer) => {
    const session = sessions[sessionId];
    if (session) {
      const stderrMsg = data.toString();
      console.error(`[API Terminal ${sessionId}] STDERR raw chunk:`, stderrMsg.replace(/\n/g, '\\n'));
      session.buffer += `\n[ERROR_STREAM_OUTPUT] ${stderrMsg}`; // Prepend to distinguish
       if (!initialPromptSent && stderrMsg.length > 0) {
          clearTimeout(initialPromptTimeout);
          initialPromptSent = true;
          const errorForReject = `PowerShell process emitted to STDERR during startup: ${stderrMsg.substring(0,100)}`;
          console.error(`[API Terminal ${sessionId}] ${errorForReject}. Rejecting process readiness.`);
          session.rejectProcessReady(new Error(errorForReject));
      }
      processBufferedOutput(sessionId); // Process even if it's an error, to send back to client
    }
  });

  pwsh.on('error', (err) => {
    const errorMsg = `PowerShell process emitted 'error' event: ${err.message}. Code: ${(err as any).code}`;
    console.error(`[API Terminal ${sessionId}] ${errorMsg}`, err);
    const session = sessions[sessionId];
    if (session) {
      clearTimeout(initialPromptTimeout);
      session.rejectProcessReady(err);
      if (session.currentCommandCallback) {
        session.currentCommandCallback({
          output: '',
          currentPath: projectWorkingDirectory, // Fallback path
          error: errorMsg,
        });
      }
      delete sessions[sessionId];
    }
  });

  pwsh.on('exit', (code, signal) => {
    const exitMsg = `PowerShell process exited with code ${code}, signal ${signal}.`;
    console.log(`[API Terminal ${sessionId}] ${exitMsg}`);
    const session = sessions[sessionId];
    if (session) {
      clearTimeout(initialPromptTimeout);
      session.rejectProcessReady(new Error(exitMsg));
      if (session.currentCommandCallback) {
        session.currentCommandCallback({
          output: `PowerShell process exited. Code: ${code}, Signal: ${signal}.`,
          currentPath: projectWorkingDirectory, // Fallback path
          error: `Process exited.`,
        });
      }
      delete sessions[sessionId];
    }
  });
  
  pwsh.on('spawn', () => {
      console.log(`[API Terminal ${sessionId}] PowerShell process 'spawn' event received. PID: ${pwsh.pid}. Stdin writable: ${pwsh.stdin.writable}`);
      if (!initialPromptSent && pwsh.stdin.writable) {
          clearTimeout(initialPromptTimeout);
          console.log(`[API Terminal ${sessionId}] Sending initial prompt command (on 'spawn' event).`);
          pwsh.stdin.write(`Write-Host -NoNewline ((Get-Location).Path); Write-Host "\`n${PROMPT_DELIMITER}";\n`);
          initialPromptSent = true;
      } else if (!initialPromptSent) {
          console.warn(`[API Terminal ${sessionId}] 'spawn' event, but stdin not writable or prompt already considered sent.`);
      }
  });

  return newSession;
}

function processBufferedOutput(sessionId: string) {
  const session = sessions[sessionId];
  if (!session || !session.currentCommandCallback) {
    // If no current command callback, it might be initial prompt output.
    // The initial prompt output should resolve session.processReady.
    // console.log(`[API Terminal ${sessionId}] processBufferedOutput: No currentCommandCallback or session. Buffer: "${session?.buffer.substring(0,50)}..."`);
    return;
  }

  // console.log(`[API Terminal ${sessionId}] processBufferedOutput: Checking buffer for delimiter. Buffer: "${session.buffer.substring(0,100)}..."`);
  const delimiterIndex = session.buffer.indexOf(PROMPT_DELIMITER);
  if (delimiterIndex !== -1) {
    console.log(`[API Terminal ${sessionId}] processBufferedOutput: Delimiter FOUND at index ${delimiterIndex}.`);
    const outputUpToDelimiter = session.buffer.substring(0, delimiterIndex);
    session.buffer = session.buffer.substring(delimiterIndex + PROMPT_DELIMITER.length); // Consume delimiter and what's before

    // The last line before the delimiter is expected to be the current path
    const lines = outputUpToDelimiter.trimEnd().split('\n');
    const pathLine = lines.pop() || ''; // Get the last line, or empty if no lines
    const actualOutput = lines.join('\n').trim(); // Join the rest as actual output

    console.log(`[API Terminal ${sessionId}] Output processed. Path: "${pathLine.trim()}", Output Preview: "${actualOutput.substring(0,50)}..."`);

    session.currentCommandCallback({
      output: actualOutput,
      currentPath: pathLine.trim() ? pathLine.trim() : projectWorkingDirectory, // Fallback to initial CWD
      error: actualOutput.includes("[ERROR_STREAM_OUTPUT]") ? "Error in script execution (see output for details)" : null,
    });
    session.currentCommandCallback = null;
    session.isProcessing = false;
    processCommandQueue(sessionId); // Check if more commands are queued
  } else {
    // console.log(`[API Terminal ${sessionId}] processBufferedOutput: Delimiter NOT YET FOUND in buffer.`);
  }
}

async function processCommandQueue(sessionId: string) {
  const session = sessions[sessionId];
  if (!session || session.isProcessing || session.commandQueue.length === 0) {
    return;
  }

  console.log(`[API Terminal ${sessionId}] processCommandQueue: Attempting to process next command. Queue length: ${session.commandQueue.length}`);
  try {
    console.log(`[API Terminal ${sessionId}] processCommandQueue: Awaiting processReady promise.`);
    await session.processReady;
    console.log(`[API Terminal ${sessionId}] Process is ready, proceeding with command queue.`);
  } catch (err: any) {
    console.error(`[API Terminal ${sessionId}] Process failed to become ready: ${err.message}. Aborting command queue.`);
    const commandQueueItem = session.commandQueue.shift();
    if (commandQueueItem) {
        const { callback } = JSON.parse(commandQueueItem); // Assuming callback is stored correctly
        callback({ output: '', currentPath: projectWorkingDirectory, error: `PowerShell session failed to initialize: ${err.message}` });
    }
    session.commandQueue = [];
    session.isProcessing = false;
    delete sessions[sessionId];
    return;
  }


  session.isProcessing = true;
  const commandQueueItem = session.commandQueue.shift();
  if (!commandQueueItem) {
    session.isProcessing = false;
    return;
  }

  // Assuming callback is correctly stringified and parsed
  const { command, callback } = JSON.parse(commandQueueItem);
  session.currentCommandCallback = callback;

  // Command to get path and delimiter, appended after the user's command
  const commandToWrite = `${command}\nWrite-Host -NoNewline ((Get-Location).Path); Write-Host "\`n${PROMPT_DELIMITER}"\n`;
  console.log(`[API Terminal ${sessionId}] Writing command to stdin: ${command.substring(0,50)}...`);

  if (session.process.stdin.writable) {
    session.process.stdin.write(commandToWrite);
  } else {
    const errorMsg = 'PowerShell process stdin not writable when trying to execute command.';
    console.error(`[API Terminal ${sessionId}] ${errorMsg}`);
    if(session.currentCommandCallback) { // Check if callback still exists
        session.currentCommandCallback({ output: '', currentPath: projectWorkingDirectory, error: errorMsg });
        session.currentCommandCallback = null; // Clear it after use
    }
    session.isProcessing = false;
    // Consider if session should be deleted here if stdin is permanently unwritable
  }
}

export async function POST(req: NextRequest) {
  let sessionIdFromBody = 'unknown_session_in_post_error'; // Default for error logging
  try {
    const body = await req.json();
    sessionIdFromBody = body.sessionId || 'unknown_session_in_post_body';
    const { command } = body;

    if (typeof command !== 'string' || typeof sessionIdFromBody !== 'string') {
      console.error(`[API Terminal POST ${sessionIdFromBody}] Invalid request: command or sessionId missing/not strings. Command: ${command}, SessionID: ${sessionIdFromBody}`);
      return NextResponse.json({ error: 'Command and sessionId must be strings.' }, { status: 400 });
    }
    console.log(`[API Terminal POST ${sessionIdFromBody}] Received command: "${command.substring(0,50)}..."`);


    let session = sessions[sessionIdFromBody];
    if (!session) {
      console.log(`[API Terminal POST ${sessionIdFromBody}] No existing session found, creating new one.`);
      session = ensureSession(sessionIdFromBody);
      if (!session) {
        const errorMsg = `Failed to create PowerShell session for ID: ${sessionIdFromBody}. Check server logs. Path tried: '${absolutePwshPath}'.`;
        console.error(`[API Terminal POST ${sessionIdFromBody}] ${errorMsg}`);
        return NextResponse.json({ output: null, currentPath: projectWorkingDirectory, error: errorMsg }, { status: 500 });
      }
    }
    
    return new Promise((resolve) => {
      const callback = (result: { output: string; currentPath: string; error?: string | null }) => {
        console.log(`[API Terminal POST ${sessionIdFromBody}] Command processed. Error: ${result.error}, Path: ${result.currentPath}, Output Preview: "${result.output.substring(0,50)}..."`);
        const status = result.error && !result.output && result.error !== "Error in script execution (see output for details)" ? 500 : 200;
        resolve(NextResponse.json({ output: result.output, currentPath: result.currentPath, error: result.error }, { status }));
      };
      // Stringify the object containing command and callback for the queue
      session.commandQueue.push(JSON.stringify({ command, callback: callback.toString() })); // Note: callback.toString() is problematic here.
                                                                                             // Callbacks cannot be reliably stringified and parsed back.
                                                                                             // This needs a different mechanism if callbacks are complex.
                                                                                             // For simple resolve, we might store resolve functions.
                                                                                             // Let's assume for now the callback is just for the Promise resolve.
                                                                                             // A better way is to store the resolve function of the Promise.
      
      // For this Promise-based approach, we'll store the resolve function.
      // The structure in commandQueue needs to be adjusted.
      // Let's simplify: the callback IS the resolve function.
      sessions[sessionIdFromBody].commandQueue.push(JSON.stringify({ command, callback: "placeholder_for_resolve_function" })); // Placeholder
      // The actual resolve function will be associated when processing the queue.
      // This is getting complex. Let's rethink the queue item.

      // Simpler approach: The callback IS the resolve function for THIS request's promise.
      const queueItem = { command, resolveCallback: resolve };
      sessions[sessionIdFromBody].commandQueue.push(JSON.stringify(queueItem)); // This won't work directly because resolve is a function.
                                                                              // We need to manage resolves differently.

      // --- Corrected approach for Promise and Queue ---
      // Store the resolve function directly with the command in the queue.
      // The `processCommandQueue` will then call this resolve.
      // This means `JSON.stringify` won't work for the queue if it contains functions.
      // We need to store objects with function references.

      // Let's adjust the queue to store objects directly, not stringified JSON.
      // And the callback will be the resolve function.
      (sessions[sessionIdFromBody].commandQueue as any[]).push({ command, resolvePromise: resolve });
      processCommandQueue(sessionIdFromBody);
    });

  } catch (error: any) {
    console.error(`[API Terminal POST ${sessionIdFromBody}] Unhandled error in POST handler:`, error);
    return NextResponse.json({ output: null, currentPath: projectWorkingDirectory, error: error.message || "An unknown error occurred in POST handler" }, { status: 500 });
  }
}


// Adjust processCommandQueue to handle direct function references for resolve
async function newProcessCommandQueue(sessionId: string) {
  const session = sessions[sessionId];
  if (!session || session.isProcessing || (session.commandQueue as any[]).length === 0) {
    return;
  }

  console.log(`[API Terminal ${sessionId}] newProcessCommandQueue: Attempting to process. Queue length: ${(session.commandQueue as any[]).length}`);
  try {
    await session.processReady;
  } catch (err: any) {
    console.error(`[API Terminal ${sessionId}] newProcessCommandQueue: Process failed to become ready: ${err.message}.`);
    const queuedItem = (session.commandQueue as any[]).shift();
    if (queuedItem && queuedItem.resolvePromise) {
        queuedItem.resolvePromise(NextResponse.json({ output: '', currentPath: projectWorkingDirectory, error: `PowerShell session failed to initialize: ${err.message}` }, {status: 500}));
    }
    session.commandQueue = [];
    session.isProcessing = false;
    delete sessions[sessionId];
    return;
  }

  session.isProcessing = true;
  const { command, resolvePromise } = (session.commandQueue as any[]).shift();
  
  session.currentCommandCallback = (result: { output: string; currentPath: string; error?: string | null }) => {
    const status = result.error && !result.output && result.error !== "Error in script execution (see output for details)" ? 500 : 200;
    resolvePromise(NextResponse.json({ output: result.output, currentPath: result.currentPath, error: result.error }, { status }));
  };


  const commandToWrite = `${command}\nWrite-Host -NoNewline ((Get-Location).Path); Write-Host "\`n${PROMPT_DELIMITER}"\n`;
  if (session.process.stdin.writable) {
    session.process.stdin.write(commandToWrite);
  } else {
    // ... (handle unwritable stdin as before, calling currentCommandCallback)
    if(session.currentCommandCallback) {
        session.currentCommandCallback({ output: '', currentPath: projectWorkingDirectory, error: 'PowerShell process stdin not writable.' });
        session.currentCommandCallback = null;
    }
    session.isProcessing = false;
  }
}
// Replace old processCommandQueue calls with newProcessCommandQueue
// e.g., in ensureSession's stdout/stderr handlers and in POST handler.
// This change is significant and would require careful testing.
// For now, I'll revert to the previous simpler callback logging for POST and focus on the pwsh.exe path.


export async function DELETE(req: NextRequest) {
  let sessionIdFromBody = 'unknown_session_in_delete_error';
  try {
    const body = await req.json();
    sessionIdFromBody = body.sessionId || 'unknown_session_in_delete_body';
    const session = sessions[sessionIdFromBody];
    if (session) {
      console.log(`[API Terminal DELETE ${sessionIdFromBody}] Received DELETE request. Killing process.`);
      session.process.kill();
      delete sessions[sessionIdFromBody];
    } else {
      console.log(`[API Terminal DELETE ${sessionIdFromBody}] Received DELETE request for non-existent session.`);
    }
    return NextResponse.json({ success: true });
  } catch (error: any) {
    console.error(`[API Terminal DELETE ${sessionIdFromBody}] Error:`, error);
    return NextResponse.json({ error: error.message || "Failed to delete session" }, { status: 500 });
  }
}

--- File: components\code-diff-viewer.tsx ---
// components/code-diff-viewer.tsx
"use client"

import React, { useMemo } from 'react';
import { CodeFile } from '@/types/file';
import { ScrollArea, Badge } from '@/components/ui'; // Consolidated import
import { FileText, GitCompareArrows } from 'lucide-react';
import { cn } from '@/lib/utils';

interface CodeDiffViewerProps {
  file: CodeFile | null;
  onClose?: () => void;
}

const generateDiff = (original: string, current: string) => {
  const originalLines = original.split('\n');
  const currentLines = current.split('\n');
  const maxLen = Math.max(originalLines.length, currentLines.length);
  const diffResult: Array<{ type: 'common' | 'added' | 'removed'; originalLine?: string; currentLine?: string; originalLineNum?: number; currentLineNum?: number }> = [];

  let originalLineNum = 1;
  let currentLineNum = 1;

  for (let i = 0; i < maxLen; i++) {
    const oLine = originalLines[i];
    const cLine = currentLines[i];

    if (oLine !== undefined && cLine !== undefined) {
      if (oLine === cLine) {
        diffResult.push({ type: 'common', originalLine: oLine, currentLine: cLine, originalLineNum: originalLineNum++, currentLineNum: currentLineNum++ });
      } else {
        if (oLine !== undefined) {
          diffResult.push({ type: 'removed', originalLine: oLine, originalLineNum: originalLineNum++ });
        }
        if (cLine !== undefined) {
          diffResult.push({ type: 'added', currentLine: cLine, currentLineNum: currentLineNum++ });
        }
      }
    } else if (oLine !== undefined) {
      diffResult.push({ type: 'removed', originalLine: oLine, originalLineNum: originalLineNum++ });
    } else if (cLine !== undefined) {
      diffResult.push({ type: 'added', currentLine: cLine, currentLineNum: currentLineNum++ });
    }
  }
  return diffResult;
};


const CodeDiffViewer: React.FC<CodeDiffViewerProps> = ({ file }) => {
  const originalContent = useMemo(() => {
    if (!file) return "";
    if (file.name === "example.js") {
      return "function greet(name) {\n  return `Hi, ${name}!`; // Original greeting\n}\n\nconsole.log(greet('Monaco User'));\n// An old line that was removed";
    }
    const lines = file.content.split('\n');
    if (lines.length > 2) {
      return lines.slice(0, Math.max(0, lines.length - 2)).join('\n') + "\n// Original line 1 removed for diff demo\n// Original line 2 removed for diff demo";
    }
    return file.content + "\n// Original content was slightly different for demo.";
  }, [file]);

  const diff = useMemo(() => {
    if (!file) return [];
    return generateDiff(originalContent, file.content);
  }, [file, originalContent]);

  const hasChanges = useMemo(() => diff.some(d => d.type === 'added' || d.type === 'removed'), [diff]);

  if (!file) {
    return (
      <div className="flex-1 flex flex-col items-center justify-center text-muted-foreground p-4 bg-background h-full">
        <GitCompareArrows size={48} className="mb-4 opacity-50" />
        <p>Select a file to view differences.</p>
      </div>
    );
  }

  return (
    <div className="flex flex-col h-full bg-background text-foreground">
      <div className="flex items-center justify-between p-2.5 border-b border-border shrink-0 h-11 bg-muted">
        <div className="flex items-center space-x-2">
          <GitCompareArrows size={18} className="text-muted-foreground" />
          <span className="text-sm font-medium text-foreground truncate" title={file.path}>
            {file.path}
          </span>
        </div>
        <div className="flex items-center space-x-2">
          {hasChanges ? (
            <Badge variant="destructive" className="text-xs px-2 py-0.5">Changes</Badge>
          ) : (
            <Badge variant="secondary" className="bg-green-500/20 dark:bg-green-700/50 border-green-500/40 dark:border-green-600 text-green-700 dark:text-green-300 text-xs px-2 py-0.5">No Changes</Badge>
          )}
        </div>
      </div>

      {!hasChanges ? (
        <div className="flex-1 flex flex-col items-center justify-center text-muted-foreground p-4">
          <FileText size={64} className="mb-6 opacity-30" />
          <h3 className="text-xl font-semibold text-foreground">Files are identical</h3>
          <p className="text-sm">Both versions match exactly.</p>
        </div>
      ) : (
        <div className="flex-1 flex flex-col overflow-hidden">
          <div className="px-4 pt-3 pb-1 text-xs text-muted-foreground font-medium">
            Showing differences
          </div>
          <ScrollArea className="flex-1 bg-muted/30 rounded-md m-2 mt-0 p-0.5">
            <div className="p-3 font-mono text-[13px] leading-relaxed">
              {diff.map((line, index) => (
                <div
                  key={index}
                  className={cn(
                    "flex -mx-3 px-3",
                    line.type === 'added' && 'bg-green-500/10 dark:bg-green-600/15', 
                    line.type === 'removed' && 'bg-red-500/10 dark:bg-red-600/15'    
                  )}
                >
                  <span
                    className={cn(
                      "w-8 text-right pr-3 select-none opacity-60",
                      line.type === 'removed' ? 'text-red-600 dark:text-red-400' : 'text-muted-foreground'
                    )}
                  >
                    {line.type !== 'added' ? line.originalLineNum : ' '}
                  </span>
                  <span
                    className={cn(
                      "w-8 text-right pr-3 select-none opacity-60",
                       line.type === 'added' ? 'text-green-600 dark:text-green-400' : 'text-muted-foreground'
                    )}
                  >
                     {line.type !== 'removed' ? line.currentLineNum : ' '}
                  </span>
                  <span
                    className={cn(
                      "pl-2 flex-1 whitespace-pre-wrap break-all",
                      line.type === 'added' && 'text-green-700 dark:text-green-300',
                      line.type === 'removed' && 'text-red-700 dark:text-red-300'
                    )}
                  >
                    <span className={cn("mr-1 font-bold",
                        line.type === 'added' ? 'text-green-600 dark:text-green-400' :
                        line.type === 'removed' ? 'text-red-600 dark:text-red-400' : ''
                    )}>
                        {line.type === 'added' && '+'}
                        {line.type === 'removed' && '-'}
                        {line.type === 'common' && ' '}
                    </span>
                    {line.type === 'added' ? line.currentLine : line.originalLine}
                  </span>
                </div>
              ))}
            </div>
          </ScrollArea>
        </div>
      )}
    </div>
  );
};

export default CodeDiffViewer;

--- File: components\code-editor.tsx ---
// components/code-editor.tsx
"use client"

import React, { useEffect, useState, useRef } from "react"
import Editor, { Monaco, loader, type OnMount } from "@monaco-editor/react"
import type { editor as MonacoEditorTypes } from "monaco-editor"
import type { CodeFile } from "@/types/file"
import { Button } from "@/components/ui" // Consolidated import
import { Copy, Check, Save, Download, Settings2, Play } from "lucide-react"
import { cn } from "@/lib/utils"
import { useTheme } from "next-themes"
import { toast } from "sonner"

export type EditorTheme =
  | 'vs'
  | 'vs-dark'
  | 'hc-black'
  | 'hc-light';

export const editorThemesList: { name: string; value: EditorTheme }[] = [
  { name: "VS Dark (Default)", value: "vs-dark" },
  { name: "VS Light", value: "vs" },
  { name: "High Contrast Dark", value: "hc-black" },
  { name: "High Contrast Light", value: "hc-light" },
];

interface CodeEditorProps {
  file: CodeFile | null
  onContentChange?: (fileIdOrPath: string, newContent: string) => void
  onRunCode?: (code: string, language: string) => void
  editorTheme?: EditorTheme;
  typingTarget?: { path: string; content: string; onComplete?: () => void } | null;
  onTypingComplete?: (path: string) => void;
}

const AI_EDITOR_TYPING_SPEED = 10; 

export default function CodeEditor({
  file,
  onContentChange,
  onRunCode,
  editorTheme,
  typingTarget,
  onTypingComplete,
}: CodeEditorProps) {
  const [isCopied, setIsCopied] = useState(false)
  const { theme: appTheme } = useTheme()

  const [currentEditorValue, setCurrentEditorValue] = useState(file?.content || "");
  const editorRef = useRef<MonacoEditorTypes.IStandaloneCodeEditor | null>(null);
  const monacoRef = useRef<Monaco | null>(null);
  const typingIntervalRef = useRef<NodeJS.Timeout | null>(null);
  const [isAiTyping, setIsAiTyping] = useState(false);

  const currentMonacoThemeToApply = editorTheme || (appTheme === "dark" || appTheme === "system" ? "vs-dark" : "vs");

  const handleEditorChange = (value: string | undefined) => {
    if (isAiTyping) return;

    if (file && value !== undefined) {
      onContentChange?.(file.path, value); 
      setCurrentEditorValue(value);
    }
  }

  const handleCopyCode = () => {
    if (currentEditorValue) {
      navigator.clipboard.writeText(currentEditorValue)
      setIsCopied(true)
      toast.success("Code copied to clipboard!")
      setTimeout(() => setIsCopied(false), 2000)
    }
  }

  const handleRunCodeInternal = () => {
    if (currentEditorValue && file && onRunCode) {
      onRunCode(currentEditorValue, file.language)
      toast.info(`Running ${file.name}... Preview tab updated.`)
    } else if (file) {
      console.log("Running code (simulated):", currentEditorValue)
      toast.info("Code execution simulated. Check console.")
    }
  }

  const handleSaveCode = () => {
    if (file) {
      console.log("Saving code (simulated for file):", file.name, currentEditorValue)
      toast.success(`${file.name} saved (simulated)`)
      if (onContentChange) onContentChange(file.path, currentEditorValue); 
    }
  }

  const handleDownloadCode = () => {
    if (file && currentEditorValue) {
      const blob = new Blob([currentEditorValue], { type: "text/plain" })
      const url = URL.createObjectURL(blob)
      const a = document.createElement("a")
      a.href = url
      a.download = file.name
      document.body.appendChild(a)
      a.click()
      document.body.removeChild(a)
      URL.revokeObjectURL(url)
      toast.success(`Downloading ${file.name}`)
    }
  }

  const handleEditorDidMount: OnMount = (instance, monacoInstance) => {
    editorRef.current = instance;
    monacoRef.current = monacoInstance;
    monacoInstance.editor.setTheme(currentMonacoThemeToApply);
  }

  useEffect(() => {
    loader.init().then((monaco) => {
      monacoRef.current = monaco;
      monaco.editor.setTheme(currentMonacoThemeToApply);
    }).catch(error => console.error("Monaco loader.init error in theme useEffect:", error));
  }, [currentMonacoThemeToApply]);


  useEffect(() => {
    if (typingTarget && editorRef.current && file && file.path === typingTarget.path) {
      setIsAiTyping(true);
      if (typingIntervalRef.current) clearInterval(typingIntervalRef.current);
      
      let charIndex = 0;
      const targetContent = typingTarget.content;
      editorRef.current.setValue(""); 
      setCurrentEditorValue(""); 

      typingIntervalRef.current = setInterval(() => {
        if (charIndex < targetContent.length) {
          const currentTypedValue = targetContent.substring(0, charIndex + 1);
          editorRef.current?.setValue(currentTypedValue); 
          editorRef.current?.revealPosition({lineNumber: editorRef.current.getModel()?.getLineCount() || 1, column: 1}); 

          setCurrentEditorValue(currentTypedValue);
          if (onContentChange) onContentChange(file.path, currentTypedValue); 

          charIndex++;
        } else {
          if (typingIntervalRef.current) clearInterval(typingIntervalRef.current);
          typingIntervalRef.current = null;
          setIsAiTyping(false);
          if (typingTarget.onComplete) typingTarget.onComplete();
          if (onTypingComplete) onTypingComplete(typingTarget.path);
        }
      }, AI_EDITOR_TYPING_SPEED);

    } else if (!typingTarget && file) { 
        if (typingIntervalRef.current) { 
            clearInterval(typingIntervalRef.current);
            typingIntervalRef.current = null;
            setIsAiTyping(false);
        }
        setCurrentEditorValue(file.content);
        if (editorRef.current) {
            const currentModel = editorRef.current.getModel();
            if (!currentModel || currentModel.uri.toString() !== file.path || editorRef.current.getValue() !== file.content) {
                 editorRef.current.setValue(file.content);
            }
        }
    } else if (!file && !typingTarget) { 
        if (typingIntervalRef.current) {
            clearInterval(typingIntervalRef.current);
            typingIntervalRef.current = null;
            setIsAiTyping(false);
        }
        setCurrentEditorValue("");
        if (editorRef.current) editorRef.current.setValue("");
    }

    return () => {
      if (typingIntervalRef.current) {
        clearInterval(typingIntervalRef.current);
        setIsAiTyping(false);
      }
    };
  }, [file, typingTarget, onTypingComplete, onContentChange]);


  if (!file && !typingTarget) {
    return (
      <div className="h-full flex flex-col items-center justify-center text-muted-foreground bg-background p-4">
        <Settings2 className="h-16 w-16 mb-4 opacity-30" />
        <p>Select a file to start editing or create a new one.</p>
      </div>
    )
  }

  const displayLanguage = file?.language || (typingTarget ? (typingTarget.path.split('.').pop() || 'plaintext') : 'plaintext');


  return (
    <div className="h-full flex flex-col bg-background">
      <div className="flex items-center justify-end p-1.5 border-b border-border bg-muted shrink-0 space-x-1">
        <Button size="icon" variant="ghost" className="h-7 w-7 text-muted-foreground hover:text-foreground" onClick={handleRunCodeInternal} title="Run code / Update Preview" disabled={!file || isAiTyping}>
          <Play className="h-3.5 w-3.5" />
        </Button>
        <Button size="icon" variant="ghost" className="h-7 w-7 text-muted-foreground hover:text-foreground" onClick={handleCopyCode} title="Copy code" disabled={!currentEditorValue || isAiTyping}>
          {isCopied ? <Check className="h-3.5 w-3.5 text-green-500" /> : <Copy className="h-3.5 w-3.5" />}
        </Button>
        <Button size="icon" variant="ghost" className="h-7 w-7 text-muted-foreground hover:text-foreground" onClick={handleSaveCode} title="Save code" disabled={!file || isAiTyping}>
          <Save className="h-3.5 w-3.5" />
        </Button>
        <Button size="icon" variant="ghost" className="h-7 w-7 text-muted-foreground hover:text-foreground" onClick={handleDownloadCode} title="Download code" disabled={!file || !currentEditorValue || isAiTyping}>
          <Download className="h-3.5 w-3.5" />
        </Button>
      </div>
      <div className="flex-1 overflow-hidden">
        <Editor
          key={`${file?.path || typingTarget?.path}-${currentMonacoThemeToApply}`} 
          height="100%"
          path={file?.path || typingTarget?.path} 
          language={displayLanguage}
          value={currentEditorValue}
          theme={currentMonacoThemeToApply}
          onChange={handleEditorChange}
          onMount={handleEditorDidMount}
          options={{
            minimap: { enabled: true, side: 'right' },
            fontSize: 13,
            wordWrap: "on",
            scrollBeyondLastLine: false,
            automaticLayout: true,
            renderLineHighlight: "gutter",
            scrollbar: {
              verticalScrollbarSize: 8,
              horizontalScrollbarSize: 8,
            },
            glyphMargin: false,
            folding: true,
            lineDecorationsWidth: 5,
            lineNumbersMinChars: 3,
            padding: { top: 8, bottom: 8 },
            readOnly: isAiTyping,
          }}
        />
      </div>
    </div>
  )
}

--- File: components\code-preview.tsx ---
// components/code-preview.tsx
"use client"

import React from 'react';
// Removed: import { Eye } from 'lucide-react'; // Not used directly here for the message

interface CodePreviewProps {
  htmlContent?: string;
  cssContent?: string;
  jsContent?: string;
  language?: string; // This prop might determine if we even attempt to construct a complex srcDoc
}

const CodePreview: React.FC<CodePreviewProps> = ({
  htmlContent = '',
  cssContent = '',
  jsContent = '',
  language = 'html' // Default to html if language is not provided
}) => {
  const constructSrcDoc = () => {
    // Only construct srcDoc with styles and scripts if there's web content to display
    if (language.toLowerCase() === 'html' || language.toLowerCase() === 'javascript' || language.toLowerCase() === 'css') {
      if (htmlContent || cssContent || jsContent) {
        return `
          <!DOCTYPE html>
          <html>
            <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <style>
                /* Basic reset and theme-aware body */
                body { 
                  margin: 0; 
                  padding: 8px; /* Add some padding inside the iframe */
                  font-family: sans-serif; /* Default font */
                  background-color: var(--background); 
                  color: var(--foreground);
                  transition: background-color 0.2s, color 0.2s; /* Smooth theme transitions */
                }
                /* Inject user's CSS */
                ${cssContent}
              </style>
            </head>
            <body>
              ${htmlContent}
              ${jsContent ? `<script type="module">${jsContent}</script>` : ''} 
            </body>
          </html>
        `;
      }
    }
    // Fallback for non-web content or if no web content is provided
    // This message is now styled using CSS variables from the parent document (via iframe inheritance or injected styles)
    // The actual styling for this fallback is handled by the parent (editor-area.tsx) when it generates this minimal HTML
    return `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <style>
            body { 
              display: flex; 
              align-items: center; 
              justify-content: center; 
              height: 100vh; 
              margin: 0; 
              font-family: var(--font-ui, sans-serif); /* Use UI font */
              background-color: var(--background); 
              color: var(--muted-foreground); /* Use muted foreground for placeholder */
              text-align: center;
              padding: 1rem;
              box-sizing: border-box;
            }
            .message-content {
              display: flex;
              flex-direction: column;
              align-items: center;
            }
            .icon { /* Placeholder for a potential icon if you add one via JS */
              width: 48px;
              height: 48px;
              margin-bottom: 1rem;
              opacity: 0.3;
            }
          </style>
        </head>
        <body>
          <div class="message-content">
            <!-- You could use an SVG directly here or an img tag if you have an icon -->
            <!-- For simplicity, we'll rely on the parent component's placeholder if this srcDoc is shown -->
            <p>No preview available for this file type or content.</p>
            <p style="font-size: 0.8rem;">Run an HTML, CSS, or JS file to see its preview.</p>
          </div>
        </body>
      </html>`;
  };

  const srcDoc = constructSrcDoc();

  return (
    <div className="w-full h-full bg-background"> {/* Ensure this container uses theme background */}
      <iframe
        srcDoc={srcDoc}
        title="Code Preview"
        sandbox="allow-scripts allow-same-origin" // allow-same-origin is important for scripts to potentially access parent styles if needed, but be cautious
        className="w-full h-full border-none"
      />
    </div>
  );
};

export default CodePreview;

--- File: components\editor-area.tsx ---
// components/editor-area.tsx
"use client"

import React, { useState, useCallback, useEffect, useImperativeHandle, forwardRef } from "react"
import { Resizable as CustomResizable } from "@/components/resizable" // Keep your custom Resizable
import FileExplorer from "@/components/file-explorer"
import CodeEditor, { type EditorTheme } from "@/components/code-editor"
import CodePreview from "@/components/code-preview"
import CodeDiffViewer from "@/components/code-diff-viewer"
import { Button, Input, ResizablePanelGroup, ResizablePanel, ResizableHandle } from "@/components/ui"; // Consolidated imports
import type { CodeFile, FileTreeItem } from "@/types/file"
import {
  Code2,
  GitCompareArrows,
  Eye,
  X,
  RefreshCw,
  ArrowLeft,
  ArrowRight,
  Home,
  Maximize,
  Minimize,
  PanelLeftClose,
  Loader2,
} from "lucide-react"
import { cn } from "@/lib/utils";
import { toast } from "sonner";
import path from 'path';

export interface EditorAreaRef {
  triggerFileTreeRefresh: () => void;
  handleFileSelectProgrammatic: (fileItem: FileTreeItem) => Promise<void>;
}

interface EditorAreaProps {
  activeFile: CodeFile | null
  setActiveFile: (file: CodeFile | null) => void
  onFileContentChange: (fileIdOrPath: string, newContent: string) => void
  toggleTerminal: () => void
  selectedEditorTheme?: EditorTheme
  rootDirectoryName: string;
  editorTypingTarget?: { path: string; content: string; onComplete?: () => void } | null;
  onEditorTypingComplete?: (path: string) => void;
}

const EditorArea = forwardRef<EditorAreaRef, EditorAreaProps>(({
  activeFile,
  setActiveFile,
  onFileContentChange,
  toggleTerminal,
  selectedEditorTheme,
  rootDirectoryName,
  editorTypingTarget,
  onEditorTypingComplete,
}, ref) => {
  const [fileTree, setFileTree] = useState<FileTreeItem[]>([]);
  const [isLoadingFileTree, setIsLoadingFileTree] = useState(true);
  const [isLoadingFileContent, setIsLoadingFileContent] = useState(false);

  const [activeTab, setActiveTab] = useState<"code" | "diff" | "preview">("code")
  const [previewContent, setPreviewContent] = useState<{ html: string; css: string; js: string; language: string; url: string }>({
    html: "", css: "", js: "", language: "plaintext", url: "about:blank",
  })
  const [isPreviewMaximized, setIsPreviewMaximized] = useState(false);

  const fetchFileTree = useCallback(async () => {
    setIsLoadingFileTree(true);
    try {
      const response = await fetch('/api/files');
      if (!response.ok) {
        throw new Error(`Failed to fetch file tree: ${response.statusText}`);
      }
      const data: FileTreeItem[] = await response.json();
      setFileTree(data);
    } catch (error) {
      console.error("Error fetching file tree:", error);
      toast.error("Could not load project files.");
      setFileTree([]);
    } finally {
      setIsLoadingFileTree(false);
    }
  }, []);

  const handleFileSelectProgrammatic = useCallback(async (fileItem: FileTreeItem) => {
    if (fileItem.isDirectory) return;
    setIsLoadingFileContent(true);
    setActiveTab("code"); 
    try {
      const response = await fetch(`/api/files?path=${encodeURIComponent(fileItem.path)}`);
      if (!response.ok) {
        const errorData = await response.json().catch(() => ({}));
        throw new Error(errorData.error || `Failed to fetch file content: ${response.statusText}`);
      }
      const fileData: CodeFile = await response.json();
      setActiveFile({ ...fileData, id: fileData.id || fileData.path });
    } catch (error) {
      console.error(`Error fetching content for ${fileItem.path}:`, error);
      toast.error(`Could not load file: ${fileItem.name}`);
      setActiveFile(null);
    } finally {
      setIsLoadingFileContent(false);
    }
  }, [setActiveFile]);

  useImperativeHandle(ref, () => ({
    triggerFileTreeRefresh: fetchFileTree,
    handleFileSelectProgrammatic,
  }));

  useEffect(() => {
    fetchFileTree();
  }, [fetchFileTree]);

  const handleFileSelect = useCallback(async (fileItem: FileTreeItem) => {
    if (fileItem.isDirectory) {
      return;
    }
    setIsLoadingFileContent(true);
    setActiveTab("code");
    try {
      const response = await fetch(`/api/files?path=${encodeURIComponent(fileItem.path)}`);
      if (!response.ok) {
        const errorData = await response.json().catch(() => ({}));
        throw new Error(errorData.error || `Failed to fetch file content: ${response.statusText}`);
      }
      const fileData: CodeFile = await response.json();
      setActiveFile({
        ...fileData,
        id: fileData.id || fileData.path,
      });
    } catch (error) {
      console.error(`Error fetching content for ${fileItem.path}:`, error);
      toast.error(`Could not load file: ${fileItem.name}`);
      setActiveFile(null);
    } finally {
      setIsLoadingFileContent(false);
    }
  }, [setActiveFile]);


  const handleRunCodeForPreview = useCallback(async (code: string, language: string, filePath?: string) => {
    let newHtml = "";
    let newCss = "";
    let newJs = "";
    let newUrl = `/${filePath ? path.basename(filePath) : 'preview.html'}`;
    let effectiveLanguage = language;

    const fetchLinkedFileContent = async (fileName: string, targetLanguage: 'css' | 'javascript') => {
        const fullPath = filePath ? path.join(path.dirname(filePath), fileName) : fileName;
        try {
            const res = await fetch(`/api/files?path=${encodeURIComponent(fullPath)}`);
            if (res.ok) {
                const file: CodeFile = await res.json();
                if (file.language === targetLanguage) return file.content;
            }
        } catch (e) { console.error("Error fetching linked file:", e); }
        return "";
    };

    if (language.toLowerCase() === "html") {
      newHtml = code;
      const cssMatch = code.match(/<link\s+.*?href=["'](.*?\.(?:css))["'].*?>/i);
      const jsMatch = code.match(/<script\s+.*?src=["'](.*?\.(?:js))["'].*?>/i);
      if (cssMatch?.[1]) newCss = await fetchLinkedFileContent(cssMatch[1], 'css');
      if (jsMatch?.[1]) newJs = await fetchLinkedFileContent(jsMatch[1], 'javascript');

    } else if (language.toLowerCase() === "javascript") {
      newHtml = `<h1>JavaScript Output</h1><div id="output"></div><style>body{margin:1rem; font-family:sans-serif;}</style>`;
      newJs = code;
      newUrl = `/${filePath ? path.basename(filePath) : 'preview.js'}`;
    } else if (language.toLowerCase() === "css") {
      newHtml = `<h1>CSS Styles Applied</h1><p class="styled-text">This text should be styled by your CSS.</p><style>body{margin:1rem; font-family:sans-serif;}</style>`;
      newCss = code;
      newUrl = `/${filePath ? path.basename(filePath) : 'preview.css'}`;
    } else {
      const escapedCode = code.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
      newHtml = `<body style="background-color: var(--background); color: var(--foreground); margin:0; padding: 1rem; font-family: var(--font-mono); white-space: pre-wrap; height: 100vh; box-sizing: border-box;">${escapedCode}</body>`;
      newJs = "";
      newCss = "";
      newUrl = "about:text";
      effectiveLanguage = "plaintext";
    }

    setPreviewContent({ html: newHtml, css: newCss, js: newJs, language: effectiveLanguage, url: newUrl });
    setActiveTab("preview");
  }, []);

  const handleCloseActiveFile = () => {
    setActiveFile(null);
    if (activeTab === 'diff') setActiveTab('code');
  }

  const isPreviewable = previewContent.language === 'html' || previewContent.language === 'javascript' || previewContent.language === 'css';
  const canShowPreviewContent = isPreviewable && (previewContent.html || previewContent.css || previewContent.js);
  const canShowActiveFilePreview = activeFile && (activeFile.language === 'html' || activeFile.language === 'javascript' || activeFile.language === 'css');

  return (
    <div className="flex flex-col h-full bg-background text-foreground">
      <div className="h-10 border-b border-border flex items-center justify-between px-2 bg-muted">
        <div className="flex items-center h-full">
          <Button variant="ghost" size="sm" className={cn("h-full px-3 rounded-none text-xs font-medium flex items-center gap-1.5", activeTab === "code" ? "bg-accent text-accent-foreground" : "text-muted-foreground hover:bg-accent/80 hover:text-accent-foreground")} onClick={() => setActiveTab("code")}> <Code2 size={14} /> Code </Button>
          <Button variant="ghost" size="sm" className={cn("h-full px-3 rounded-none text-xs font-medium flex items-center gap-1.5", activeTab === "diff" ? "bg-accent text-accent-foreground" : "text-muted-foreground hover:bg-accent/80 hover:text-accent-foreground")} onClick={() => setActiveTab("diff")} disabled={!activeFile}> <GitCompareArrows size={14} /> Diff </Button>
          <Button variant="ghost" size="sm" className={cn("h-full px-3 rounded-none text-xs font-medium flex items-center gap-1.5", activeTab === "preview" ? "bg-accent text-accent-foreground" : "text-muted-foreground hover:bg-accent/80 hover:text-accent-foreground")} onClick={() => setActiveTab("preview")}> <Eye size={14} /> Preview </Button>
        </div>
        <div className="flex items-center h-full space-x-1">
          <Button
            variant="ghost"
            size="sm"
            className="text-xs text-muted-foreground hover:text-foreground"
            onClick={fetchFileTree}
            title="Refresh File Explorer"> <RefreshCw size={16} className="mr-1.5" /> Refresh Files </Button>
          <Button variant="ghost" size="sm" className="text-xs text-muted-foreground hover:text-foreground" onClick={toggleTerminal}> <PanelLeftClose size={16} className="mr-1.5" /> Toggle Terminal </Button>
          {activeTab === 'diff' && ( <Button variant="ghost" size="icon" className="h-7 w-7 text-muted-foreground hover:text-foreground" title="Close Diff View" onClick={() => setActiveTab('code')}> <X size={18} /> </Button> )}
          {activeTab === 'preview' && isPreviewMaximized && ( <Button variant="ghost" size="icon" className="h-7 w-7 text-muted-foreground hover:text-foreground" onClick={() => setIsPreviewMaximized(false)} title="Exit Fullscreen Preview"> <X size={18}/> </Button> )}
        </div>
      </div>

      <div className="flex-1 flex overflow-hidden">
        {activeTab === "code" && (
          <ResizablePanelGroup direction="horizontal">
            <ResizablePanel defaultSize={25} minSize={15} maxSize={40} className="border-r border-border bg-card">
              {isLoadingFileTree ? (
                <div className="p-4 flex items-center justify-center h-full">
                  <Loader2 className="h-6 w-6 animate-spin text-muted-foreground" />
                  <span className="ml-2 text-muted-foreground">Loading files...</span>
                </div>
              ) : (
                <FileExplorer
                  fileTree={fileTree}
                  activeFile={activeFile}
                  onFileSelect={handleFileSelect}
                  rootDirectoryName={rootDirectoryName}
                  onFileSystemUpdate={fetchFileTree}
                />
              )}
            </ResizablePanel>
            <ResizableHandle withHandle />
            <ResizablePanel defaultSize={75}>
              <div className="flex-1 flex flex-col overflow-hidden bg-background">
                {activeFile && (
                  <div className="h-9 border-b border-border flex items-center px-3 bg-muted">
                    <div className="flex-1 flex items-center">
                      <span className="text-sm flex items-center font-medium text-foreground">
                        {activeFile?.name}
                      </span>
                      {isLoadingFileContent && <Loader2 className="h-4 w-4 animate-spin ml-2 text-muted-foreground" />}
                    </div>
                    <Button variant="ghost" size="icon" className="h-6 w-6 text-muted-foreground hover:text-foreground" onClick={handleCloseActiveFile}>
                      <X className="h-3.5 w-3.5" />
                    </Button>
                  </div>
                )}
                <div className="flex-1 overflow-auto">
                  <CodeEditor
                    file={activeFile}
                    onContentChange={onFileContentChange}
                    onRunCode={(code, lang) => handleRunCodeForPreview(code, lang, activeFile?.path)}
                    editorTheme={selectedEditorTheme}
                    typingTarget={editorTypingTarget}
                    onTypingComplete={onEditorTypingComplete}
                  />
                </div>
              </div>
            </ResizablePanel>
          </ResizablePanelGroup>
        )}

        {activeTab === "diff" && ( <div className="w-full h-full"> <CodeDiffViewer file={activeFile} onClose={() => setActiveTab("code")} /> </div> )}
        {activeTab === "preview" && (
          <div className={cn("w-full h-full flex flex-col bg-background", isPreviewMaximized && "fixed inset-0 z-[100] shadow-2xl")}>
            <div className="flex items-center p-1.5 border-b border-border bg-muted shrink-0 h-10">
              <Button variant="ghost" size="icon" className="h-7 w-7 text-muted-foreground hover:text-foreground"><ArrowLeft size={16}/></Button>
              <Button variant="ghost" size="icon" className="h-7 w-7 text-muted-foreground hover:text-foreground"><ArrowRight size={16}/></Button>
              <Button variant="ghost" size="icon" className="h-7 w-7 text-muted-foreground hover:text-foreground"><RefreshCw size={16}/></Button>
              <Button variant="ghost" size="icon" className="h-7 w-7 text-muted-foreground hover:text-foreground ml-1"><Home size={16}/></Button>
              <div className="flex-1 mx-2"> <Input readOnly value={previewContent.url} className="h-7 bg-input border-border text-foreground text-xs focus-visible:ring-0 focus-visible:ring-offset-0 placeholder:text-muted-foreground" placeholder="about:blank" /> </div>
              <Button variant="ghost" size="icon" className="h-7 w-7 text-muted-foreground hover:text-foreground" onClick={() => setIsPreviewMaximized(!isPreviewMaximized)} title={isPreviewMaximized ? "Minimize Preview" : "Maximize Preview"}> {isPreviewMaximized ? <Minimize size={16}/> : <Maximize size={16}/>} </Button>
            </div>
            <div className="flex-1 overflow-auto">
              {canShowPreviewContent || canShowActiveFilePreview ? ( <CodePreview htmlContent={previewContent.html} cssContent={previewContent.css} jsContent={previewContent.js} language={previewContent.language} /> ) : ( <div className="flex flex-col items-center justify-center text-muted-foreground h-full p-4 text-center"> <Eye size={48} className="mb-4 opacity-30" /> <p className="text-base font-medium">No preview available</p> {!activeFile && <p className="text-xs mt-1">Run an HTML, CSS, or JS file to see its preview here.</p>} {activeFile && !isPreviewable && <p className="text-xs mt-1">Preview is not supported for '{activeFile.language}' files.</p>} </div> )}
            </div>
          </div>
        )}
      </div>
    </div>
  )
});
EditorArea.displayName = "EditorArea";
export default EditorArea;

--- File: components\file-explorer.tsx ---
// components/file-explorer.tsx
"use client"

import * as React from "react"
import { useState, useMemo, useEffect, useCallback } from "react"
import {
  Folder as FolderIconMdi,
  FolderOpen as FolderOpenIconMdi,
  FolderCogOutline,
  FolderZipOutline,
  FolderMultipleOutline,
  Npm as NpmIcon,
  Git as GitIconMdi,
  FileDocumentOutline,
  LanguageJavascript,
  LanguageTypescript,
  LanguageHtml5,
  LanguageCss3,
  LanguageMarkdown,
  CodeJson as JsonIcon,
  PackageVariantClosed as PackageJsonIcon,
  LockOutline as LockIconMdi,
  FileImageOutline,
  FileSettingsOutline,
  CogOutline,
  FolderMultipleOutline as FolderExplorerIconMdi, 
  Magnify as SearchIconMdi,
  Lock as LockTabIconMdi,
} from "mdi-material-ui";

import { ChevronRight, ChevronDown } from "lucide-react";

import type { CodeFile, FileTreeItem } from "@/types/file"
import { Tabs, TabsContent, TabsList, TabsTrigger, ScrollArea } from "@/components/ui" // Consolidated import
import { cn } from "@/lib/utils";

import { FilesTabContent } from "./file-explorer-tabs/files-tab-content"
import { SearchTabContent } from "./file-explorer-tabs/search-tab-content"
import { LocksTabContent } from "./file-explorer-tabs/locks-tab-content"

interface FileExplorerProps {
  fileTree: FileTreeItem[];
  activeFile: CodeFile | null;
  onFileSelect: (file: FileTreeItem) => void;
  rootDirectoryName: string;
  onFileSystemUpdate: () => Promise<void>;
}

export default function FileExplorer({
  fileTree,
  activeFile,
  onFileSelect,
  rootDirectoryName,
  onFileSystemUpdate,
}: FileExplorerProps) {
  const [activeExplorerTab, setActiveExplorerTab] = useState<"files" | "search" | "locks">("files")
  const [isExplorerLocked, setIsExplorerLocked] = useState(false)

  const initialExpandedDirs = useMemo(() => {
    const defaultSet = new Set<string>();
    if (fileTree.length > 0 && fileTree[0].name === rootDirectoryName) {
      defaultSet.add(fileTree[0].path);
      fileTree[0].children?.forEach(child => {
        if (child.isDirectory && (child.name === 'src' || child.name === 'app' || child.name === 'components' || child.name === 'services')) {
          defaultSet.add(child.path);
        }
      });
    }
    return defaultSet;
  }, [fileTree, rootDirectoryName]);

  const [expandedDirsForFilesTab, setExpandedDirsForFilesTab] = useState<Set<string>>(initialExpandedDirs);
  const [globalSearchTerm, setGlobalSearchTerm] = useState("");

  useEffect(() => {
    setExpandedDirsForFilesTab(initialExpandedDirs);
  }, [initialExpandedDirs]);

  const getFileIcon = useCallback((fileName: string, itemPath?: string, isDirectory?: boolean, isActive?: boolean): React.ReactNode => {
    const iconProps = { fontSize: "small" as const, className: "shrink-0" };
    const defaultIconColor = isActive ? "text-slate-100" : "text-slate-400 dark:text-slate-500";
    const folderColor = isActive ? "text-slate-100" : "text-slate-400 dark:text-slate-500";


    if (isDirectory) {
      const isExpanded = expandedDirsForFilesTab.has(itemPath || "");
      const folderName = fileName.toLowerCase();

      if (folderName === 'src' || folderName === 'app') return <FolderZipOutline {...iconProps} className={cn(iconProps.className, folderColor)} />;
      if (folderName === 'components' || folderName === 'ui') return <FolderMultipleOutline {...iconProps} className={cn(iconProps.className, folderColor)} />;
      if (folderName === 'node_modules') return <NpmIcon {...iconProps} className={cn(iconProps.className, folderColor)} />; 
      if (folderName === '.git') return <GitIconMdi {...iconProps} className={cn(iconProps.className, folderColor)} />;
      if (folderName === 'services' || folderName === 'lib' || folderName === 'utils' || folderName === 'hooks' || folderName === 'config') return <FolderCogOutline {...iconProps} className={cn(iconProps.className, folderColor)} />;
      
      return isExpanded ?
        <FolderOpenIconMdi {...iconProps} className={cn(iconProps.className, folderColor)} /> :
        <FolderIconMdi {...iconProps} className={cn(iconProps.className, folderColor)} />;
    }

    const lowerFileName = fileName.toLowerCase();
    const extension = lowerFileName.split(".").pop();

    if (lowerFileName === 'package.json') return <PackageJsonIcon {...iconProps} className={cn(iconProps.className, isActive ? "text-slate-100" : "text-green-500/80 dark:text-green-400/80")} />;
    if (lowerFileName === 'package-lock.json') return <LockIconMdi {...iconProps} className={cn(iconProps.className, isActive ? "text-slate-100" : "text-orange-400/80 dark:text-orange-300/80")} />;
    if (lowerFileName.startsWith('.env')) return <FileSettingsOutline {...iconProps} className={cn(iconProps.className, defaultIconColor)} />;
    if (lowerFileName === 'vite.config.ts' || lowerFileName === 'tailwind.config.ts' || lowerFileName === 'next.config.mjs' || lowerFileName === 'postcss.config.mjs') return <CogOutline {...iconProps} className={cn(iconProps.className, defaultIconColor)} />;
    if (lowerFileName === 'readme.md') return <LanguageMarkdown {...iconProps} className={cn(iconProps.className, defaultIconColor)} />;


    switch (extension) {
      case "js":
      case "jsx":
        return <LanguageJavascript {...iconProps} className={cn(iconProps.className, defaultIconColor)} />;
      case "ts":
      case "tsx":
        return <LanguageTypescript {...iconProps} className={cn(iconProps.className, defaultIconColor)} />;
      case "json":
        return <JsonIcon {...iconProps} className={cn(iconProps.className, defaultIconColor)} />;
      case "html":
        return <LanguageHtml5 {...iconProps} className={cn(iconProps.className, defaultIconColor)} />;
      case "css":
      case "scss":
      case "less":
        return <LanguageCss3 {...iconProps} className={cn(iconProps.className, defaultIconColor)} />;
      case "md":
      case "mdx":
        return <LanguageMarkdown {...iconProps} className={cn(iconProps.className, defaultIconColor)} />;
      case "png":
      case "jpg":
      case "jpeg":
      case "gif":
      case "svg":
      case "ico":
      case "webp":
        return <FileImageOutline {...iconProps} className={cn(iconProps.className, defaultIconColor)} />;
      case "gitignore":
        return <GitIconMdi {...iconProps} className={cn(iconProps.className, defaultIconColor, "opacity-70")} />;
      default:
        return <FileDocumentOutline {...iconProps} className={cn(iconProps.className, defaultIconColor)} />;
    }
  }, [expandedDirsForFilesTab]);

  const handleExpandDirectoryInFilesTab = useCallback((dirPath: string) => {
    setExpandedDirsForFilesTab(prev => {
      const newSet = new Set(prev);
      newSet.add(dirPath);
      const parts = dirPath.split('/');
      for (let i = 1; i < parts.length; i++) {
        newSet.add(parts.slice(0, i).join('/'));
      }
      return newSet;
    });
  }, []);

  const filesTabFileTree = useMemo(() => {
    return fileTree;
  }, [fileTree]);

  return (
    <div className="flex flex-col h-full bg-[#21252B] text-slate-300">
      <Tabs
        value={activeExplorerTab}
        onValueChange={(value) => setActiveExplorerTab(value as any)}
        className="flex-1 flex flex-col overflow-hidden"
      >
        <TabsList className="grid w-full grid-cols-3 shrink-0 rounded-none border-b border-slate-700/50 bg-[#282C34] h-9">
          <TabsTrigger value="files" className="data-[state=active]:bg-[#21252B] data-[state=active]:text-slate-100 text-slate-400 hover:text-slate-200 flex items-center gap-1.5 text-xs h-full">
            <FolderExplorerIconMdi style={{ fontSize: '1.1rem' }} /> Files
          </TabsTrigger>
          <TabsTrigger value="search" className="data-[state=active]:bg-[#21252B] data-[state=active]:text-slate-100 text-slate-400 hover:text-slate-200 flex items-center gap-1.5 text-xs h-full">
            <SearchIconMdi style={{ fontSize: '1.1rem' }} /> Search
          </TabsTrigger>
          <TabsTrigger value="locks" className="data-[state=active]:bg-[#21252B] data-[state=active]:text-slate-100 text-slate-400 hover:text-slate-200 flex items-center gap-1.5 text-xs h-full">
            <LockTabIconMdi style={{ fontSize: '1.1rem' }} /> Locks
          </TabsTrigger>
        </TabsList>

        <TabsContent value="files" className="flex-1 overflow-y-auto mt-0">
          <FilesTabContent
            fileTree={filesTabFileTree}
            activeFile={activeFile}
            onFileSelect={onFileSelect}
            getFileIcon={getFileIcon}
            isExplorerLocked={isExplorerLocked}
            expandedDirs={expandedDirsForFilesTab}
            setExpandedDirs={setExpandedDirsForFilesTab}
            rootDirectoryName={rootDirectoryName}
            onFileSystemUpdate={onFileSystemUpdate}
          />
        </TabsContent>

        <TabsContent value="search" className="flex-1 overflow-y-auto mt-0">
          <SearchTabContent
            fileTree={filesTabFileTree}
            activeFile={activeFile}
            onFileSelect={onFileSelect}
            getFileIcon={getFileIcon}
            onActivateFilesTab={() => setActiveExplorerTab("files")}
            onExpandDirectoryInFilesTab={handleExpandDirectoryInFilesTab}
            searchTerm={globalSearchTerm}
            setSearchTerm={setGlobalSearchTerm}
            rootDirectoryName={rootDirectoryName}
          />
        </TabsContent>

        <TabsContent value="locks" className="flex-1 overflow-y-auto mt-0">
          <LocksTabContent
            fileTree={filesTabFileTree}
            getFileIcon={getFileIcon}
            isExplorerLocked={isExplorerLocked}
            rootDirectoryName={rootDirectoryName}
          />
        </TabsContent>
      </Tabs>
    </div>
  )
}

--- File: components\live-preview-block.tsx ---
// components/live-preview-block.tsx
"use client";

import React, { useMemo, useEffect, useRef, useState } from 'react';
import { cn } from '@/lib/utils';
import { useTheme } from 'next-themes'; // To pass theme variables to iframe

interface LivePreviewBlockProps {
  htmlContent: string;
  cssContent?: string;
  jsContent?: string;
  className?: string;
  title?: string; // For iframe title attribute
  initialHeight?: string; // e.g., "200px", "auto"
}

const LivePreviewBlock: React.FC<LivePreviewBlockProps> = ({
  htmlContent,
  cssContent = '',
  jsContent = '',
  className,
  title = "Live AI Preview",
  initialHeight = "250px", // Default height
}) => {
  const iframeRef = useRef<HTMLIFrameElement>(null);
  const [iframeHeight, setIframeHeight] = useState<string | number>(initialHeight);
  const { theme: appTheme, resolvedTheme } = useTheme(); // Get app's theme

  // Construct the document for the iframe
  const srcDoc = useMemo(() => {
    // Basic theme variables to pass to the iframe for consistent styling
    // This is a simplified approach; a more robust solution might involve
    // dynamically generating a more complete theme stylesheet.
    const themeStyle = `
      <style id="app-theme-variables">
        :root {
          --background: ${resolvedTheme === 'dark' || appTheme === 'dark' || appTheme === 'midnight-blue' ? 'hsl(222.2 84% 4.9%)' : 'hsl(0 0% 100%)'};
          --foreground: ${resolvedTheme === 'dark' || appTheme === 'dark' || appTheme === 'midnight-blue' ? 'hsl(210 40% 98%)' : 'hsl(222.2 84% 4.9%)'};
          --card: ${resolvedTheme === 'dark' || appTheme === 'dark' || appTheme === 'midnight-blue' ? 'hsl(222.2 84% 4.9%)' : 'hsl(0 0% 100%)'};
          --card-foreground: ${resolvedTheme === 'dark' || appTheme === 'dark' || appTheme === 'midnight-blue' ? 'hsl(210 40% 98%)' : 'hsl(222.2 84% 4.9%)'};
          --popover: ${resolvedTheme === 'dark' || appTheme === 'dark' || appTheme === 'midnight-blue' ? 'hsl(222.2 84% 4.9%)' : 'hsl(0 0% 100%)'};
          --popover-foreground: ${resolvedTheme === 'dark' || appTheme === 'dark' || appTheme === 'midnight-blue' ? 'hsl(210 40% 98%)' : 'hsl(222.2 84% 4.9%)'};
          --primary: ${resolvedTheme === 'dark' || appTheme === 'dark' || appTheme === 'midnight-blue' ? 'hsl(210 40% 98%)' : 'hsl(222.2 47.4% 11.2%)'};
          --primary-foreground: ${resolvedTheme === 'dark' || appTheme === 'dark' || appTheme === 'midnight-blue' ? 'hsl(222.2 47.4% 11.2%)' : 'hsl(210 40% 98%)'};
          --secondary: ${resolvedTheme === 'dark' || appTheme === 'dark' || appTheme === 'midnight-blue' ? 'hsl(217.2 32.6% 17.5%)' : 'hsl(210 40% 96.1%)'};
          --secondary-foreground: ${resolvedTheme === 'dark' || appTheme === 'dark' || appTheme === 'midnight-blue' ? 'hsl(210 40% 98%)' : 'hsl(222.2 47.4% 11.2%)'};
          --muted: ${resolvedTheme === 'dark' || appTheme === 'dark' || appTheme === 'midnight-blue' ? 'hsl(217.2 32.6% 17.5%)' : 'hsl(210 40% 96.1%)'};
          --muted-foreground: ${resolvedTheme === 'dark' || appTheme === 'dark' || appTheme === 'midnight-blue' ? 'hsl(215 20.2% 65.1%)' : 'hsl(215.4 16.3% 46.9%)'};
          --accent: ${resolvedTheme === 'dark' || appTheme === 'dark' || appTheme === 'midnight-blue' ? 'hsl(217.2 32.6% 17.5%)' : 'hsl(210 40% 96.1%)'};
          --accent-foreground: ${resolvedTheme === 'dark' || appTheme === 'dark' || appTheme === 'midnight-blue' ? 'hsl(210 40% 98%)' : 'hsl(222.2 47.4% 11.2%)'};
          --destructive: ${resolvedTheme === 'dark' || appTheme === 'dark' || appTheme === 'midnight-blue' ? 'hsl(0 62.8% 50.6%)' : 'hsl(0 84.2% 60.2%)'};
          --border: ${resolvedTheme === 'dark' || appTheme === 'dark' || appTheme === 'midnight-blue' ? 'hsl(217.2 32.6% 17.5%)' : 'hsl(214.3 31.8% 91.4%)'};
          --input: ${resolvedTheme === 'dark' || appTheme === 'dark' || appTheme === 'midnight-blue' ? 'hsl(217.2 32.6% 17.5%)' : 'hsl(214.3 31.8% 91.4%)'};
          --ring: ${resolvedTheme === 'dark' || appTheme === 'dark' || appTheme === 'midnight-blue' ? 'hsl(212.7 26.8% 83.9%)' : 'hsl(222.2 84% 4.9%)'};
          --font-ui: Inter, sans-serif; /* Fallback fonts */
          --font-mono: 'JetBrains Mono', monospace;
        }
        body {
          margin: 0;
          padding: 12px; /* Padding inside the iframe */
          font-family: var(--font-ui);
          background-color: var(--background);
          color: var(--foreground);
          box-sizing: border-box;
          height: 100%; /* Allow body to fill iframe for height calculation */
        }
        /* Ensure scripts run after DOM is ready */
        script { defer }
      </style>
      <style id="ai-provided-css">
        ${cssContent}
      </style>
    `;

    return `
      <!DOCTYPE html>
      <html lang="en">
        <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          ${themeStyle}
        </head>
        <body>
          ${htmlContent}
          ${jsContent ? `<script>${jsContent}</script>` : ''}
        </body>
      </html>
    `;
  }, [htmlContent, cssContent, jsContent, appTheme, resolvedTheme]);

  // Auto-adjust iframe height based on its content
  useEffect(() => {
    if (initialHeight === "auto" && iframeRef.current) {
      const iframe = iframeRef.current;
      const handleLoad = () => {
        if (iframe.contentWindow && iframe.contentWindow.document.body) {
          const contentHeight = iframe.contentWindow.document.body.scrollHeight;
          setIframeHeight(contentHeight > 0 ? contentHeight + 24 : 100); // Add some padding, min height 100px
        }
      };
      iframe.addEventListener('load', handleLoad);
      // Trigger load manually if srcDoc is already set for initial calculation
      if (iframe.contentWindow && iframe.contentWindow.document.readyState === 'complete') {
        handleLoad();
      }
      return () => iframe.removeEventListener('load', handleLoad);
    } else if (initialHeight !== "auto") {
        setIframeHeight(initialHeight);
    }
  }, [srcDoc, initialHeight]); // Re-run if srcDoc changes for auto-height

  return (
    <div className={cn("ai-live-preview-block-container my-4 overflow-hidden rounded-md border border-border bg-background shadow-sm", className)}>
      <iframe
        ref={iframeRef}
        srcDoc={srcDoc}
        title={title}
        sandbox="allow-scripts allow-same-origin allow-forms" // Common sandbox attributes
        className="w-full border-none"
        style={{ height: iframeHeight }}
        scrolling={initialHeight === "auto" ? "no" : "auto"} // Disable scroll if auto-heighting, otherwise allow
      />
    </div>
  );
};

export default LivePreviewBlock;

--- File: components\resizable.tsx ---
// components\resizable.tsx
"use client"

import type React from "react"
import { useRef, useState, useEffect, useCallback, type ReactNode } from "react"
import { cn } from "@/lib/utils"

interface ResizableProps {
  children: ReactNode
  direction: "horizontal" | "vertical"
  initialSize?: string | number // Renamed from defaultSize for clarity
  minSize?: string | number
  maxSize?: string | number
  className?: string
  resizerClassName?: string // Allow custom resizer style
  resizerSide?: "left" | "right" | "top" | "bottom" // Clarify which edge has the resizer
  onResize?: (newSize: number) => void // Callback for when size changes
  onResizeEnd?: (finalSize: number) => void // Callback for when resizing finishes
}

export function Resizable({
  children,
  direction,
  initialSize: initialSizeProp = "auto",
  minSize: minSizeProp = 0, // Default to 0 if not provided
  maxSize: maxSizeProp = "auto",
  className,
  resizerClassName: customResizerClassName,
  resizerSide, // Determine this based on layout if not provided
  onResize,
  onResizeEnd,
}: ResizableProps) {
  const panelRef = useRef<HTMLDivElement>(null)
  const parentRef = useRef<HTMLDivElement | null>(null) // To get parent dimensions

  const [isResizing, setIsResizing] = useState(false)
  const [currentSize, setCurrentSize] = useState<number | "auto">("auto")

  // Determine the side of the resizer based on common layouts
  const actualResizerSide =
    resizerSide || (direction === "horizontal" ? "right" : "bottom")

  // Convert string sizes (px, %) to numbers
  const convertSizeToPixels = useCallback(
    (size: string | number | undefined, dimension: "width" | "height"): number | undefined => {
      if (typeof size === 'number') return size;
      if (typeof size === 'string') {
        if (size.endsWith('px')) return parseFloat(size);
        if (size.endsWith('%') && parentRef.current) {
          const parentVal = dimension === 'width' ? parentRef.current.clientWidth : parentRef.current.clientHeight;
          return (parseFloat(size) / 100) * parentVal;
        }
        if (size === "auto") return undefined; // Let flexbox handle it or use initial calc
        return parseFloat(size); // Assume pixels if no unit
      }
      return undefined;
    },
    []
  );

  useEffect(() => {
    if (panelRef.current) {
      parentRef.current = panelRef.current.parentElement as HTMLDivElement;
      if (initialSizeProp === "auto") {
        // If auto, let it be auto, or measure it if needed for specific logic
        setCurrentSize("auto");
      } else {
        const initialPx = convertSizeToPixels(initialSizeProp, direction === "horizontal" ? "width" : "height");
        if (initialPx !== undefined) {
          setCurrentSize(initialPx);
        }
      }
    }
  }, [initialSizeProp, direction, convertSizeToPixels]);


  const handleMouseDown = useCallback(
    (e: React.MouseEvent) => {
      e.preventDefault()
      setIsResizing(true)

      const startMousePos = direction === "horizontal" ? e.clientX : e.clientY
      const panelElement = panelRef.current
      if (!panelElement) return;

      const initialPanelSize = direction === "horizontal" ? panelElement.offsetWidth : panelElement.offsetHeight;

      const handleMouseMove = (moveEvent: MouseEvent) => {
        if (!panelElement || !parentRef.current) return

        const currentMousePos = direction === "horizontal" ? moveEvent.clientX : moveEvent.clientY
        let delta = currentMousePos - startMousePos

        let newSizePx: number;

        if (direction === "horizontal") {
          newSizePx = actualResizerSide === "right" ? initialPanelSize + delta : initialPanelSize - delta;
        } else { // vertical
          newSizePx = actualResizerSide === "bottom" ? initialPanelSize + delta : initialPanelSize - delta;
        }

        const minPx = convertSizeToPixels(minSizeProp, direction === 'horizontal' ? 'width' : 'height') ?? 0;
        const maxPx = convertSizeToPixels(maxSizeProp, direction === 'horizontal' ? 'width' : 'height') ?? Infinity;

        newSizePx = Math.max(minPx, Math.min(newSizePx, maxPx));

        setCurrentSize(newSizePx)
        if (panelElement) {
            if (direction === "horizontal") {
                panelElement.style.width = `${newSizePx}px`;
                panelElement.style.flexBasis = `${newSizePx}px`; // Important for flex layouts
                panelElement.style.flexGrow = "0";
                panelElement.style.flexShrink = "0";
            } else {
                panelElement.style.height = `${newSizePx}px`;
                panelElement.style.flexBasis = `${newSizePx}px`;
                panelElement.style.flexGrow = "0";
                panelElement.style.flexShrink = "0";
            }
        }
        onResize?.(newSizePx)
      }

      const handleMouseUp = () => {
        setIsResizing(false)
        document.removeEventListener("mousemove", handleMouseMove)
        document.removeEventListener("mouseup", handleMouseUp)
        if (panelElement) {
            const finalSize = direction === "horizontal" ? panelElement.offsetWidth : panelElement.offsetHeight;
            onResizeEnd?.(finalSize);
        }
      }

      document.addEventListener("mousemove", handleMouseMove)
      document.addEventListener("mouseup", handleMouseUp)
    },
    [direction, minSizeProp, maxSizeProp, actualResizerSide, onResize, onResizeEnd, convertSizeToPixels]
  )

  const resizerBaseStyle: React.CSSProperties = {
    position: "absolute",
    zIndex: 10,
    userSelect: "none",
  }

  const resizerStyle: React.CSSProperties =
    direction === "horizontal"
      ? {
          ...resizerBaseStyle,
          top: 0,
          bottom: 0,
          width: "8px", // Increased hit area
          cursor: "col-resize",
          [actualResizerSide]: "-4px", // Center the 8px handle over the edge
        }
      : {
          ...resizerBaseStyle,
          left: 0,
          right: 0,
          height: "8px", // Increased hit area
          cursor: "row-resize",
          [actualResizerSide]: "-4px", // Center the 8px handle over the edge
        }

  const panelStyle: React.CSSProperties = {
    position: "relative", // Needed for absolute positioning of resizer
    overflow: "hidden", // Prevent content spill during resize
  };

  if (currentSize !== "auto") {
    if (direction === "horizontal") {
      panelStyle.width = `${currentSize}px`;
      panelStyle.flexBasis = `${currentSize}px`;
      panelStyle.flexGrow = 0;
      panelStyle.flexShrink = 0;
    } else {
      panelStyle.height = `${currentSize}px`;
      panelStyle.flexBasis = `${currentSize}px`;
      panelStyle.flexGrow = 0;
      panelStyle.flexShrink = 0;
    }
  } else {
     // If initial size is auto, let flexbox determine it.
     // Removed flexGrow: 1 to allow other flex items to grow.
    panelStyle.flexShrink = 1;
    if (direction === "horizontal") panelStyle.width = 'auto';
    else panelStyle.height = 'auto';
  }


  return (
    <div ref={panelRef} className={cn("resizable-panel", className)} style={panelStyle}>
      {children}
      <div
        className={cn(
          "resizer-handle bg-border/50 hover:bg-primary/50", // Basic visible styling
          isResizing && "bg-primary",
          customResizerClassName
        )}
        style={resizerStyle}
        onMouseDown={handleMouseDown}
      />
    </div>
  )
}

--- File: components\sidebar.tsx ---
// components/sidebar.tsx
"use client"

import React, { useState, useEffect, useCallback, useRef } from "react";
import { Tabs, TabsList, TabsTrigger, Button, Switch, Label } from "@/components/ui"; // Consolidated imports
import { Bot, Sparkles, Trash, Settings, Palette, MonitorPlay, Terminal as TerminalLucideIcon, Sun, Moon, Laptop, AlertCircle, ShieldCheck, ShieldOff, Search as SearchIconLucide } from "lucide-react";
import { toast } from "sonner";
import { getHighlighter, type Highlighter, type BundledTheme } from 'shiki';
import { useTheme } from "next-themes";
import { CODEFORGE_SYSTEM_PROMPT } from '@/lib/system-prompts';
import { editorThemesList, type EditorTheme } from '@/components/code-editor';
import { ChatTab } from './sidebar-parts/chat-tab';
import { SettingsTab } from './sidebar-parts/settings-tab';
import type { AiActionBlock, AiActionStep, MessageType } from './sidebar-parts/chat-interface';
import { generateId } from "@/lib/utils";


interface TypingState {
  charIndex: number;
}


export interface GeminiContent { // Exporting for use in ChatTab
  role: "user" | "model";
  parts: { text: string }[];
}

interface AiJsonResponse {
  project?: string | null;
  mainContentBefore?: string | null;
  steps?: Omit<AiActionStep, 'id' | 'currentStatus' | 'output' | 'errorMessage'>[] | null;
  mainContentAfter?: string | null;
  errorMessage?: string | null;
}


const shikiThemesListForSelect: { name: string; value: BundledTheme, type: 'light' | 'dark' }[] = [
  { name: "GitHub Dark", value: "github-dark", type: 'dark' },
  { name: "GitHub Light", value: "github-light", type: 'light' },
  { name: "Monokai", value: "monokai", type: 'dark' },
  { name: "Nord", value: "nord", type: 'dark' },
  { name: "Dracula", value: "dracula", type: 'dark' },
  { name: "One Dark Pro", value: "one-dark-pro", type: 'dark' },
  { name: "Solarized Light", value: "solarized-light", type: 'light' },
  { name: "Solarized Dark", value: "solarized-dark", type: 'dark' },
  { name: "Material Palenight", value: "material-theme-palenight", type: 'dark' },
  { name: "Min Dark", value: "min-dark", type: 'dark' },
  { name: "Min Light", value: "min-light", type: 'light' },
];

const terminalThemesListForSelect: { name: string; value: string }[] = [
    { name: "Default Dark", value: "dark" },
    { name: "Default Light", value: "light" },
    { name: "Ubuntu", value: "ubuntu" },
    { name: "PowerShell", value: "powershell" },
    { name: "CMD", value: "cmd" },
    { name: "Matrix", value: "matrix" },
];

interface SidebarProps {
  onRefreshFileTree: () => void;
  onAiOpenFileInEditor: (filePath: string) => Promise<void>;
  onAiExecuteTerminalCommand: (command: string) => Promise<{ success: boolean; output: string }>;
  setSelectedEditorTheme: React.Dispatch<React.SetStateAction<EditorTheme | undefined>>;
  setSelectedTerminalTheme: React.Dispatch<React.SetStateAction<string | undefined>>;
  currentEditorTheme?: EditorTheme;
  currentTerminalTheme?: string;
  isTerminalInputDisabled: boolean;
  setIsTerminalInputDisabled: React.Dispatch<React.SetStateAction<boolean>>;
}

export default function Sidebar({
    onRefreshFileTree, onAiOpenFileInEditor, onAiExecuteTerminalCommand,
    setSelectedEditorTheme: setAppSelectedEditorTheme, setSelectedTerminalTheme: setAppSelectedTerminalTheme,
    currentEditorTheme: appCurrentEditorTheme, currentTerminalTheme: appCurrentTerminalTheme,
    isTerminalInputDisabled, setIsTerminalInputDisabled
}: SidebarProps) {
  const [messages, setMessages] = useState<MessageType[]>([
    {
      id: "1",
      role: "assistant",
      content: "Hello! I'm CodeForge, your AI coding assistant. Please set your Gemini API key in settings to begin.",
      timestamp: new Date(),
      isTyping: false,
    },
  ]);
  const [inputValue, setInputValue] = useState("");
  const [apiKeyInputValue, setApiKeyInputValue] = useState("");
  const [activeApiKey, setActiveApiKey] = useState<string | null>(null);
  const [isVerifyingApiKey, setIsVerifyingApiKey] = useState(false);
  const [availableModels, setAvailableModels] = useState<GeminiModel[]>([]);
  const [selectedModel, setSelectedModel] = useState<string>("");
  const [isLoadingModels, setIsLoadingModels] = useState(false);
  const [isAISending, setIsAISending] = useState(false);
  const [copiedId, setCopiedId] = useState<string | null>(null);
  const [highlighter, setHighlighter] = useState<Highlighter | null>(null);
  const [enableCopy] = useState(true);
  const [typingStates, setTypingStates] = useState<Record<string, TypingState>>({});
  const TYPING_SPEED = 1; 

  const stopGeneratingRef = useRef(false);

  const { theme: appTheme, setTheme: setAppTheme, resolvedTheme } = useTheme();

  const getInitialShikiTheme = useCallback((currentAppTheme?: string, currentResolvedTheme?: string) => {
    let themeModeToUse = 'dark';
    if (currentAppTheme && currentAppTheme !== 'system') {
        if (currentAppTheme === 'light' || currentAppTheme === 'sandstone') themeModeToUse = 'light';
        else if (currentAppTheme === 'dark' || currentAppTheme === 'midnight-blue') themeModeToUse = 'dark';
        else if (currentResolvedTheme) themeModeToUse = currentResolvedTheme;
    } else if (currentResolvedTheme) {
        themeModeToUse = currentResolvedTheme;
    }
    return themeModeToUse === 'dark' ? 'github-dark' : 'github-light';
  }, []);

  const [selectedShikiTheme, setSelectedShikiTheme] = useState<BundledTheme>(getInitialShikiTheme(appTheme, resolvedTheme));


  const [selectedEditorThemeInternal, setSelectedEditorThemeInternal] = useState<EditorTheme | undefined>(
    appCurrentEditorTheme
  );
  const [selectedTerminalThemeInternal, setSelectedTerminalThemeInternal] = useState<string | undefined>(
    appCurrentTerminalTheme
  );

  useEffect(() => {
    let currentMode: 'light' | 'dark' = 'light';

    if (appTheme === 'system') {
      currentMode = resolvedTheme === 'dark' ? 'dark' : 'light';
    } else if (appTheme === 'light' || appTheme === 'sandstone') {
      currentMode = 'light';
    } else if (appTheme === 'dark' || appTheme === 'midnight-blue') {
      currentMode = 'dark';
    } else if (resolvedTheme) {
        currentMode = resolvedTheme as 'light' | 'dark';
    }

    const currentShikiThemeInfo = shikiThemesListForSelect.find(t => t.value === selectedShikiTheme);
    if (currentShikiThemeInfo?.type !== currentMode) {
      setSelectedShikiTheme(currentMode === 'dark' ? 'github-dark' : 'github-light');
    }

    const newEditorTheme: EditorTheme = currentMode === 'dark' ? 'vs-dark' : 'vs';
    if (selectedEditorThemeInternal !== newEditorTheme) {
      setSelectedEditorThemeInternal(newEditorTheme);
      if (setAppSelectedEditorTheme) setAppSelectedEditorTheme(newEditorTheme);
    }
    
    const newTerminalTheme = currentMode === 'dark' ? 'dark' : 'light';
    if (selectedTerminalThemeInternal !== newTerminalTheme) {
      setSelectedTerminalThemeInternal(newTerminalTheme);
      if (setAppSelectedTerminalTheme) setAppSelectedTerminalTheme(newTerminalTheme);
    }
  }, [appTheme, resolvedTheme, selectedShikiTheme, selectedEditorThemeInternal, selectedTerminalThemeInternal, setAppSelectedEditorTheme, setAppSelectedTerminalTheme]);


  useEffect(() => {
    let isMounted = true;
    async function initShiki() {
      try {
        const shikiHighlighter = await getHighlighter({
          themes: shikiThemesListForSelect.map(t => t.value),
          langs: [
            'javascript', 'js', 'typescript', 'ts', 'python', 'py', 'jsx', 'tsx',
            'html', 'css', 'json', 'yaml', 'markdown', 'md', 'bash', 'shell', 'sh',
            'java', 'csharp', 'cs', 'cpp', 'c', 'go', 'rust', 'php', 'ruby', 'sql',
            'plaintext', 'text'
          ],
        });
        if (isMounted) setHighlighter(shikiHighlighter);
      } catch (error) {
        console.error("Failed to initialize Shiki highlighter:", error);
        if (isMounted) toast.error("Code syntax highlighter failed to load.");
      }
    }
    initShiki();
    return () => { isMounted = false; };
  }, []);

  useEffect(() => {
    let activeIntervals: NodeJS.Timeout[] = [];
    messages.forEach(message => {
      if (message.isTyping && message.role === 'assistant') {
        const textToType = message._currentTextPart === 'before' ? message._mainContentBefore : message._mainContentAfter;

        if (!textToType) {
          setMessages(prevMsgs => prevMsgs.map(m => m.id === message.id ? { ...m, isTyping: false } : m));
          setTypingStates(prev => {
            const newStates = {...prev};
            if (newStates[message.id]) delete newStates[message.id];
            return newStates;
          });
          return;
        }

        const intervalId = setInterval(() => {
          if (stopGeneratingRef.current && message.id === messages.find(m => m.isTyping && m.role === 'assistant')?.id) {
            clearInterval(intervalId);
            setMessages(prevMsgs => prevMsgs.map(m => {
                if (m.id === message.id) {
                    const currentProgress = typingStates[m.id]?.charIndex || 0;
                    const fullText = m._currentTextPart === 'before' ? m._mainContentBefore : m._mainContentAfter;
                    return { ...m, isTyping: false, content: (fullText || "").substring(0, currentProgress) + " [Stopped]" };
                }
                return m;
            }));
            setTypingStates(prev => {
                const newStates = {...prev};
                if (newStates[message.id]) delete newStates[message.id];
                return newStates;
            });
            return;
          }

          setTypingStates(currentStates => {
            const stateForMessage = currentStates[message.id] || { charIndex: 0 };
            let newCharIndex = stateForMessage.charIndex;

            const currentMessageBeingTyped = messages.find(m => m.id === message.id);
            const currentTextToType = currentMessageBeingTyped
              ? (currentMessageBeingTyped._currentTextPart === 'before' ? currentMessageBeingTyped._mainContentBefore : currentMessageBeingTyped._mainContentAfter)
              : textToType;


            if (newCharIndex < (currentTextToType || "").length) {
              newCharIndex++;
              const newDisplayedText = (currentTextToType || "").substring(0, newCharIndex);
              const isFinished = newCharIndex >= (currentTextToType || "").length;

              setMessages(prevMsgs => prevMsgs.map(m =>
                  m.id === message.id ? { ...m, content: newDisplayedText, isTyping: !isFinished } : m
              ));

              if (isFinished) {
                clearInterval(intervalId);
                const nextTypingStates = { ...currentStates };
                delete nextTypingStates[message.id];
                return nextTypingStates;
              }
              return { ...currentStates, [message.id]: { charIndex: newCharIndex } };
            } else {
              clearInterval(intervalId);
              setMessages(prevMsgs => prevMsgs.map(m => m.id === message.id && m.isTyping ? { ...m, isTyping: false } : m));
              const nextTypingStates = { ...currentStates };
              delete nextTypingStates[message.id];
              return nextTypingStates;
            }
          });
        }, TYPING_SPEED);
        activeIntervals.push(intervalId);
      } else if (!message.isTyping && typingStates[message.id]) {
         setTypingStates(prev => {
             const newStates = {...prev};
             if (newStates[message.id]) delete newStates[message.id];
             return newStates;
         });
      }
    });

    if (stopGeneratingRef.current && !messages.some(m => m.isTyping && m.role === 'assistant')) {
        stopGeneratingRef.current = false;
    }

    return () => { activeIntervals.forEach(clearInterval); };
  }, [messages, TYPING_SPEED, setMessages, setTypingStates, stopGeneratingRef]);


  const handleVerifyApiKey = useCallback(async () => {
    if (!apiKeyInputValue.trim()) { toast.error("API Key cannot be empty."); return; }
    setIsVerifyingApiKey(true); setIsLoadingModels(true); setAvailableModels([]); setSelectedModel("");
    try {
      const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models?key=${apiKeyInputValue.trim()}`);
      if (!response.ok) {
        const errorData = await response.json().catch(() => ({}));
        throw new Error(errorData?.error?.message || `Failed to fetch models. Status: ${response.status}`);
      }
      const data = await response.json();
      const fetchedModels: GeminiModel[] = data.models
        .filter((model: any) => model.supportedGenerationMethods?.includes("generateContent"))
        .map((model: any) => ({ id: model.name, name: model.displayName || model.name }));

      if (fetchedModels.length === 0) {
        toast.warning("No suitable models (that support generateContent) found. Check key/permissions.", { duration: 5000 });
        setActiveApiKey(null);
      } else {
        setAvailableModels(fetchedModels); setActiveApiKey(apiKeyInputValue.trim());
        const flashModel = fetchedModels.find(m => m.id.includes('flash'));
        const proModel = fetchedModels.find(m => m.id.includes('pro') && !m.id.includes('vision'));

        if (flashModel) {
            setSelectedModel(flashModel.id);
        } else if (proModel) {
            setSelectedModel(proModel.id);
        } else {
            setSelectedModel(fetchedModels[0].id);
        }
        toast.success("API Key set and models loaded!");
      }
    } catch (error: any) {
      console.error("Error verifying API key:", error);
      toast.error(`Error: ${error.message || "Could not verify API key."}`, { duration: 7000 });
      setActiveApiKey(null); setAvailableModels([]);
    } finally {
      setIsVerifyingApiKey(false); setIsLoadingModels(false);
    }
  }, [apiKeyInputValue]);

  const handleSendMessage = useCallback(async (
    isReprompt: boolean = false,
    repromptHistoryWithContext?: GeminiContent[]
  ) => {
    if (!inputValue.trim() && !isReprompt) {
      toast.error("Message cannot be empty.");
      return;
    }
    if (!activeApiKey || !selectedModel) {
      if (!activeApiKey) toast.error("Set API Key in Settings.");
      if (!selectedModel && activeApiKey) toast.error("Select a model in Settings.");
      return;
    }
    stopGeneratingRef.current = false;
    const currentInput = inputValue;

    if (!isReprompt) {
      const newUserMessage: MessageType = { id: Date.now().toString(), role: "user", content: currentInput, timestamp: new Date(), isTyping: false };
      setMessages((prev) => [...prev, newUserMessage]);
      setInputValue("");
    }
    setIsAISending(true);

    const contentsForApi: GeminiContent[] = repromptHistoryWithContext
      ? repromptHistoryWithContext
      : [ 
          ...messages
            .filter(msg => !(msg.role === 'assistant' && msg.content.startsWith("Hello! I'm CodeForge") && messages.length <= 2))
            .filter(msg => msg.role === 'user' || (msg.role === 'assistant' && !msg.isTyping && !msg.actionBlock && !msg._isSearchResultContext)) 
            .map(msg => ({ role: msg.role === 'user' ? 'user' : 'model', parts: [{ text: msg.content }] })),
          { role: 'user' as const, parts: [{ text: currentInput }] } 
        ];
    
    const apiRequestBody = {
      contents: contentsForApi,
      systemInstruction: { parts: [{ text: CODEFORGE_SYSTEM_PROMPT }] }
    };

    const aiMessageId = (Date.now() + 1).toString();
    const placeholderAiMessage: MessageType = {
      id: aiMessageId,
      role: "assistant",
      content: "",
      actionBlock: null,
      timestamp: new Date(),
      isTyping: false, 
      _mainContentBefore: "",
      _mainContentAfter: "",
      _actionsProcessed: false,
      _currentTextPart: 'before',
    };
    setMessages((prev) => [...prev, placeholderAiMessage]);

    try {
      const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/${selectedModel}:generateContent?key=${activeApiKey}`, {
        method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify(apiRequestBody),
      });

      let rawAiResponseText = "{\"mainContentBefore\": \"Sorry, I couldn't get a response.\", \"steps\": null, \"mainContentAfter\": null, \"errorMessage\": \"No content from API.\"}"
      if (response.ok) {
        const data = await response.json();
        if (data.candidates?.[0]?.content?.parts?.[0]?.text) {
          rawAiResponseText = data.candidates[0].content.parts[0].text;
        } else if (data.promptFeedback?.blockReason) {
          rawAiResponseText = JSON.stringify({
            mainContentBefore: `Request blocked: ${data.promptFeedback.blockReason}. ${data.promptFeedback.blockReasonMessage || ''}`,
            steps: null,
            mainContentAfter: null,
            errorMessage: `Blocked: ${data.promptFeedback.blockReason}`
          });
          toast.warning(`Request blocked: ${data.promptFeedback.blockReason}`, { duration: 7000 });
        }
      } else {
         const errorData = await response.json().catch(() => ({}));
         rawAiResponseText = JSON.stringify({
            mainContentBefore: `API request failed. Status: ${response.status}. ${errorData?.error?.message || ''}`,
            steps: null,
            mainContentAfter: null,
            errorMessage: `API Error: ${response.status}`
         });
      }

      let parsedResponse: AiJsonResponse;
      let finalMainContentBefore = "";
      let finalActionBlock: AiActionBlock | null = null;
      let finalMainContentAfter = "";
      let jsonStringToParse = rawAiResponseText.trim(); 

      try {
        if (jsonStringToParse.startsWith("```json")) {
          jsonStringToParse = jsonStringToParse.substring(7);
        } else if (jsonStringToParse.startsWith("```")) {
           jsonStringToParse = jsonStringToParse.substring(3);
        }
        if (jsonStringToParse.endsWith("```")) {
          jsonStringToParse = jsonStringToParse.substring(0, jsonStringToParse.length - 3);
        }
        jsonStringToParse = jsonStringToParse.trim();

        parsedResponse = JSON.parse(jsonStringToParse);
        finalMainContentBefore = parsedResponse.mainContentBefore || "";
        if (parsedResponse.steps && parsedResponse.steps.length > 0) {
          finalActionBlock = {
            project: parsedResponse.project || undefined,
            steps: parsedResponse.steps.map(step => ({
              ...step,
              id: generateId(),
              currentStatus: 'idle',
            }))
          };
        }
        finalMainContentAfter = parsedResponse.mainContentAfter || "";

        if (parsedResponse.errorMessage) {
          finalMainContentBefore = `${finalMainContentBefore}${finalMainContentBefore ? '\n\n' : ''}**AI Error:** ${parsedResponse.errorMessage}`;
          toast.error(`AI reported an error: ${parsedResponse.errorMessage}`);
        }
      } catch (jsonParseError) {
        console.error("Failed to parse AI JSON response:", jsonParseError, "Raw response was:", rawAiResponseText, "Attempted to parse:", jsonStringToParse);
        finalMainContentBefore = `Error: AI response was not valid JSON.\n\nRaw response:\n\`\`\`text\n${rawAiResponseText}\n\`\`\``;
        toast.error("AI response was not valid JSON. Displaying raw output.");
      }

      if (stopGeneratingRef.current) {
        setMessages(prev => prev.map(msg => msg.id === aiMessageId ? { ...msg, content: (typingStates[aiMessageId] ? (msg._currentTextPart === 'before' ? msg._mainContentBefore : msg._mainContentAfter) : msg.content || "").substring(0, typingStates[aiMessageId]?.charIndex || 0) + " [Stopped by user]", actionBlock: null, isTyping: false, _actionsProcessed: true } : msg));
        setIsAISending(false);
        stopGeneratingRef.current = false;
        return;
      }

      setMessages(prev => prev.map(msg =>
        msg.id === aiMessageId ? {
          ...msg,
          content: "",
          actionBlock: finalActionBlock,
          isTyping: !!(finalMainContentBefore),
          _mainContentBefore: finalMainContentBefore,
          _mainContentAfter: finalMainContentAfter,
          _currentTextPart: 'before',
          _actionsProcessed: !finalActionBlock, 
        } : msg
      ));

      if (finalMainContentBefore && TYPING_SPEED > 0) {
        setTypingStates(prev => ({...prev, [aiMessageId]: { charIndex: 0 }}));
      } else if (!finalMainContentBefore && finalActionBlock) {
        // Action processing will be handled by ChatInterface's useEffect
      } else if (!finalMainContentBefore && !finalActionBlock && finalMainContentAfter) {
         setMessages(prev => prev.map(msg =>
            msg.id === aiMessageId ? {
            ...msg,
            content: "",
            isTyping: true,
            _currentTextPart: 'after',
            _mainContentBefore: finalMainContentAfter, 
            _mainContentAfter: "", 
            _actionsProcessed: true, 
            } : msg
        ));
        if (TYPING_SPEED > 0) {
            setTypingStates(prev => ({...prev, [aiMessageId]: { charIndex: 0 }}));
        }
      } else if (!finalMainContentBefore && !finalActionBlock && !finalMainContentAfter) {
        setMessages(prev => prev.map(msg => msg.id === aiMessageId ? {...msg, content: "[Empty Response]", isTyping: false, _actionsProcessed: true} : msg));
      }


    } catch (error: any) {
      console.error("Error sending message:", error);
      const errMsg = `Error: ${error.message || "Could not connect."}`;
      toast.error(errMsg, { duration: 7000 });
      setMessages(prev => prev.map(msg => msg.id === aiMessageId ? { ...msg, content: errMsg, isTyping: false, _actionsProcessed: true } : msg));
      setTypingStates(prev => { const n = {...prev}; delete n[aiMessageId]; return n; });
    } finally {
      setIsAISending(false);
    }
  }, [inputValue, activeApiKey, selectedModel, messages, TYPING_SPEED, setTypingStates, setMessages, setInputValue, setIsAISending]);

  const handleStopGenerating = useCallback(() => {
    stopGeneratingRef.current = true;
    setIsAISending(false);
    setMessages(prevMessages =>
      prevMessages.map(msg => {
        if (msg.role === 'assistant' && msg.isTyping) {
          return { ...msg, isTyping: false }; 
        }
        return msg;
      })
    );
    toast.info("AI response generation stopped.");
  }, [setMessages, setIsAISending]);

  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {
    if (e.key === "Enter" && !e.shiftKey) { e.preventDefault(); handleSendMessage(); }
  };
  const copyToClipboard = (text: string, id: string) => {
    navigator.clipboard.writeText(text); setCopiedId(id); toast.success("Copied!");
    setTimeout(() => setCopiedId(null), 2000);
  };
  const clearChat = () => {
    setMessages([{ id: Date.now().toString(), role: "assistant", content: "Chat cleared. How can I help?", timestamp: new Date(), isTyping: false }]);
    toast.info("Chat cleared.");
  };

  return (
    <div className="h-full flex flex-col bg-card text-card-foreground">
      <div className="border-b border-border p-3 flex items-center justify-between shrink-0">
        <h2 className="text-lg font-semibold flex items-center">
          <Bot className="mr-2 h-5 w-5" />
          AI Assistant
        </h2>
        <div className="flex items-center space-x-2">
          <Button variant="ghost" size="icon" onClick={clearChat} title="Clear chat">
            <Trash className="h-4 w-4" />
          </Button>
        </div>
      </div>

      <Tabs defaultValue="chat" className="flex-1 flex flex-col overflow-hidden">
        <TabsList className="w-full grid grid-cols-2 shrink-0">
          <TabsTrigger value="chat" className="flex items-center">
            <Sparkles className="mr-2 h-4 w-4" /> Chat
          </TabsTrigger>
          <TabsTrigger value="settings" className="flex items-center">
            <Settings className="mr-2 h-4 w-4" /> Settings
          </TabsTrigger>
        </TabsList>

        <ChatTab
          messages={messages}
          setMessages={setMessages}
          inputValue={inputValue}
          onInputChange={setInputValue}
          onSendMessage={handleSendMessage}
          onKeyDown={handleKeyDown}
          isAISending={isAISending}
          activeApiKey={activeApiKey}
          selectedModel={selectedModel}
          copiedId={copiedId}
          onCopyToClipboard={copyToClipboard}
          highlighter={highlighter}
          selectedShikiTheme={selectedShikiTheme}
          enableCopy={enableCopy}
          typingSpeed={TYPING_SPEED}
          onStopGenerating={handleStopGenerating}
          onAiOpenFileInEditor={onAiOpenFileInEditor}
          onAiExecuteTerminalCommand={onAiExecuteTerminalCommand}
          onRefreshFileTree={onRefreshFileTree}
        />

        <SettingsTab
          apiKeyInputValue={apiKeyInputValue}
          onApiKeyInputChange={setApiKeyInputValue}
          onVerifyApiKey={handleVerifyApiKey}
          isVerifyingApiKey={isVerifyingApiKey}
          activeApiKey={activeApiKey}
          availableModels={availableModels}
          selectedModel={selectedModel}
          onModelChange={setSelectedModel}
          isLoadingModels={isLoadingModels}
          appTheme={appTheme}
          onAppThemeChange={(value) => { if (setAppTheme) setAppTheme(value); }}
          selectedShikiTheme={selectedShikiTheme}
          onShikiThemeChange={(value) => setSelectedShikiTheme(value as BundledTheme)}
          shikiThemesList={shikiThemesListForSelect.map(t => ({name: t.name, value: t.value}))}
          selectedEditorTheme={selectedEditorThemeInternal || (resolvedTheme === 'dark' ? 'vs-dark' : 'vs')}
          onEditorThemeChange={(value) => { setSelectedEditorThemeInternal(value as EditorTheme); if(setAppSelectedEditorTheme) setAppSelectedEditorTheme(value as EditorTheme);}}
          editorThemesList={editorThemesList}
          selectedTerminalTheme={selectedTerminalThemeInternal || (resolvedTheme === 'dark' ? 'dark' : 'light')}
          onTerminalThemeChange={(value) => { setSelectedTerminalThemeInternal(value); if(setAppSelectedTerminalTheme) setAppSelectedTerminalTheme(value);}}
          terminalThemesList={terminalThemesListForSelect}
          isTerminalInputDisabled={isTerminalInputDisabled}
          setIsTerminalInputDisabled={setIsTerminalInputDisabled}
        />
      </Tabs>
    </div>
  );
}

--- File: components\terminal.tsx ---
// --- File: components/terminal.tsx ---
"use client"
import React from "react";
import type { HTMLAttributes } from "react"
import { useState, useRef, useEffect, useCallback } from "react"
import { Plus, X, Shell, Loader2, AlertCircle } from "lucide-react"
import { formatTerminalOutput } from "@/lib/html-utils"
import { cn } from "@/lib/utils"
import { PowerShellService, getPowerShellInstance, removePowerShellInstance, type PowerShellOutput } from "@/lib/powershell-service"
import '@/styles/terminal.css'

interface TerminalCommand {
  command: string
  output: string
  isError?: boolean
}

interface TerminalProps extends HTMLAttributes<HTMLDivElement> {
  theme?: string
  workingDirectory?: string
  isInputDisabledBySetting?: boolean;
}

export interface TerminalRef {
  executeExternalCommand: (command: string) => Promise<{ success: boolean; output: string }>;
}


interface TabCompletionState {
  completions: string[];
  selectedIndex: number;
  originalInput: string;
}

const Terminal = React.forwardRef<TerminalRef, TerminalProps>(({ theme = "dark", workingDirectory, isInputDisabledBySetting = false, className, ...props }, ref) => {
  const [activeTabId, setActiveTabId] = useState("terminal-1")
  const [tabs, setTabs] = useState([{ id: "terminal-1", name: "PowerShell 1", type: "powershell" as const }])
  const [commandHistory, setCommandHistory] = useState<Record<string, TerminalCommand[]>>({
    "terminal-1": [],
  })
  const [inputValue, setInputValue] = useState<string>("")
  const [currentPath, setCurrentPath] = useState(workingDirectory || "~")
  const [historyIndex, setHistoryIndex] = useState(-1)
  const [commandStack, setCommandStack] = useState<Record<string, string[]>>({
    "terminal-1": [],
  })
  const [completions, setCompletions] = useState<TabCompletionState>({
    completions: [],
    selectedIndex: 0,
    originalInput: "",
  });
  const [isExecuting, setIsExecuting] = useState<Record<string, boolean>>({ "terminal-1": true });

  const inputRef = useRef<HTMLInputElement>(null)
  const contentRef = useRef<HTMLDivElement>(null)

  // console.log(`[Terminal ${activeTabId}] Component RENDER. Current Path: ${currentPath}, Input: "${inputValue}", Executing: ${isExecuting[activeTabId]}, InputDisabledBySetting: ${isInputDisabledBySetting}`);


  React.useImperativeHandle(ref, () => ({
    executeExternalCommand: async (command: string) => {
      // console.log(`[Terminal ${activeTabId}] executeExternalCommand CALLED with command: "${command}"`);
      if (isInputDisabledBySetting) {
        console.warn(`[Terminal ${activeTabId}] executeExternalCommand: Input is disabled by user setting. Command "${command}" not executed.`);
        const disabledMsg = "Terminal input is currently disabled by user setting. Command not executed.";
        setCommandHistory(prev => ({
            ...prev,
            [activeTabId]: [
              ...(prev[activeTabId] || []),
              { command: `(Blocked External) ${command}`, output: formatTerminalOutput(disabledMsg), isError: true }
            ]
          }));
        return { success: false, output: disabledMsg };
      }
      if (!activeTabId) {
        console.error(`[Terminal ${activeTabId}] executeExternalCommand: No active terminal tab.`);
        return { success: false, output: "No active terminal tab." };
      }
      // console.log(`[Terminal ${activeTabId}] Executing external command: ${command}`);
      setIsExecuting(prev => ({ ...prev, [activeTabId]: true }));

      setCommandHistory(prev => ({
        ...prev,
        [activeTabId]: [
          ...(prev[activeTabId] || []),
          { command: command, output: '[Executing external command...]', isError: false }
        ]
      }));

      const pwsh = getPowerShellInstance(activeTabId);
      try {
        const result = await pwsh.executeCommand(command);
        // console.log(`[Terminal ${activeTabId}] executeExternalCommand: Result from PowerShellService:`, result);
        return { success: !result.isError, output: result.data };
      } catch (error) {
        const errorMsg = error instanceof Error ? error.message : "Unknown error executing external command";
        console.error(`[Terminal ${activeTabId}] executeExternalCommand: Error:`, errorMsg);
        setCommandHistory(prev => {
            const currentTabHistory = prev[activeTabId] || [];
            const lastEntryIndex = currentTabHistory.length -1;
            if(lastEntryIndex >=0 && currentTabHistory[lastEntryIndex].command === command) {
                const updatedHistory = [...currentTabHistory];
                updatedHistory[lastEntryIndex] = {...updatedHistory[lastEntryIndex], output: formatTerminalOutput(errorMsg), isError: true};
                return {...prev, [activeTabId]: updatedHistory};
            }
            return prev;
        });
        setIsExecuting(prev => ({ ...prev, [activeTabId]: false }));
        return { success: false, output: errorMsg };
      }
    }
  }));

  const currentTabIsExecuting = !!isExecuting[activeTabId];
  // isInputEffectivelyDisabledForExecution is used to gate actual command sending
  const isInputEffectivelyDisabledForExecution = currentTabIsExecuting || isInputDisabledBySetting;
  // shouldFocusInput determines if the input field itself should try to grab focus
  const shouldFocusInput = activeTabId && inputRef.current && !currentTabIsExecuting;


  useEffect(() => {
    // console.log(`[Terminal ${activeTabId}] MOUNT/UPDATE useEffect for [activeTabId, workingDirectory]. Initializing. Setting isExecuting = true. Current workingDirectory prop: ${workingDirectory}`);
    setIsExecuting(prev => ({ ...prev, [activeTabId]: true }));

    const pwsh = getPowerShellInstance(activeTabId, workingDirectory);
    // console.log(`[Terminal ${activeTabId}] Got PowerShell instance. Initial CWD for instance: ${pwsh.initialWorkingDir}`);


    const handleOutput = (output: PowerShellOutput) => {
      // console.log(`[Terminal ${activeTabId}] EVENT 'output' received. Path: "${output.currentPath}", Error: ${output.isError}, Data: "${output.data.substring(0,50)}...". Setting isExecuting = false.`);
      if (!pwsh.isInitialized && !output.isError) {
        // console.log(`%c[Terminal ${activeTabId}] Calling pwsh.setAsInitialized from handleOutput. Path: ${output.currentPath}`, 'color: blue; font-weight: bold;');
        pwsh.setAsInitialized(output.currentPath);
      }

      setCommandHistory(prev => {
        const tabHistory = prev[activeTabId] || [];
        if (tabHistory.length > 0) {
          const lastCommandIndex = tabHistory.length - 1;
          // const lastCommand = tabHistory[lastCommandIndex]; // Not strictly needed here

          const updatedHistory = [...tabHistory];
          updatedHistory[lastCommandIndex] = {
            ...updatedHistory[lastCommandIndex], // Preserve the original command
            output: formatTerminalOutput(output.data),
            isError: output.isError
          };
          return { ...prev, [activeTabId]: updatedHistory };
        }
        // This case might happen if initial prompt output comes before any user command
        return { ...prev, [activeTabId]: [...tabHistory, { command: "[System Info]", output: formatTerminalOutput(output.data), isError: output.isError }] };
      });
      setCurrentPath(output.currentPath);
      setIsExecuting(prev => ({ ...prev, [activeTabId]: false }));
    };

    const handleInitialPath = ({ currentPath: pathValue }: { currentPath: string }) => {
      // console.log(`[Terminal ${activeTabId}] EVENT 'initialPath' received. Path: "${pathValue}". Setting isExecuting = false.`);
      // console.log(`%c[Terminal ${activeTabId}] Calling pwsh.setAsInitialized from handleInitialPath. Path: ${pathValue}`, 'color: blue; font-weight: bold;');
      pwsh.setAsInitialized(pathValue);
      setCurrentPath(pathValue);
      setCommandHistory(prev => ({
        ...prev,
        [activeTabId]: [...(prev[activeTabId] || []), { command: "[Session Ready]", output: `Working directory: ${pathValue}`, isError: false }]
      }));
      setIsExecuting(prev => ({ ...prev, [activeTabId]: false }));
    };

    const handleClose = () => {
      // console.log(`[Terminal ${activeTabId}] EVENT 'close' received. Setting isExecuting = false.`);
      setCommandHistory(prev => ({
        ...prev,
        [activeTabId]: [...(prev[activeTabId] || []), { command: "", output: formatTerminalOutput("[Session Closed]"), isError: true }]
      }));
      setIsExecuting(prev => ({ ...prev, [activeTabId]: false }));
    };

    pwsh.on('output', handleOutput);
    pwsh.on('initialPath', handleInitialPath);
    pwsh.on('close', handleClose);

    // console.log(`[Terminal ${activeTabId}] Calling pwsh.initializeSessionIfNotInitialized().`);
    pwsh.initializeSessionIfNotInitialized()
      .then(() => {
        // console.log(`[Terminal ${activeTabId}] initializeSessionIfNotInitialized promise RESOLVED.`);
      })
      .catch(err => {
          console.error(`[Terminal ${activeTabId}] Error from initializeSessionIfNotInitialized promise:`, err);
          setIsExecuting(prev => ({ ...prev, [activeTabId]: false }));
          setCommandHistory(prev => ({
            ...prev,
            [activeTabId]: [...(prev[activeTabId] || []), { command: "[Session Error]", output: formatTerminalOutput(`Initialization failed: ${(err as Error).message}`), isError: true }]
          }));
      });

    return () => {
      // console.log(`[Terminal ${activeTabId}] CLEANUP useEffect for [activeTabId, workingDirectory]. Removing listeners.`);
      pwsh.off('output', handleOutput);
      pwsh.off('initialPath', handleInitialPath);
      pwsh.off('close', handleClose);
    };
  }, [activeTabId, workingDirectory]); // Added workingDirectory as it's used in getPowerShellInstance

  const addTab = () => {
    const newId = `terminal-${Date.now()}`
    // console.log(`[Terminal] Adding new tab ${newId}`);
    setTabs([...tabs, { id: newId, name: `PowerShell ${tabs.length + 1}`, type: "powershell" as const }])
    setCommandHistory(prev => ({ ...prev, [newId]: [] }))
    setCommandStack(prev => ({ ...prev, [newId]: [] }))
    setIsExecuting(prev => ({ ...prev, [newId]: true }));
    setActiveTabId(newId)
  }

  const removeTab = (id: string) => {
    if (tabs.length === 1) return
    // console.log(`[Terminal] Removing tab ${id}`);
    removePowerShellInstance(id)
    const newTabs = tabs.filter((tab) => tab.id !== id)
    setTabs(newTabs)

    const newIsExecuting = { ...isExecuting };
    delete newIsExecuting[id];
    setIsExecuting(newIsExecuting);

    if (activeTabId === id) {
      const newActiveTabId = newTabs[0]?.id || "";
      // console.log(`[Terminal] Active tab was removed, switching to ${newActiveTabId}`);
      setActiveTabId(newActiveTabId);
    }
    setCommandHistory(prev => { const newState = { ...prev }; delete newState[id]; return newState; });
    setCommandStack(prev => { const newState = { ...prev }; delete newState[id]; return newState; });
  }

  const executeUserCommand = async (command: string) => {
    // console.log(`[Terminal ${activeTabId}] executeUserCommand CALLED with command: "${command}"`);
    if (isInputDisabledBySetting) {
        console.warn(`[Terminal ${activeTabId}] executeUserCommand: Input is disabled by user setting. Command "${command}" NOT EXECUTED.`);
        setCommandHistory(prev => ({
            ...prev,
            [activeTabId]: [
              ...(prev[activeTabId] || []),
              { command: command, output: formatTerminalOutput("Terminal input is currently disabled by user setting. Command not executed."), isError: true }
            ]
          }));
        setInputValue("");
        return;
    }
    if (!command.trim() || currentTabIsExecuting) {
      // console.log(`[Terminal ${activeTabId}] executeUserCommand: Command empty or already executing. Input: "${command}", Executing: ${currentTabIsExecuting}`);
      return;
    }
    // console.log(`[Terminal ${activeTabId}] executeUserCommand: Processing "${command}". Setting isExecuting = true.`);
    setIsExecuting(prev => ({ ...prev, [activeTabId]: true }));

    const currentStack = commandStack[activeTabId] || [];
    setCommandStack(prev => ({ ...prev, [activeTabId]: [...currentStack, command] }));
    setHistoryIndex(-1);

    setCommandHistory(prev => ({
      ...prev,
      [activeTabId]: [
        ...(prev[activeTabId] || []),
        { command: command, output: '', isError: false } // Output will be filled by the event handler
      ]
    }));

    setInputValue("");
    setCompletions({ completions: [], selectedIndex: 0, originalInput: "" });

    if (command.toLowerCase() === "clear" || command.toLowerCase() === "cls") {
      // console.log(`[Terminal ${activeTabId}] executeUserCommand: Clearing history.`);
      setCommandHistory(prev => ({ ...prev, [activeTabId]: [] }));
      const pwsh = getPowerShellInstance(activeTabId);
      await pwsh.executeCommand("Write-Host -NoNewline ''"); // To get prompt back
      // console.log(`[Terminal ${activeTabId}] executeUserCommand: Clear command finished.`);
      return;
    }

    const pwsh = getPowerShellInstance(activeTabId);
    // console.log(`[Terminal ${activeTabId}] executeUserCommand: Sending command "${command}" to PowerShellService.`);
    await pwsh.executeCommand(command);
    // console.log(`[Terminal ${activeTabId}] executeUserCommand: Command "${command}" sent. Waiting for output event.`);
  }

  const handleTabCompletion = async () => {
    // console.log(`[Terminal ${activeTabId}] handleTabCompletion CALLED. Input: "${inputValue}"`);
    if (isInputDisabledBySetting) {
        // console.log(`[Terminal ${activeTabId}] handleTabCompletion: Input disabled by setting. Aborting.`);
        return;
    }
    if (!inputValue.trim() || currentTabIsExecuting) {
      // console.log(`[Terminal ${activeTabId}] handleTabCompletion: Input empty or executing. Aborting.`);
      return;
    }
    const pwsh = getPowerShellInstance(activeTabId);

    let currentCompletions = completions.completions;
    let currentSelectedIndex = completions.selectedIndex;
    let currentOriginalInput = completions.originalInput;

    if (currentCompletions.length === 0 || inputValue !== currentCompletions[currentSelectedIndex]) {
      // console.log(`[Terminal ${activeTabId}] Tab completion: Fetching new. Input: "${inputValue}"`);
      setIsExecuting(prev => ({ ...prev, [activeTabId]: true }));
      const result = await pwsh.getTabCompletions(inputValue, inputValue.length);
      setIsExecuting(prev => ({ ...prev, [activeTabId]: false }));
      // console.log(`[Terminal ${activeTabId}] Tab completion: Received completions:`, result.completions);
      if (result.completions.length > 0) {
        currentCompletions = result.completions;
        currentSelectedIndex = 0;
        currentOriginalInput = inputValue;
        setInputValue(result.completions[0]);
      } else {
        currentCompletions = [];
        currentSelectedIndex = 0;
        currentOriginalInput = "";
      }
    } else {
      currentSelectedIndex = (currentSelectedIndex + 1) % currentCompletions.length;
      setInputValue(currentCompletions[currentSelectedIndex]);
      // console.log(`[Terminal ${activeTabId}] Tab completion: Cycling. New selection: "${currentCompletions[currentSelectedIndex]}"`);
    }

    setCompletions({
      completions: currentCompletions,
      selectedIndex: currentSelectedIndex,
      originalInput: currentOriginalInput,
    });
  };


  const handleKeyDown = async (e: React.KeyboardEvent<HTMLInputElement>) => {
    // console.log(`[Terminal ${activeTabId}] handleKeyDown: Key="${e.key}", Ctrl=${e.ctrlKey}, currentTabIsExecuting=${currentTabIsExecuting}, isInputDisabledBySetting=${isInputDisabledBySetting}`);
    if (currentTabIsExecuting && e.key !== 'Escape' && !(e.ctrlKey && e.key.toLowerCase() === 'c')) {
      if (e.key === 'Enter') e.preventDefault();
      // console.log(`[Terminal ${activeTabId}] handleKeyDown: Input actions (except Ctrl+C/Esc) blocked, command executing.`);
      return;
    }
    if (e.ctrlKey && e.key.toLowerCase() === 'c' && currentTabIsExecuting) {
        // console.log(`[Terminal ${activeTabId}] Ctrl+C pressed while executing. Attempting to stop current command.`);
        const pwsh = getPowerShellInstance(activeTabId);
        pwsh.emit('output', { data: "\n[Command Interrupted by User]", currentPath, isError: true });
        setInputValue("");
        return;
    }


    const currentCmdStack = commandStack[activeTabId] || [];

    if (e.key === 'Enter') {
      e.preventDefault();
      // console.log(`[Terminal ${activeTabId}] handleKeyDown: Enter pressed. Current input: "${inputValue}"`);
      await executeUserCommand(inputValue);
    } else if (e.key === 'ArrowUp') {
      e.preventDefault();
      if (isInputDisabledBySetting) return;
      if (currentCmdStack.length > 0 && historyIndex < currentCmdStack.length - 1) {
        const newIndex = historyIndex + 1;
        setHistoryIndex(newIndex);
        const newCmd = currentCmdStack[currentCmdStack.length - 1 - newIndex] || '';
        setInputValue(newCmd);
        // console.log(`[Terminal ${activeTabId}] handleKeyDown: ArrowUp. History index: ${newIndex}, Command: "${newCmd}"`);
      }
    } else if (e.key === 'ArrowDown') {
      e.preventDefault();
      if (isInputDisabledBySetting) return;
      if (historyIndex > -1) {
        const newIndex = historyIndex - 1;
        setHistoryIndex(newIndex);
        const newCmd = newIndex === -1 ? '' : (currentCmdStack[currentCmdStack.length - 1 - newIndex] || '');
        setInputValue(newCmd);
        // console.log(`[Terminal ${activeTabId}] handleKeyDown: ArrowDown. History index: ${newIndex}, Command: "${newCmd}"`);
      } else if (historyIndex === -1) {
        setInputValue("");
        // console.log(`[Terminal ${activeTabId}] handleKeyDown: ArrowDown. Cleared input.`);
      }
    } else if (e.key === 'Tab') {
      e.preventDefault();
      // console.log(`[Terminal ${activeTabId}] handleKeyDown: Tab pressed.`);
      await handleTabCompletion();
    } else if (e.key === 'Escape') {
      if (completions.completions.length > 0) {
        e.preventDefault();
        setInputValue(completions.originalInput);
        setCompletions({ completions: [], selectedIndex: 0, originalInput: "" });
        // console.log(`[Terminal ${activeTabId}] handleKeyDown: Escape pressed. Cleared completions, restored: "${completions.originalInput}"`);
      }
    } else {
      if (completions.completions.length > 0 && e.key.length === 1) {
        setCompletions({ completions: [], selectedIndex: 0, originalInput: "" });
        // console.log(`[Terminal ${activeTabId}] handleKeyDown: Other key pressed. Cleared completions.`);
      }
    }
  };

  useEffect(() => {
    if (shouldFocusInput) {
      // console.log(`[Terminal ${activeTabId}] useEffect for focus: Focusing input. currentTabIsExecuting=${currentTabIsExecuting}`);
      inputRef.current?.focus();
    } else {
      // console.log(`[Terminal ${activeTabId}] useEffect for focus: NOT focusing. currentTabIsExecuting=${currentTabIsExecuting}, inputRef.current=${!!inputRef.current}`);
    }
  }, [activeTabId, currentTabIsExecuting, shouldFocusInput]);

  useEffect(() => {
    if (contentRef.current) {
      // console.log(`[Terminal ${activeTabId}] useEffect for scroll: Scrolling to bottom.`);
      contentRef.current.scrollTop = contentRef.current.scrollHeight;
    }
  }, [commandHistory, activeTabId]);


  const terminalThemeClass = cn(
    "h-[calc(100%-32px)] font-mono text-sm overflow-auto p-2",
    theme === "dark" ? "bg-background text-foreground"
      : theme === "light" ? "bg-background text-foreground"
      : theme === "ubuntu" ? "bg-[#300a24] text-[#ffffff]"
      : theme === "powershell" ? "bg-[#012456] text-[#ffffff]"
      : theme === "cmd" ? "bg-black text-white"
      : theme === "matrix" ? "bg-black text-green-500"
      : "bg-background text-foreground"
  );

  return (
    <div className={cn("h-full flex flex-col", className)} {...props} onClick={() => { if (inputRef.current) inputRef.current.focus(); }}>
      <div className="h-8 border-b border-border flex items-center px-2 bg-muted/30">
        <div className="flex-1 flex items-center overflow-x-auto">
          {tabs.map((tab) => (
            <div
              key={tab.id}
              className={cn(
                `flex items-center h-7 px-3 border-r border-border text-xs whitespace-nowrap cursor-pointer`,
                activeTabId === tab.id ? "bg-background text-foreground" : "text-muted-foreground hover:bg-background/50 hover:text-foreground"
              )}
              onClick={() => {
                if (activeTabId !== tab.id) {
                  // console.log(`[Terminal] Switching tab from ${activeTabId} to ${tab.id}`);
                  setActiveTabId(tab.id);
                }
              }}
              title={tab.name}
            >
              {tab.type === "powershell" && <Shell className="w-3.5 h-3.5 mr-1.5" />}
              <span className="truncate max-w-[120px]">{tab.name}</span>
              {tabs.length > 1 && (
                <button
                  className="ml-2 opacity-50 hover:opacity-100"
                  onClick={(e) => { e.stopPropagation(); removeTab(tab.id); }}
                >
                  <X className="h-3 w-3" />
                </button>
              )}
            </div>
          ))}
          <button className="h-7 w-7 flex items-center justify-center hover:bg-background/50" onClick={addTab}>
            <Plus className="h-3 w-3" />
          </button>
        </div>
      </div>

      <div ref={contentRef} className={cn(terminalThemeClass, "terminal-content flex-1")}>
        {(commandHistory[activeTabId] || []).map((item, index) => (
          <div key={`${activeTabId}-cmd-${index}`}>
            <div className="flex items-center">
              <span className="ps-prompt">
                <span className="ps-prompt-drive">PS</span>
                <span className="ps-prompt-path">{currentPath}</span>
                <span>&gt;</span>
              </span>
              <span className="ps-command ml-2" dangerouslySetInnerHTML={{ __html: formatTerminalOutput(item.command) }} />
            </div>
            {item.output && (
              <div className={cn("ps-output", item.isError ? "ps-error-output" : "")} dangerouslySetInnerHTML={{ __html: item.output }} />
            )}
          </div>
        ))}

        <div className="flex flex-col">
          <div className="flex items-center mt-1">
            <span className="ps-prompt">
              <span className="ps-prompt-drive">PS</span>
              <span className="ps-prompt-path">{currentPath}</span>
              <span>&gt;</span>
            </span>
            {currentTabIsExecuting && !inputValue && (commandHistory[activeTabId] || []).length > 0 && (commandHistory[activeTabId] || [])[commandHistory[activeTabId].length -1]?.output === '' && !isInputDisabledBySetting && (
                 <Loader2 className="h-4 w-4 animate-spin ml-2 text-muted-foreground" />
            )}
            {isInputDisabledBySetting && (
                <span className="ml-2 text-xs text-destructive flex items-center">
                    <AlertCircle className="h-3.5 w-3.5 mr-1"/> Input disabled in settings.
                </span>
            )}
            <input
              ref={inputRef}
              type="text"
              value={inputValue}
              onChange={(e) => {
                setInputValue(e.target.value);
                if (completions.completions.length > 0 && e.target.value !== completions.completions[completions.selectedIndex]) {
                  setCompletions({ completions: [], selectedIndex: 0, originalInput: "" });
                }
              }}
              onKeyDown={handleKeyDown}
              className={cn(
                "flex-1 bg-transparent border-none outline-none ml-2 text-foreground ps-command",
                isInputDisabledBySetting && "opacity-70"
              )}
              autoFocus
              autoComplete="off"
              spellCheck="false"
              placeholder={isInputDisabledBySetting ? "Input disabled (execution blocked)" : ""}
            />
          </div>
          {completions.completions.length > 0 && !isInputDisabledBySetting && (
            <div className="ps-completion-list ml-8 mt-1 text-xs">
              {completions.completions.map((completion, index) => (
                <div
                  key={index}
                  className={cn(
                    "ps-completion-item px-2 py-0.5",
                    index === completions.selectedIndex && "bg-muted text-accent-foreground"
                  )}
                  onClick={() => {
                    setInputValue(completion);
                    setCompletions({ completions: [], selectedIndex: 0, originalInput: "" });
                    inputRef.current?.focus();
                  }}
                >
                  {completion}
                </div>
              ))}
            </div>
          )}
        </div>
      </div>
    </div>
  )
});
Terminal.displayName = "Terminal";
export default Terminal;

--- File: components\theme-provider.tsx ---
"use client"
import { ThemeProvider as NextThemesProvider } from "next-themes"
import type { ThemeProviderProps } from "next-themes"

/**
 * Theme provider component that wraps the Next.js theme provider
 */
export function ThemeProvider({ children, ...props }: ThemeProviderProps) {
  return <NextThemesProvider {...props}>{children}</NextThemesProvider>
}


--- File: components\typing-markdown.tsx ---
// components/typing-markdown.tsx
"use client"

import React, { useState, useEffect } from 'react';
import ReactMarkdown from 'react-markdown';
import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';
import { vscDarkPlus } from 'react-syntax-highlighter/dist/esm/styles/prism'; // This is an ESM import
import { cn } from '@/lib/utils';

interface TypingMarkdownProps {
  content: string;
  typingSpeed?: number; // milliseconds per character
  className?: string;
  enableCopy?: boolean; // Enable copy button on code blocks
  skipAnimation?: boolean; // Option to skip typing animation
  theme?: 'light' | 'dark' | 'system'; // Theme override
  codeBlockTheme?: 'vscode-dark' | 'github-dark' | 'dracula'; // Code block theme
  proseSize?: 'sm' | 'base' | 'lg'; // Control overall text size
  syntaxHighlightEnabled?: boolean; // Toggle syntax highlighting
}

export function TypingMarkdown({
  content,
  typingSpeed = 20,
  className,
  enableCopy = true,
  skipAnimation = false,
  theme = 'system',
  codeBlockTheme = 'vscode-dark', // Defaulting to vscDarkPlus style
  proseSize = 'base',
  syntaxHighlightEnabled = true,
}: TypingMarkdownProps) {
  const [displayedContent, setDisplayedContent] = useState(skipAnimation ? content : '');
  const [isTyping, setIsTyping] = useState(!skipAnimation);
  const [copiedMap, setCopiedMap] = useState<Record<string, boolean>>({});
  const [mounted, setMounted] = useState(false);

  // Handle theme
  useEffect(() => {
    setMounted(true);
  }, []);

  useEffect(() => {
    let currentLength = 0;
    setIsTyping(true);

    const typeText = () => {
      if (currentLength <= content.length) {
        setDisplayedContent(content.slice(0, currentLength));
        currentLength++;

        if (currentLength <= content.length) {
          setTimeout(typeText, typingSpeed);
        } else {
          setIsTyping(false);
        }
      }
    };

    typeText();

    return () => {
      currentLength = content.length + 1; // Stop typing on unmount
    };
  }, [content, typingSpeed]);

  // Determine the actual syntax highlighter style based on codeBlockTheme
  // For simplicity, this example sticks to vscDarkPlus.
  // A more robust solution would map codeBlockTheme to different style objects from react-syntax-highlighter.
  const syntaxHighlighterStyle = vscDarkPlus;


  return (
    <div className={cn('prose dark:prose-invert max-w-none', 
      proseSize === 'sm' && 'prose-sm',
      proseSize === 'lg' && 'prose-lg',
      className
    )}>
      <ReactMarkdown
        components={{
          code({ node, inline, className: langClassName, children, ...props }) {
            const match = /language-(\w+)/.exec(langClassName || '');
            const lang = match ? match[1] : undefined;
            
            return !inline && lang && syntaxHighlightEnabled ? (
              <div className="not-prose my-4 rounded-md bg-zinc-900 overflow-hidden"> {/* Container for better styling control */}
                <SyntaxHighlighter
                  style={syntaxHighlighterStyle}
                  language={lang}
                  PreTag="div"
                  className="!p-4 !text-sm" // Override default padding and ensure consistent text size
                  showLineNumbers // Example: enable line numbers
                  lineNumberStyle={{ minWidth: '2.25em', opacity: 0.5, userSelect: 'none' }}
                  {...props}
                >
                  {String(children).replace(/\n$/, '')}
                </SyntaxHighlighter>
              </div>
            ) : (
              <code 
                className={cn(
                  "rounded-sm bg-zinc-200 px-1.5 py-0.5 font-mono text-[0.875em]", // Adjusted size
                  "dark:bg-zinc-800 dark:text-zinc-300",
                  langClassName
                )} 
                {...props}
              >
                {children}
              </code>
            );
          },
          table: ({ children }) => (
            <div className="my-6 w-full overflow-y-auto rounded-lg border dark:border-zinc-800">
              <table className="w-full border-collapse text-sm">
                {children}
              </table>
            </div>
          ),
          thead: ({ children }) => (
            <thead className="border-b bg-zinc-50 dark:border-zinc-800 dark:bg-zinc-900">
              {children}
            </thead>
          ),
          tbody: ({ children }) => (
            <tbody className="divide-y divide-zinc-200 dark:divide-zinc-800">
              {children}
            </tbody>
          ),
          tr: ({ children }) => (
            <tr className="divide-x divide-zinc-200 dark:divide-zinc-800">
              {children}
            </tr>
          ),
          th: ({ children }) => (
            <th className="p-4 text-left font-medium text-zinc-700 dark:text-zinc-300">
              {children}
            </th>
          ),
          td: ({ children }) => (
            <td className="p-4 text-zinc-700 dark:text-zinc-300">
              {children}
            </td>
          ),
          blockquote: ({ children }) => (
            <blockquote className="mt-6 border-l-4 border-zinc-300 pl-6 italic text-zinc-800 dark:border-zinc-700 dark:text-zinc-200">
              {children}
            </blockquote>
          ),
          ul: ({ children }) => (
            <ul className="list-disc space-y-2 pl-6 marker:text-zinc-500">
              {children}
            </ul>
          ),
          ol: ({ children }) => (
            <ol className="list-decimal space-y-2 pl-6 marker:text-zinc-500">
              {children}
            </ol>
          ),
          h1: ({ children }) => (
            <h1 className="mt-8 mb-4 text-4xl font-bold tracking-tight text-zinc-900 dark:text-zinc-100">
              {children}
            </h1>
          ),
          h2: ({ children }) => (
            <h2 className="mt-8 mb-4 text-3xl font-semibold tracking-tight text-zinc-900 dark:text-zinc-100">
              {children}
            </h2>
          ),
          h3: ({ children }) => (
            <h3 className="mt-6 mb-4 text-2xl font-semibold tracking-tight text-zinc-900 dark:text-zinc-100">
              {children}
            </h3>
          ),
          a: ({ href, children }) => (
            <a
              href={href}
              className="text-blue-600 underline decoration-blue-600/30 underline-offset-2 transition-colors hover:text-blue-800 hover:decoration-blue-800/30 dark:text-blue-400 dark:decoration-blue-400/30 dark:hover:text-blue-200 dark:hover:decoration-blue-200/30"
            >
              {children}
            </a>
          ),
          hr: () => (
            <hr className="my-8 border-zinc-200 dark:border-zinc-800" />
          ),
        }}
      >
        {displayedContent}
      </ReactMarkdown>
      {isTyping && (
        <span className="inline-block h-4 w-2 animate-blink bg-current" />
      )}
    </div>
  );
}

export default TypingMarkdown;

--- File: components\file-explorer-tabs\files-tab-content.tsx ---
// components/file-explorer-tabs/files-tab-content.tsx
"use client"

import * as React from "react"
import { useCallback } from "react"
import {
  ChevronRight,
  ChevronDown,
} from "lucide-react"
import { cn } from "@/lib/utils"
import type { CodeFile, FileTreeItem } from "@/types/file"
import { ScrollArea } from "@/components/ui" // Consolidated import

interface FilesTabContentProps {
  fileTree: FileTreeItem[];
  activeFile: CodeFile | null;
  onFileSelect: (file: FileTreeItem) => void;
  getFileIcon: (fileName: string, itemPath?: string, isDirectory?: boolean, isActive?: boolean) => React.ReactNode;
  isExplorerLocked: boolean;
  expandedDirs: Set<string>;
  setExpandedDirs: React.Dispatch<React.SetStateAction<Set<string>>>;
  rootDirectoryName: string;
  onFileSystemUpdate: () => Promise<void>;
}

export function FilesTabContent({
  fileTree,
  activeFile,
  onFileSelect,
  getFileIcon,
  isExplorerLocked,
  expandedDirs,
  setExpandedDirs,
  rootDirectoryName,
  onFileSystemUpdate,
}: FilesTabContentProps) {

  const fileTreeToRender = fileTree;

  const toggleDir = useCallback((path: string) => {
    setExpandedDirs((prev) => {
      const newExpanded = new Set(prev)
      if (newExpanded.has(path)) newExpanded.delete(path)
      else newExpanded.add(path)
      return newExpanded
    })
  }, [setExpandedDirs])

  const renderFileTreeItem = (item: FileTreeItem, depth = 0): React.ReactNode => {
    const isDirExpanded = item.isDirectory && expandedDirs.has(item.path)
    const isActive = !item.isDirectory && activeFile?.path === item.path

    const paddingLeftValue = 0.5 + depth * 0.75;
    const paddingLeftStyle = { paddingLeft: `${paddingLeftValue}rem` };

    const chevronColor = isActive ? "text-slate-300" : "text-slate-500 dark:text-slate-500";

    return (
      <div key={item.id} className="group/treeitem text-sm leading-tight">
        <div
          className={cn(
            "flex items-center justify-between py-[2px] pr-1 hover:bg-slate-700/20 cursor-pointer rounded-[3px]", 
            isActive && "bg-[#3A3D54] text-slate-50",
            !isActive && "text-slate-400 hover:text-slate-200",
          )}
          style={paddingLeftStyle}
        >
          <div
            className="flex items-center space-x-1 flex-1 truncate"
            onClick={() => {
              if (item.isDirectory) {
                toggleDir(item.path);
              } else {
                onFileSelect(item);
              }
            }}
          >
            {item.isDirectory ? (
              isDirExpanded ? (
                <ChevronDown className={cn("h-4 w-4 shrink-0", chevronColor)} />
              ) : (
                <ChevronRight className={cn("h-4 w-4 shrink-0", chevronColor)} />
              )
            ) : (
              <span className="w-4 shrink-0" />
            )}
            <div className="flex items-center justify-center w-4 h-4 mr-0.5">
              {getFileIcon(item.name, item.path, item.isDirectory, isActive)}
            </div>
            <span className={cn("truncate pt-px", isActive ? "text-slate-50" : "text-slate-300")}>{item.name}</span>
          </div>
        </div>
        {item.isDirectory && isDirExpanded && item.children && (
          <div>{item.children.map((child) => renderFileTreeItem(child, depth + 1))}</div>
        )}
      </div>
    )
  }

  return (
    <ScrollArea className="flex-1 p-1 pr-0.5">
      {fileTreeToRender.length === 0 && (
           <p className="text-sm text-slate-500 px-2 py-4 text-center">No files to display or project empty.</p>
      )}
      {fileTreeToRender.map((item) => renderFileTreeItem(item, 0))}
    </ScrollArea>
  )
}

--- File: components\file-explorer-tabs\locks-tab-content.tsx ---
// components/file-explorer-tabs/locks-tab-content.tsx
"use client"

import * as React from "react"
import { useState, useMemo } from "react"
import { Lock, Unlock, ListFilter } from "lucide-react"
import { cn } from "@/lib/utils"
import type { FileTreeItem } from "@/types/file"
import { Button, DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger, DropdownMenuRadioGroup, DropdownMenuRadioItem, DropdownMenuLabel, DropdownMenuSeparator, ScrollArea } from "@/components/ui" // Consolidated imports
import { toast } from "sonner"

interface LocksTabContentProps {
  fileTree: FileTreeItem[]; 
  getFileIcon: (fileName: string, itemPath?: string, isDirectory?: boolean) => React.ReactNode;
  isExplorerLocked: boolean;
  rootDirectoryName: string;
}

export function LocksTabContent({
  fileTree,
  getFileIcon,
  isExplorerLocked,
  rootDirectoryName,
}: LocksTabContentProps) {
  const [lockedItemPaths, setLockedItemPaths] = useState<Set<string>>(new Set())
  const [locksFilter, setLocksFilter] = useState<"all" | "files" | "folders">("all")

  const allLockableItems = useMemo((): FileTreeItem[] => {
    const items: FileTreeItem[] = [];
    const traverse = (nodes: FileTreeItem[]) => {
      for (const node of nodes) {
        items.push(node);
        if (node.isDirectory && node.children) {
          traverse(node.children);
        }
      }
    };
    traverse(fileTree); 
    
    items.sort((a, b) => a.path.localeCompare(b.path));
    return items;
  }, [fileTree]);

  const filteredLockableItems = useMemo(() => {
    if (locksFilter === "all") return allLockableItems
    return allLockableItems.filter(item =>
      locksFilter === "files" ? !item.isDirectory : item.isDirectory
    )
  }, [allLockableItems, locksFilter])

  const toggleItemLock = (path: string) => {
    if (isExplorerLocked) {
      toast.error("Explorer is locked. Cannot change individual lock states.")
      return
    }
    setLockedItemPaths(prev => {
      const newSet = new Set(prev)
      if (newSet.has(path)) {
        newSet.delete(path)
        toast.info(`Unlocked: ${path.split('/').pop()}`)
      } else {
        newSet.add(path)
        toast.success(`Locked: ${path.split('/').pop()}`)
      }
      return newSet
    })
  }

  const areAllFilteredItemsEffectivelyLocked = useMemo(() => {
    if (isExplorerLocked) return true
    if (filteredLockableItems.length === 0) return false
    return filteredLockableItems.every(item => lockedItemPaths.has(item.path))
  }, [filteredLockableItems, lockedItemPaths, isExplorerLocked])

  const toggleLockAllFilteredItems = () => {
    if (isExplorerLocked) {
      toast.error("Explorer is locked. Cannot change lock states.")
      return
    }
    const pathsToToggle = filteredLockableItems.map(item => item.path)
    if (areAllFilteredItemsEffectivelyLocked) {
      setLockedItemPaths(prev => {
        const newSet = new Set(prev)
        pathsToToggle.forEach(path => newSet.delete(path))
        return newSet
      })
      toast.info(`Unlocked all shown ${locksFilter} items.`)
    } else {
      setLockedItemPaths(prev => new Set([...Array.from(prev), ...pathsToToggle]))
      toast.success(`Locked all shown ${locksFilter} items.`)
    }
  }

  return (
    <div className="flex-1 flex flex-col overflow-hidden">
      <div className="p-2 border-b border-border flex items-center justify-between">
        <Button
          onClick={toggleLockAllFilteredItems}
          disabled={isExplorerLocked || filteredLockableItems.length === 0}
          variant="outline"
          size="sm"
        >
          {areAllFilteredItemsEffectivelyLocked ? <Unlock className="h-4 w-4 mr-2" /> : <Lock className="h-4 w-4 mr-2" />}
          {areAllFilteredItemsEffectivelyLocked ? "Unlock Shown" : "Lock Shown"}
        </Button>
        <DropdownMenu>
          <DropdownMenuTrigger asChild>
            <Button variant="outline" size="sm">
              <ListFilter className="h-4 w-4 mr-2" />
              Filter: {locksFilter.charAt(0).toUpperCase() + locksFilter.slice(1)}
            </Button>
          </DropdownMenuTrigger>
          <DropdownMenuContent align="end">
            <DropdownMenuLabel>Filter by type</DropdownMenuLabel>
            <DropdownMenuSeparator />
            <DropdownMenuRadioGroup value={locksFilter} onValueChange={(value) => setLocksFilter(value as any)}>
              <DropdownMenuRadioItem value="all">All</DropdownMenuRadioItem>
              <DropdownMenuRadioItem value="files">Files Only</DropdownMenuRadioItem>
              <DropdownMenuRadioItem value="folders">Folders Only</DropdownMenuRadioItem>
            </DropdownMenuRadioGroup>
          </DropdownMenuContent>
        </DropdownMenu>
      </div>
      <ScrollArea className="flex-1 p-2">
        {filteredLockableItems.length === 0 && (
          <p className="text-sm text-muted-foreground text-center py-4">No {locksFilter !== "all" ? locksFilter : ""} items to display.</p>
        )}
        {filteredLockableItems.map((item) => {
          const isItemEffectivelyLocked = isExplorerLocked || lockedItemPaths.has(item.path)
          return (
            <div
              key={`lock-${item.id}`} 
              className="flex items-center justify-between p-1.5 hover:bg-muted/20 rounded-sm"
            >
              <div className="flex items-center space-x-2 truncate">
                {getFileIcon(item.name, item.path, item.isDirectory)}
                <span className="text-sm truncate">{item.name}</span>
              </div>
              <Button
                variant="ghost"
                size="icon"
                className="h-7 w-7"
                onClick={() => toggleItemLock(item.path)}
                disabled={isExplorerLocked}
                title={isExplorerLocked ? "Explorer Locked" : (isItemEffectivelyLocked ? "Unlock item" : "Lock item")}
              >
                {isItemEffectivelyLocked ? <Lock className="h-4 w-4 text-destructive" /> : <Unlock className="h-4 w-4 text-muted-foreground" />}
              </Button>
            </div>
          )
        })}
      </ScrollArea>
    </div>
  )
}

--- File: components\file-explorer-tabs\search-tab-content.tsx ---
// components/file-explorer-tabs/search-tab-content.tsx
"use client"

import * as React from "react"
import { useMemo } from "react"
import { Search } from "lucide-react"
import { cn } from "@/lib/utils"
import type { CodeFile, FileTreeItem } from "@/types/file"
import { Input, ScrollArea } from "@/components/ui" // Consolidated import

interface SearchTabContentProps {
  fileTree: FileTreeItem[]; 
  activeFile: CodeFile | null;
  onFileSelect: (file: FileTreeItem) => void; 
  getFileIcon: (fileName: string, itemPath?: string, isDirectory?: boolean) => React.ReactNode;
  onActivateFilesTab: () => void;
  onExpandDirectoryInFilesTab: (dirPath: string) => void;
  searchTerm: string;
  setSearchTerm: (term: string) => void;
  rootDirectoryName: string;
}

export function SearchTabContent({
  fileTree,
  activeFile,
  onFileSelect,
  getFileIcon,
  onActivateFilesTab,
  onExpandDirectoryInFilesTab,
  searchTerm,
  setSearchTerm,
  rootDirectoryName,
}: SearchTabContentProps) {

  const searchResults = useMemo(() => {
    if (!searchTerm.trim()) return [];
    const lowerTerm = searchTerm.toLowerCase();
    const results: FileTreeItem[] = [];
    const traverse = (nodes: FileTreeItem[], currentDisplayPathPrefix = "") => {
      for (const node of nodes) {
        const displayPath = node.path; 
        if (node.name.toLowerCase().includes(lowerTerm) || displayPath.toLowerCase().includes(lowerTerm)) {
          results.push({ ...node, path: displayPath }); 
        }
        if (node.isDirectory && node.children) {
          traverse(node.children, displayPath);
        }
      }
    };
    traverse(fileTree); 
    return results;
  }, [fileTree, searchTerm, rootDirectoryName]);

  return (
    <div className="flex-1 flex flex-col overflow-hidden">
      <div className="p-2 border-b border-border">
        <div className="relative">
          <Search className="absolute left-2 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground" />
          <Input
            type="text"
            placeholder="Search all files and folders..."
            className="pl-8 h-8 text-xs"
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            autoFocus
          />
        </div>
      </div>
      <ScrollArea className="flex-1 p-2">
        {searchTerm.trim() === "" && (
          <p className="text-sm text-muted-foreground text-center py-4">Enter a search term.</p>
        )}
        {searchTerm.trim() !== "" && searchResults.length === 0 && (
          <p className="text-sm text-muted-foreground text-center py-4">No results for "{searchTerm}".</p>
        )}
        {searchResults.map((item) => (
          <div
            key={`search-${item.id}`} 
            className={cn(
              "flex items-center space-x-2 p-1.5 hover:bg-muted/40 cursor-pointer rounded-sm",
              activeFile?.path === item.path && !item.isDirectory && "bg-muted/60"
            )}
            onClick={() => {
              if (!item.isDirectory) {
                onFileSelect(item); 
              } else {
                onActivateFilesTab();
                onExpandDirectoryInFilesTab(item.path);
              }
            }}
          >
            {getFileIcon(item.name, item.path, item.isDirectory)}
            <span className="text-sm truncate flex-1">{item.name}</span>
            <span className="text-xs text-muted-foreground truncate ml-auto shrink-0 max-w-[50%]">
              {item.path.startsWith(rootDirectoryName + '/') ? item.path.substring(rootDirectoryName.length + 1) : item.path}
            </span>
          </div>
        ))}
      </ScrollArea>
    </div>
  )
}

--- File: components\sidebar-parts\chat-interface.tsx ---
// components/sidebar-parts/chat-interface.tsx
"use client";
import { AlertTriangle, CheckCircle2, Info, Loader2, Square, Terminal as TerminalIconLucide, PlayCircle, Search, Eye, Code as CodeIconLucide } from "lucide-react";
import React, { useRef, useCallback, useEffect, useState } from "react";
import { ScrollArea, Textarea, Button } from "@/components/ui"; // Consolidated imports
import { Send, Bot, User, Copy, Check, Code as CodeBlockIcon, FileCode } from "lucide-react"; // Renamed Code to CodeBlockIcon to avoid conflict
import { cn, debounce } from "@/lib/utils";
import ReactMarkdown from 'react-markdown';
import remarkGfm from 'remark-gfm';
import rehypeRaw from 'rehype-raw';
import remarkMath from 'remark-math';
import rehypeKatex from 'rehype-katex';
import type { Highlighter, Lang, Theme as ShikiTheme } from 'shiki';
import { liveHighlightStrings, convertAsciiTableToMarkdown, liveHighlightMath } from '@/lib/markdown-utils';
import { escapeHtml } from '@/lib/html-utils';
import { toast } from "sonner";


export interface AiActionStep {
  type: "runCommand" | "startApplication" | "searchGoogle";
  description: string;
  command?: string;
  commandDisplay?: string;
  query?: string; // For searchGoogle
  // --- Fields for UI state, not from AI ---
  id: string; // Client-generated unique ID for the step instance
  currentStatus: 'idle' | 'pending' | 'success' | 'error';
  output?: string; // For command output or search results
  errorMessage?: string; // For step-specific errors
}
export interface AiActionBlock {
  steps: AiActionStep[];
  project?: string;
}

export interface MessageType {
  id: string;
  role: "user" | "assistant";
  content: string;
  actionBlock?: AiActionBlock | null;
  timestamp: Date;
  isTyping?: boolean;

  _mainContentBefore?: string;
  _mainContentAfter?: string;
  _actionsProcessed?: boolean;
  _currentTextPart?: 'before' | 'after';
  _isSearchResultContext?: boolean; 
}

export interface TypingState {
  charIndex: number;
}

interface HighlightedCodeBlockProps {
  code: string;
  language: string; // This will be the full language string e.g. "html-live-preview" or "python"
  highlighter: Highlighter | null;
  codeBlockTheme: ShikiTheme;
  // isLivePreviewBlock prop is removed as this component won't manage the iframe directly
}

const HighlightedCodeBlock: React.FC<HighlightedCodeBlockProps> = React.memo(({
  code,
  language, // e.g., "html-live-preview" or "python"
  highlighter,
  codeBlockTheme,
}) => {
  const [highlightedHtml, setHighlightedHtml] = useState<string>("");
  const [isLoadingLanguage, setIsLoadingLanguage] = useState(false);

  const knownShortLangs = ['c', 'r', 'go', 'js', 'ts', 'py', 'md', 'rb', 'cs', 'fs', 'sh', 'ps1'];

  useEffect(() => {
    let isMounted = true;
    async function highlight() {
      if (!code) {
        if (isMounted) setHighlightedHtml("");
        return;
      }
      if (highlighter) {
        // For 'html-live-preview', we still want to show HTML syntax highlighting
        const langForShiki = (language === 'html-live-preview' ? 'html' : language?.toLowerCase()) as Lang || 'plaintext';
        
        const loadedLanguages = highlighter.getLoadedLanguages();
        const isPotentiallyComplete = langForShiki.length >=1 && (loadedLanguages.includes(langForShiki) || langForShiki.length >=2 || knownShortLangs.includes(langForShiki));

        if (!loadedLanguages.includes(langForShiki) && isPotentiallyComplete) {
          if (isMounted) setIsLoadingLanguage(true);
          try {
            const resolvedLang = highlighter.getLang(langForShiki);
            if (resolvedLang && loadedLanguages.includes(resolvedLang.id as Lang)) {
                 const html = highlighter.codeToHtml(code, { lang: resolvedLang.id as Lang, theme: codeBlockTheme });
                 if (isMounted) setHighlightedHtml(html);
            } else {
                await highlighter.loadLanguage(langForShiki);
                if (isMounted && highlighter.getLoadedLanguages().includes(langForShiki)) {
                  const html = highlighter.codeToHtml(code, { lang: langForShiki, theme: codeBlockTheme });
                  if (isMounted) setHighlightedHtml(html);
                } else if (isMounted) {
                  console.warn(`Shiki: Language "${langForShiki}" could not be loaded or is not recognized after attempt. Falling back.`);
                  setHighlightedHtml(`<pre class="shiki-fallback"><code>${liveHighlightStrings(escapeHtml(code))}</code></pre>`);
                }
            }
          } catch (loadErr) {
            if (isMounted) setHighlightedHtml(`<pre class="shiki-fallback"><code>${liveHighlightStrings(escapeHtml(code))}</code></pre>`);
          } finally {
            if (isMounted) setIsLoadingLanguage(false);
          }
        } else if (loadedLanguages.includes(langForShiki)) {
          const html = highlighter.codeToHtml(code, { lang: langForShiki, theme: codeBlockTheme });
          if (isMounted) setHighlightedHtml(html);
          if (isMounted) setIsLoadingLanguage(false);
        } else {
          if (isMounted) {
            setHighlightedHtml(`<pre class="shiki-fallback"><code>${liveHighlightStrings(escapeHtml(code))}</code></pre>`);
            setIsLoadingLanguage(false);
          }
        }
      } else { // Fallback if no highlighter
        if (isMounted) {
          setHighlightedHtml(`<pre class="shiki-fallback"><code>${liveHighlightStrings(escapeHtml(code))}</code></pre>`);
          setIsLoadingLanguage(false);
        }
      }
    }
    highlight();
    return () => { isMounted = false; };
  }, [code, language, highlighter, codeBlockTheme, knownShortLangs]);

  if (isLoadingLanguage && code) {
    return <div className="shiki-container"><pre className="shiki-fallback p-2 text-xs"><code>Loading syntax for "{language === 'html-live-preview' ? 'html' : language}"...</code></pre></div>;
  }

  if (!code) return null;
  
  const codeToRender = (!highlighter && code) || (!highlightedHtml && code && !isLoadingLanguage)
    ? `<pre class="shiki-fallback"><code>${liveHighlightStrings(escapeHtml(code))}</code></pre>`
    : highlightedHtml;

  return <div className="shiki-container" dangerouslySetInnerHTML={{ __html: codeToRender }} />;
});
HighlightedCodeBlock.displayName = 'HighlightedCodeBlock';


interface ChatInterfaceProps {
  messages: MessageType[];
  setMessages: React.Dispatch<React.SetStateAction<MessageType[]>>;
  inputValue: string;
  onInputChange: (value: string) => void;
  onSendMessage: (isReprompt?: boolean, repromptHistory?: any[]) => Promise<void>;
  onKeyDown: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;
  isAISending: boolean;
  activeApiKey: string | null;
  selectedModel: string;
  copiedId: string | null;
  onCopyToClipboard: (text: string, id: string) => void;
  highlighter: Highlighter | null;
  selectedShikiTheme: ShikiTheme;
  enableCopy: boolean;
  typingSpeed: number;
  onStopGenerating: () => void;
  onAiOpenFileInEditor: (filePath: string) => Promise<void>;
  onAiExecuteTerminalCommand: (command: string) => Promise<{ success: boolean; output: string }>;
  onRefreshFileTree: () => void;
}

export const ChatInterface: React.FC<ChatInterfaceProps> = ({
  messages,
  setMessages,
  inputValue,
  onInputChange,
  onSendMessage,
  onKeyDown,
  isAISending,
  activeApiKey,
  selectedModel,
  copiedId,
  onCopyToClipboard,
  highlighter,
  selectedShikiTheme,
  enableCopy,
  typingSpeed,
  onStopGenerating,
  onAiOpenFileInEditor,
  onAiExecuteTerminalCommand,
  onRefreshFileTree,
}) => {
  const messagesEndRef = useRef<HTMLDivElement>(null);
  const textareaRef = useRef<HTMLTextAreaElement>(null);
  const [isClient, setIsClient] = useState(false);
  const chatContainerRef = useRef<HTMLDivElement>(null); 
  const viewportRef = useRef<HTMLDivElement | null>(null); 
  const isUserScrolledUpRef = useRef(false);
  const [currentProcessingStepVisual, setCurrentProcessingStepVisual] = useState<{ messageId: string; stepId: string } | null>(null);

  useEffect(() => {
    setIsClient(true);
  }, []);

  useEffect(() => {
    if (chatContainerRef.current) {
      const viewportElement = chatContainerRef.current.querySelector<HTMLDivElement>('[data-radix-scroll-area-viewport]');
      if (viewportElement) {
        viewportRef.current = viewportElement;
        const handleScroll = () => {
          if (viewportRef.current) {
            const { scrollTop, scrollHeight, clientHeight } = viewportRef.current;
            isUserScrolledUpRef.current = scrollHeight > clientHeight && scrollHeight - scrollTop - clientHeight > 30;
          }
        };
        viewportElement.addEventListener('scroll', handleScroll);
        return () => {
          if (viewportElement) { 
            viewportElement.removeEventListener('scroll', handleScroll);
          }
        }
      }
    }
  }, []); 

  useEffect(() => {
    const scrollToBottom = (behavior: ScrollBehavior = "smooth") => {
      if (messagesEndRef.current && viewportRef.current && !isUserScrolledUpRef.current) {
        messagesEndRef.current.scrollIntoView({ behavior });
      }
    };
    const debouncedSmoothScroll = debounce(scrollToBottom, 100);
    debouncedSmoothScroll();
  }, [messages]);

  useEffect(() => {
    const lastMessage = messages[messages.length - 1];
    if (lastMessage && (lastMessage.role === 'user' || (lastMessage.role === 'assistant' && lastMessage.isTyping && lastMessage.content === ""))) {
      if (messagesEndRef.current && viewportRef.current) {
        isUserScrolledUpRef.current = false; 
        setTimeout(() => { 
            if (messagesEndRef.current) {
                 messagesEndRef.current.scrollIntoView({ behavior: "auto" });
            }
        }, 0);
      }
    }
  }, [messages]);


  const handleTextareaChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {
    onInputChange(e.target.value);
    if (textareaRef.current) {
      textareaRef.current.style.height = "auto";
      const newHeight = Math.min(e.target.scrollHeight, 150); 
      textareaRef.current.style.height = `${newHeight}px`;
    }
  };

  const getActionStepIcon = (type: AiActionStep['type']) => {
    switch (type) {
      case 'runCommand':
        return <TerminalIconLucide className="ai-action-step-icon" />;
      case 'searchGoogle':
        return <Search className="ai-action-step-icon" />;
      case 'startApplication':
        return <PlayCircle className="ai-action-step-icon" />;
      default:
        return <Info className="ai-action-step-icon" />;
    }
  };

  const rePromptAIWithSearchResults = useCallback(async (originalUserQueryId: string, searchResultsText: string, originalAiMessageId: string) => {
    let originalUserMessageIndex = messages.findIndex(msg => msg.id === originalAiMessageId) -1;
    while(originalUserMessageIndex >= 0 && messages[originalUserMessageIndex].role !== 'user') {
        originalUserMessageIndex--;
    }
    const originalUserMessage = originalUserMessageIndex >= 0 ? messages[originalUserMessageIndex] : null;

    if (!originalUserMessage) {
      console.error("Could not find original user message for re-prompting with search results.");
      toast.error("Internal error: Could not process search results effectively.");
      setMessages(prev => prev.map(msg => msg.id === originalAiMessageId ? { ...msg, isTyping: false, _actionsProcessed: true, content: msg.content + "\n\n[Error: Could not re-prompt with search results]" } : msg));
      return;
    }

    const searchContextContent = `CONTEXT FROM PREVIOUS SEARCH (for your query: "${originalUserMessage.content}"):\n${searchResultsText}\n\nBased on this information, please provide your answer to my original request.`;

    const historyForReprompt = messages
      .slice(0, originalUserMessageIndex + 1) 
      .filter(msg => !(msg.role === 'assistant' && msg.content.startsWith("Hello! I'm CodeForge") && messages.length <=2))
      .filter(msg => msg.role === 'user' || (msg.role === 'assistant' && !msg.isTyping && !msg.actionBlock && !msg._isSearchResultContext))
      .map(msg => ({ role: msg.role === 'user' ? 'user' : 'model', parts: [{ text: msg.content }] }));
    
    const repromptWithContextHistory = [...historyForReprompt, { role: 'user' as const, parts: [{ text: searchContextContent }] }];

    setMessages(prev => prev.map(msg =>
      msg.id === originalAiMessageId ? {
        ...msg,
        content: (msg._mainContentBefore || "") + "\n\nProcessing search results...", 
        isTyping: true, 
        _currentTextPart: 'after', 
        _mainContentBefore: (msg._mainContentBefore || "") + "\n\nProcessing search results...",
        _mainContentAfter: "", 
        actionBlock: { 
            ...msg.actionBlock!,
            steps: msg.actionBlock!.steps.map(s => s.type === 'searchGoogle' && s.currentStatus === 'success' ? s : {...s, currentStatus: s.currentStatus === 'pending' ? 'idle' : s.currentStatus})
        }
      } : msg
    ));
    
    await onSendMessage(true, repromptWithContextHistory);

  }, [messages, onSendMessage, setMessages]);

  const processActionsSequentially = useCallback(async (messageId: string, actionBlock: AiActionBlock) => {
    let searchStepProcessedSuccessfully = false;
    let searchResultsOutput = "";

    for (const step of actionBlock.steps) {
      setCurrentProcessingStepVisual({ messageId, stepId: step.id });
      setMessages(prev => prev.map(msg =>
        msg.id === messageId && msg.actionBlock ? {
          ...msg,
          actionBlock: {
            ...msg.actionBlock,
            steps: msg.actionBlock.steps.map(s => s.id === step.id ? { ...s, currentStatus: 'pending' } : s)
          }
        } : msg
      ));

      let success = false;
      let stepOutput = "";
      let stepErrorMessage = "";

      try {
        switch (step.type) {
          case 'runCommand':
          case 'startApplication':
            if (step.command) {
              const result = await onAiExecuteTerminalCommand(step.command);
              success = result.success;
              stepOutput = result.output;
              if (!success) stepErrorMessage = result.output || "Command execution failed.";
            } else {
              throw new Error("Missing command for runCommand/startApplication action.");
            }
            break;
          case 'searchGoogle':
            if (step.query) {
              const searchApiResp = await fetch('/api/search', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ query: step.query }),
              });
              const searchData = await searchApiResp.json();
              success = searchApiResp.ok && !searchData.error;
              stepOutput = success ? `Search for "${step.query}" returned ${searchData.results?.length || 0} results.\n\n${searchData.results?.map((r: any) => `Title: ${r.title}\nLink: ${r.link}\nSnippet: ${r.snippet}`).join('\n\n---\n\n') || 'No items found.'}` : (searchData.error || "Search request failed.");
              if (!success) stepErrorMessage = searchData.error || "Search request failed.";
              else {
                searchStepProcessedSuccessfully = true;
                searchResultsOutput = stepOutput;
              }
            } else {
              throw new Error("Missing query for searchGoogle action.");
            }
            break;
          default:
            console.warn("Unknown action type:", step.type);
            stepErrorMessage = `Unknown action type: ${step.type}`;
        }
      } catch (error: any) {
        console.error(`Error processing action step ${step.id} (${step.description}):`, error);
        success = false;
        stepErrorMessage = error.message || "An unknown error occurred during action execution.";
      }

      setMessages(prev => prev.map(msg =>
        msg.id === messageId && msg.actionBlock ? {
          ...msg,
          actionBlock: {
            ...msg.actionBlock,
            steps: msg.actionBlock.steps.map(s => s.id === step.id ? {
              ...s,
              currentStatus: success ? 'success' : 'error',
              output: stepOutput,
              errorMessage: stepErrorMessage
            } : s)
          }
        } : msg
      ));

      if (!success) {
          toast.error(`Action "${step.description}" failed: ${stepErrorMessage}`);
          setMessages(prev => prev.map(msg => msg.id === messageId ? { ...msg, _actionsProcessed: true, isTyping: false } : msg));
          setCurrentProcessingStepVisual(null);
          return; 
      }
      if (step.type === 'searchGoogle' && success) {
          break; 
      }
    }
    setCurrentProcessingStepVisual(null);

    if (searchStepProcessedSuccessfully) {
      await rePromptAIWithSearchResults(messageId, searchResultsOutput, messageId);
    } else {
      setMessages(prev => prev.map(msg => {
        if (msg.id === messageId) {
          const shouldTypeAfter = !!msg._mainContentAfter;
          return {
            ...msg,
            _actionsProcessed: true,
            content: shouldTypeAfter ? "" : msg.content,
            isTyping: shouldTypeAfter,
            _currentTextPart: shouldTypeAfter ? 'after' : msg._currentTextPart,
            _mainContentBefore: shouldTypeAfter ? msg._mainContentAfter : msg._mainContentBefore,
            _mainContentAfter: shouldTypeAfter ? "" : msg._mainContentAfter,
          };
        }
        return msg;
      }));
    }
  }, [onAiExecuteTerminalCommand, onRefreshFileTree, setMessages, typingSpeed, rePromptAIWithSearchResults]);


  useEffect(() => {
    const lastMessage = messages[messages.length - 1];
    if (lastMessage && lastMessage.role === 'assistant' && !lastMessage.isTyping && lastMessage.actionBlock && !lastMessage._actionsProcessed) {
      processActionsSequentially(lastMessage.id, lastMessage.actionBlock);
    }
  }, [messages, processActionsSequentially]);


  const renderActionBlock = (messageId: string, actionBlock: AiActionBlock) => {
    return (
      <div className="ai-action-progress-bar-container">
        {actionBlock.steps.map((step) => {
          const isActiveStep = currentProcessingStepVisual?.messageId === messageId && currentProcessingStepVisual?.stepId === step.id;
          return (
            <div key={step.id} className={cn("ai-action-step", isActiveStep && "step-active")}>
              <div className="ai-action-step-indicator-wrapper">
                {getActionStepIcon(step.type)}
              </div>
              <div className="ai-action-step-content">
                <div className="flex items-center justify-between">
                    <p className={cn("ai-action-step-description", step.currentStatus === 'success' && 'description-completed')}>
                    {step.description}
                    </p>
                    {step.currentStatus === 'pending' && <Loader2 className="ai-action-step-status-icon status-pending" />}
                    {step.currentStatus === 'success' && <CheckCircle2 className="ai-action-step-status-icon status-success" />}
                    {step.currentStatus === 'error' && <AlertTriangle className="ai-action-step-status-icon status-error" />}
                    {step.currentStatus === 'idle' && <Info className="ai-action-step-status-icon status-idle" />}
                </div>
                {(step.type === 'runCommand' || step.type === 'startApplication') && (step.commandDisplay || step.command) && (
                  <div className="ai-action-command-box">
                    {step.commandDisplay || step.command}
                  </div>
                )}
                {step.type === 'searchGoogle' && step.query && (
                     <div className="ai-action-command-box">
                        Search Query: "{step.query}"
                     </div>
                )}
                {step.currentStatus === 'error' && step.errorMessage && (
                  <p className="ai-action-error-message">{step.errorMessage}</p>
                )}
                 {step.currentStatus === 'success' && step.output && (step.type === 'runCommand' || step.type === 'searchGoogle') && (
                  <pre className="ai-action-command-box mt-1.5 !bg-background/50 max-h-20 overflow-y-auto text-xs">
                    {step.output.length > 300 ? step.output.substring(0, 300) + "..." : step.output}
                  </pre>
                )}
              </div>
            </div>
          );
        })}
      </div>
    );
  };


  const formatMessageContent = useCallback((message: MessageType) => {
    const {
      id: messageId,
      content,
      actionBlock,
      isTyping,
      _currentTextPart,
      _mainContentBefore,
      _mainContentAfter,
      _actionsProcessed
    } = message;

    let textToDisplay = content; 

    const renderMarkdown = (text: string | undefined) => {
      if (!text) return null;
      let processedText = text;
      
      if (isTyping) {
        processedText = liveHighlightMath(processedText); 
        processedText = liveHighlightStrings(processedText); 
      }
      
      let markdownInput = text; 
      if (text.includes('|') || text.includes('+--')) {
        markdownInput = convertAsciiTableToMarkdown(text);
      }
      
      const textForReactMarkdown = isTyping ? processedText : markdownInput;

      return (
        <ReactMarkdown
          remarkPlugins={[remarkGfm, remarkMath]} 
          rehypePlugins={[rehypeKatex, rehypeRaw]} // Always include rehypeRaw for HTML/JS/CSS
          components={{
            p: ({node, ...props}) => {
              return <p {...props} />;
            },
            code({ node, inline, className, children, ...props }) {
              const match = /language-(\w+(?:-live-preview)?)/.exec(className || '');
              const codeContent = String(children).replace(/\n$/, '');

              // eslint-disable-next-line react-hooks/rules-of-hooks
              const [isPreviewActive, setIsPreviewActive] = useState(false); // Local state for this block's preview

              if (!inline && match) {
                const fullLanguage = match[1];
                const isLivePreviewBlock = fullLanguage === 'html-live-preview';
                const displayLanguage = isLivePreviewBlock ? 'html' : fullLanguage;
                
                const codeBlockId = `${messageId}-code-${node?.position?.start.offset || Math.random()}`;
                
                return (
                  <div className="ai-chat-code-block relative my-3 rounded-md group/codeblock">
                    <div className="ai-chat-code-block-header"> 
                      <span>{displayLanguage}</span>
                      <div className="flex items-center">
                        {isLivePreviewBlock && (
                          <Button
                            size="icon"
                            variant="ghost"
                            className="h-6 w-6 opacity-70 group-hover/codeblock:opacity-100 transition-opacity mr-1"
                            onClick={() => setIsPreviewActive(!isPreviewActive)}
                            title={isPreviewActive ? "Show Code" : "Show Live Preview"}
                          >
                            {isPreviewActive ? <CodeIconLucide className="h-3.5 w-3.5" /> : <Eye className="h-3.5 w-3.5" />}
                          </Button>
                        )}
                        {enableCopy && (
                          <Button
                            size="icon"
                            variant="ghost"
                            className="h-6 w-6 opacity-50 group-hover/codeblock:opacity-100 transition-opacity"
                            onClick={() => onCopyToClipboard(codeContent, codeBlockId)}
                            title="Copy code"
                          >
                            {copiedId === codeBlockId ? <Check className="h-3.5 w-3.5" /> : <Copy className="h-3.5 w-3.5" />}
                          </Button>
                        )}
                      </div>
                    </div>
                    {!isPreviewActive && ( // Only show Shiki highlighted code if preview is NOT active
                        <HighlightedCodeBlock
                        code={codeContent}
                        language={fullLanguage} 
                        highlighter={highlighter}
                        codeBlockTheme={selectedShikiTheme}
                        />
                    )}
                     {isLivePreviewBlock && isPreviewActive && (
                        <div className="live-preview-iframe-container relative mt-1" style={{ height: '250px', border: '1px solid hsl(var(--border))', borderRadius: 'var(--radius-sm)', overflow: 'hidden', background: 'hsl(var(--background))' }}>
                            <iframe
                            srcDoc={codeContent} 
                            title="Live Code Preview"
                            sandbox="allow-scripts" // Be cautious with this in production
                            className="w-full h-full border-none"
                            />
                        </div>
                    )}
                  </div>
                );
              }
              // Handle inline code, potentially with live highlighting if needed
              if (inline && typeof children === 'string' && (children.includes('live-string') || children.includes('live-math'))) {
                return <code className={cn("not-prose", className)} {...props} dangerouslySetInnerHTML={{ __html: children }} />;
              }
              return (
                <code className={cn("not-prose", className)} {...props}>
                  {children}
                </code>
              );
            },
          }}
        >
          {textForReactMarkdown}
        </ReactMarkdown>
      );
    };
    
    const renderedMainContent = textToDisplay || (_currentTextPart === 'before' && _mainContentBefore) || (_currentTextPart === 'after' && _mainContentAfter) ? renderMarkdown(textToDisplay) : null;
    const shouldRenderActionBlock = actionBlock && (!_actionsProcessed || ( _actionsProcessed && !_mainContentAfter && _currentTextPart !== 'after'));
    const renderedActionBlock = shouldRenderActionBlock ? renderActionBlock(messageId, actionBlock) : null;

    const textBeingFullyTyped = _currentTextPart === 'before' ? _mainContentBefore : _mainContentAfter;
    const showTypingCursor = isTyping && textToDisplay.length < (textBeingFullyTyped || "").length && typingSpeed > 0;


    return (
      <div className="prose prose-sm dark:prose-invert max-w-none prose-p:my-1 prose-headings:my-2 prose-ul:my-1 prose-ol:my-1">
        {_currentTextPart === 'before' || !actionBlock || _actionsProcessed ? renderedMainContent : null}
        {renderedActionBlock}
        {_currentTextPart === 'after' && _actionsProcessed ? renderedMainContent : null}
        {showTypingCursor &&
         <span key={`${messageId}-cursor`} className="inline-block h-4 w-1 bg-primary animate-blink ml-0.5"></span>}
      </div>
    );
  }, [copiedId, highlighter, selectedShikiTheme, enableCopy, onCopyToClipboard, typingSpeed, currentProcessingStepVisual]);

  return (
    <>
      <ScrollArea className="flex-1 p-3 min-h-0" ref={chatContainerRef}> 
        {messages.map((message) => (
            <div
              key={message.id}
              className={cn(
                "p-3 rounded-lg mb-3",
                message.role === "user"
                  ? "bg-muted/40 ml-4"
                  : "bg-muted/20 mr-4"
              )}
            >
              <div className="flex items-center mb-1">
                {message.role === "assistant" ? (
                  <Bot className="h-4 w-4 mr-1 text-primary" />
                ) : (
                  <User className="h-4 w-4 mr-1 text-primary" />
                )}
                <span className="text-xs text-muted-foreground">
                  {message.role === "assistant" ? "CodeForge" : "You"} •{" "}
                  {isClient ? (
                    message.timestamp.toLocaleTimeString([], {
                      hour: "2-digit",
                      minute: "2-digit",
                    })
                  ) : (
                    <span style={{ display: 'inline-block', width: '45px' }}>&nbsp;</span>
                  )}
                </span>
                {message.role === "assistant" &&
                  !message.isTyping &&
                  message.content &&
                  !message.actionBlock &&
                    <Button
                      size="icon"
                      variant="ghost"
                      className="h-6 w-6 ml-auto opacity-70 hover:opacity-100"
                      onClick={() =>
                        onCopyToClipboard(message.content!, message.id)
                      }
                      title="Copy message"
                    >
                      {copiedId === message.id ? (
                        <Check className="h-3 w-3" />
                      ) : (
                        <Copy className="h-3 w-3" />
                      )}
                    </Button>
                  }
              </div>
              <div className="pl-5 text-sm">
                {formatMessageContent(message)}
              </div>
            </div>
          )
        )}
        <div ref={messagesEndRef} />
      </ScrollArea>

      <div className="p-3 border-t border-border mt-auto shrink-0">
        <div className="flex flex-col space-y-2">
          <Textarea
            ref={textareaRef}
            value={inputValue}
            onChange={handleTextareaChange}
            onKeyDown={onKeyDown}
            placeholder={
              activeApiKey && selectedModel
                ? "Ask CodeForge anything..."
                : "Set API Key and select model in Settings to chat."
            }
            className="min-h-[60px] max-h-[150px] resize-none"
            rows={1}
            disabled={!activeApiKey || !selectedModel || isAISending || messages.some(m => m.actionBlock && m.actionBlock.steps.some(s => s.currentStatus === 'pending'))}
          />
          <div className="flex justify-between items-center">
            <div className="flex space-x-1">
              { (isAISending || messages.some(m => m.role === 'assistant' && m.isTyping) || messages.some(m => m.actionBlock && m.actionBlock.steps.some(s => s.currentStatus === 'pending'))) ? (
                <Button
                  variant="outline"
                  size="sm"
                  onClick={onStopGenerating}
                  className="flex items-center text-destructive border-destructive hover:bg-destructive/10 hover:text-destructive"
                  title="Stop generating response / actions"
                >
                  <Square className="h-3.5 w-3.5 mr-1.5" />
                  Stop
                </Button>
              ) : (
                <>
                <Button
                size="icon"
                variant="ghost"
                className="h-8 w-8"
                title="Insert code snippet (coming soon)"
                disabled
              >
                <CodeBlockIcon className="h-4 w-4" />
              </Button>
              <Button
                size="icon"
                variant="ghost"
                className="h-8 w-8"
                title="Upload file (coming soon)"
                disabled
              >
                <FileCode className="h-4 w-4" />
              </Button>
                </>
              )}
            </div>
            <Button
              onClick={() => onSendMessage()} 
              disabled={
                !inputValue.trim() ||
                isAISending ||
                !activeApiKey ||
                !selectedModel ||
                messages.some((m) => m.role === 'assistant' && m.isTyping) ||
                messages.some(m => m.actionBlock && m.actionBlock.steps.some(s => s.currentStatus === 'pending'))
              }
              className="flex items-center"
            >
              {isAISending ? (
                <Loader2 className="h-4 w-4 mr-2 animate-spin" />
              ) : (
                <Send className="h-4 w-4 mr-2" />
              )}
              {isAISending ? "Sending..." : "Send"}
            </Button>
          </div>
        </div>
      </div>
    </>
  );
};

--- File: components\sidebar-parts\chat-tab.tsx ---
// components/sidebar-parts/chat-tab.tsx
"use client";

import React from "react";
import { TabsContent } from "@/components/ui"; // Consolidated import
import { ChatInterface, type MessageType } from './chat-interface';
import type { Highlighter, BundledTheme as ShikiTheme } from 'shiki';
import type { GeminiContent } from "@/components/sidebar"; // Assuming GeminiContent is exported from sidebar or a shared types file

interface ChatTabProps {
  messages: MessageType[];
  setMessages: React.Dispatch<React.SetStateAction<MessageType[]>>;
  inputValue: string;
  onInputChange: (value: string) => void;
  onSendMessage: (isReprompt?: boolean, repromptHistory?: GeminiContent[]) => Promise<void>; // Matched signature from Sidebar
  onKeyDown: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;
  isAISending: boolean;
  activeApiKey: string | null;
  selectedModel: string;
  copiedId: string | null;
  onCopyToClipboard: (text: string, id: string) => void;
  highlighter: Highlighter | null;
  selectedShikiTheme: ShikiTheme;
  enableCopy: boolean;
  typingSpeed: number;
  onStopGenerating: () => void;
  onAiOpenFileInEditor: (filePath: string) => Promise<void>;
  onAiExecuteTerminalCommand: (command: string) => Promise<{ success: boolean; output: string }>;
  onRefreshFileTree: () => void;
}


export const ChatTab: React.FC<ChatTabProps> = (props) => {
  return (
    <TabsContent value="chat" className="flex flex-col flex-1 overflow-y-hidden">
      <ChatInterface {...props} />
    </TabsContent>
  );
};

--- File: components\sidebar-parts\settings-interface.tsx ---
// components/sidebar-parts/settings-interface.tsx
"use client";

import React from "react";
import { 
  Input, 
  Button, 
  Select, SelectContent, SelectItem, SelectTrigger, SelectValue, 
  Switch, 
  Label 
} from "@/components/ui"; // Consolidated imports
import { AlertCircle, Palette, MonitorPlay, Terminal as TerminalLucideIcon, Sun, Moon, Laptop, Paintbrush, ShieldCheck, ShieldOff } from "lucide-react";
import type { EditorTheme } from '@/components/code-editor';
import type { BundledTheme } from 'shiki';


interface GeminiModel {
  id: string;
  name: string;
}

interface ThemeOption {
  name: string;
  value: string | BundledTheme | EditorTheme;
}

interface SettingsInterfaceProps {
  apiKeyInputValue: string;
  onApiKeyInputChange: (value: string) => void;
  onVerifyApiKey: () => void;
  isVerifyingApiKey: boolean;
  activeApiKey: string | null;
  availableModels: GeminiModel[];
  selectedModel: string;
  onModelChange: (value: string) => void;
  isLoadingModels: boolean;
  appTheme?: string;
  onAppThemeChange: (value: string) => void;
  selectedShikiTheme: BundledTheme;
  onShikiThemeChange: (value: BundledTheme) => void;
  shikiThemesList: ThemeOption[];
  selectedEditorTheme: EditorTheme;
  onEditorThemeChange: (value: EditorTheme) => void;
  editorThemesList: ThemeOption[];
  selectedTerminalTheme: string;
  onTerminalThemeChange: (value: string) => void;
  terminalThemesList: ThemeOption[];
  isTerminalInputDisabled: boolean;
  setIsTerminalInputDisabled: (disabled: boolean) => void;
}

export const SettingsInterface: React.FC<SettingsInterfaceProps> = ({
  apiKeyInputValue,
  onApiKeyInputChange,
  onVerifyApiKey,
  isVerifyingApiKey,
  activeApiKey,
  availableModels,
  selectedModel,
  onModelChange,
  isLoadingModels,
  appTheme,
  onAppThemeChange,
  selectedShikiTheme,
  onShikiThemeChange,
  shikiThemesList,
  selectedEditorTheme,
  onEditorThemeChange,
  editorThemesList,
  selectedTerminalTheme,
  onTerminalThemeChange,
  terminalThemesList,
  isTerminalInputDisabled,
  setIsTerminalInputDisabled,
}) => {
  return (
    <>
      <div className="space-y-1">
        <Label htmlFor="apiKeyInput" className="text-sm font-medium"> {/* Changed from label to Label */}
          Gemini API Key
        </Label>
        <div className="flex items-center space-x-2">
          <Input
            id="apiKeyInput"
            type="password"
            value={apiKeyInputValue}
            onChange={(e) => onApiKeyInputChange(e.target.value)}
            placeholder="Enter your Gemini API Key"
            disabled={isVerifyingApiKey}
            onKeyDown={(e) => {
              if (e.key === "Enter") onVerifyApiKey();
            }}
          />
          <Button
            onClick={onVerifyApiKey}
            disabled={isVerifyingApiKey || !apiKeyInputValue.trim()}
            className="shrink-0"
          >
            {isVerifyingApiKey ? "Verifying..." : "Set & Load"}
          </Button>
        </div>
        <p className="text-xs text-muted-foreground">
          Gemini API key is required. Get yours from Google AI Studio.
          {activeApiKey && (
            <span className="ml-1 font-medium text-green-500">
              Key is active.
            </span>
          )}
        </p>
      </div>

      <div className="space-y-2">
        <Label htmlFor="modelSelect" className="text-sm font-medium"> {/* Changed from label to Label */}
          AI Model
        </Label>
        <Select
          value={selectedModel}
          onValueChange={onModelChange}
          disabled={!activeApiKey || isLoadingModels || availableModels.length === 0}
        >
          <SelectTrigger id="modelSelect">
            <SelectValue
              placeholder={
                !activeApiKey
                  ? "Set API key first"
                  : isLoadingModels
                  ? "Loading models..."
                  : availableModels.length === 0
                  ? "No models available"
                  : "Select a model"
              }
            />
          </SelectTrigger>
          <SelectContent>
            {availableModels.map((model) => (
              <SelectItem key={model.id} value={model.id}>
                {model.name} ({model.id.split("/").pop()})
              </SelectItem>
            ))}
            {availableModels.length === 0 &&
              !isLoadingModels &&
              activeApiKey && (
                <div className="p-2 text-sm text-muted-foreground flex items-center">
                  <AlertCircle className="w-4 h-4 mr-2" /> No compatible models
                  found or API key invalid.
                </div>
              )}
            {availableModels.length === 0 &&
              !isLoadingModels &&
              !activeApiKey && (
                <div className="p-2 text-sm text-muted-foreground flex items-center">
                  <AlertCircle className="w-4 h-4 mr-2" /> Set API key to load
                  models.
                </div>
              )}
          </SelectContent>
        </Select>
        <p className="text-xs text-muted-foreground">
          Select a Gemini model for chat.
        </p>
      </div>

      <div className="space-y-2">
        <Label htmlFor="appThemeSelect" className="text-sm font-medium flex items-center"> {/* Changed from label to Label */}
          <Paintbrush className="w-4 h-4 mr-2" /> App Theme
        </Label>
        <Select
          value={appTheme || "system"}
          onValueChange={onAppThemeChange}
        >
          <SelectTrigger id="appThemeSelect">
            <SelectValue placeholder="Select app theme" />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="light">
              <div className="flex items-center">
                <Sun className="w-4 h-4 mr-2" /> Light
              </div>
            </SelectItem>
            <SelectItem value="dark">
              <div className="flex items-center">
                <Moon className="w-4 h-4 mr-2" /> Dark
              </div>
            </SelectItem>
            <SelectItem value="system">
              <div className="flex items-center">
                <Laptop className="w-4 h-4 mr-2" /> System
              </div>
            </SelectItem>
            <SelectItem value="midnight-blue">
              <div className="flex items-center">
                <Moon className="w-4 h-4 mr-2" /> Midnight Blue
              </div>
            </SelectItem>
            <SelectItem value="sandstone">
              <div className="flex items-center">
                <Sun className="w-4 h-4 mr-2" /> Sandstone
              </div>
            </SelectItem>
          </SelectContent>
        </Select>
        <p className="text-xs text-muted-foreground">
          Controls the overall application theme.
        </p>
      </div>

      <div className="space-y-2">
        <Label
          htmlFor="codeBlockThemeSelect"
          className="text-sm font-medium flex items-center"
        >
          <Palette className="w-4 h-4 mr-2" /> AI Chat Code Theme
        </Label>
        <Select
          value={selectedShikiTheme}
          onValueChange={(value) => onShikiThemeChange(value as BundledTheme)}
        >
          <SelectTrigger id="codeBlockThemeSelect">
            <SelectValue placeholder="Select AI code theme" />
          </SelectTrigger>
          <SelectContent>
            {shikiThemesList.map((themeOption) => (
              <SelectItem key={String(themeOption.value)} value={String(themeOption.value)}>
                {themeOption.name}
              </SelectItem>
            ))}
          </SelectContent>
        </Select>
        <p className="text-xs text-muted-foreground">
          Syntax highlighting for AI-generated code blocks in chat.
        </p>
      </div>

      <div className="space-y-2">
        <Label
          htmlFor="editorThemeSelect"
          className="text-sm font-medium flex items-center"
        >
          <MonitorPlay className="w-4 h-4 mr-2" /> Editor Theme
        </Label>
        <Select
          value={selectedEditorTheme}
          onValueChange={(value) => onEditorThemeChange(value as EditorTheme)}
        >
          <SelectTrigger id="editorThemeSelect">
            <SelectValue placeholder="Select editor theme" />
          </SelectTrigger>
          <SelectContent>
            {editorThemesList.map((themeOption) => (
              <SelectItem key={String(themeOption.value)} value={String(themeOption.value)}>
                {themeOption.name}
              </SelectItem>
            ))}
          </SelectContent>
        </Select>
        <p className="text-xs text-muted-foreground">
          Theme for the main code editor.
        </p>
      </div>

      <div className="space-y-2">
        <Label
          htmlFor="terminalThemeSelect"
          className="text-sm font-medium flex items-center"
        >
          <TerminalLucideIcon className="w-4 h-4 mr-2" /> Terminal Theme
        </Label>
        <Select
          value={selectedTerminalTheme}
          onValueChange={onTerminalThemeChange}
        >
          <SelectTrigger id="terminalThemeSelect">
            <SelectValue placeholder="Select terminal theme" />
          </SelectTrigger>
          <SelectContent>
            {terminalThemesList.map((themeOption) => (
              <SelectItem key={String(themeOption.value)} value={String(themeOption.value)}>
                {themeOption.name}
              </SelectItem>
            ))}
          </SelectContent>
        </Select>
        <p className="text-xs text-muted-foreground">
          Appearance of the integrated terminal.
        </p>
      </div>

      <div className="space-y-2 pt-2">
        <Label htmlFor="terminal-input-switch" className="text-sm font-medium flex items-center">
          {isTerminalInputDisabled ? <ShieldOff className="w-4 h-4 mr-2 text-destructive" /> : <ShieldCheck className="w-4 h-4 mr-2 text-success" />}
          Terminal Input
        </Label>
        <div className="flex items-center space-x-2">
          <Switch
            id="terminal-input-switch"
            checked={!isTerminalInputDisabled}
            onCheckedChange={(checked) => setIsTerminalInputDisabled(!checked)}
          />
          <span className="text-xs text-muted-foreground">
            {isTerminalInputDisabled ? "Input Disabled (AI cannot run commands)" : "Input Enabled (AI can run commands)"}
          </span>
        </div>
        <p className="text-xs text-muted-foreground">
          Toggle user and AI ability to execute commands in the terminal.
        </p>
      </div>
    </>
  );
};

--- File: components\sidebar-parts\settings-tab.tsx ---
// components/sidebar-parts/settings-tab.tsx
"use client";

import React from "react";
import { TabsContent } from "@/components/ui"; // Consolidated import
import { SettingsInterface } from './settings-interface'; 
import type { EditorTheme } from '@/components/code-editor';
import type { BundledTheme as ShikiTheme } from 'shiki';

interface GeminiModel {
  id: string;
  name: string;
}

interface ThemeOption {
  name: string;
  value: string | ShikiTheme | EditorTheme;
}

interface SettingsTabProps {
  apiKeyInputValue: string;
  onApiKeyInputChange: (value: string) => void;
  onVerifyApiKey: () => void;
  isVerifyingApiKey: boolean;
  activeApiKey: string | null;
  availableModels: GeminiModel[];
  selectedModel: string;
  onModelChange: (value: string) => void;
  isLoadingModels: boolean;
  appTheme?: string;
  onAppThemeChange: (value: string) => void;
  selectedShikiTheme: ShikiTheme;
  onShikiThemeChange: (value: ShikiTheme) => void;
  shikiThemesList: ThemeOption[];
  selectedEditorTheme: EditorTheme;
  onEditorThemeChange: (value: EditorTheme) => void;
  editorThemesList: ThemeOption[];
  selectedTerminalTheme: string;
  onTerminalThemeChange: (value: string) => void;
  terminalThemesList: ThemeOption[];
  isTerminalInputDisabled: boolean; // Added from Sidebar
  setIsTerminalInputDisabled: (disabled: boolean) => void; // Added from Sidebar
}

export const SettingsTab: React.FC<SettingsTabProps> = (props) => {
  return (
    <TabsContent value="settings" className="mt-0 px-3 pb-3 space-y-6 overflow-y-auto">
      <SettingsInterface {...props} />
    </TabsContent>
  );
};

--- File: components\ui\core.tsx ---
// components/ui/core.tsx
"use client"

import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import * as AvatarPrimitive from "@radix-ui/react-avatar"
import * as AspectRatioPrimitive from "@radix-ui/react-aspect-ratio"
import * as SeparatorPrimitive from "@radix-ui/react-separator"
import * as TogglePrimitive from "@radix-ui/react-toggle"
import * as ToggleGroupPrimitive from "@radix-ui/react-toggle-group"
import * as RadixLabelPrimitive from "@radix-ui/react-label"; // Import with an alias
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

// --- Button ---
const buttonVariants = cva(
  "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-foreground hover:bg-primary/90",
        destructive: "bg-destructive text-destructive-foreground hover:bg-destructive/90",
        outline: "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
        secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-10 px-4 py-2",
        sm: "h-9 rounded-md px-3",
        lg: "h-11 rounded-md px-8",
        icon: "h-10 w-10",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)
export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
}
const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button"
    return <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />
  },
)
Button.displayName = "Button"

// --- Badge ---
const badgeVariants = cva(
  "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
  {
    variants: {
      variant: {
        default:
          "border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
        secondary:
          "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
        destructive:
          "border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
        outline: "text-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)
export interface BadgeProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof badgeVariants> {}
function Badge({ className, variant, ...props }: BadgeProps) {
  return (
    <div className={cn(badgeVariants({ variant }), className)} {...props} />
  )
}

// --- Label ---
// const LabelPrimitive = LabelPrimitive // This was the problematic line
const labelVariants = cva(
  "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
)
const Label = React.forwardRef<
  React.ElementRef<typeof RadixLabelPrimitive.Root>, // Use the aliased import
  React.ComponentPropsWithoutRef<typeof RadixLabelPrimitive.Root> & // Use the aliased import
    VariantProps<typeof labelVariants>
>(({ className, ...props }, ref) => (
  <RadixLabelPrimitive.Root // Use the aliased import
    ref={ref}
    className={cn(labelVariants(), className)}
    {...props}
  />
))
Label.displayName = RadixLabelPrimitive.Root.displayName // Use the aliased import


// --- Input ---
export interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}
const Input = React.forwardRef<HTMLInputElement, InputProps>(({ className, type, ...props }, ref) => {
  return (
    <input
      type={type}
      className={cn(
        "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
        className,
      )}
      ref={ref}
      {...props}
    />
  )
})
Input.displayName = "Input"

// --- Textarea ---
export interface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}
const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(({ className, ...props }, ref) => {
  return (
    <textarea
      className={cn(
        "flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
        className,
      )}
      ref={ref}
      {...props}
    />
  )
})
Textarea.displayName = "Textarea"

// --- Separator ---
const Separator = React.forwardRef<
  React.ElementRef<typeof SeparatorPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>
>(({ className, orientation = "horizontal", decorative = true, ...props }, ref) => (
  <SeparatorPrimitive.Root
    ref={ref}
    decorative={decorative}
    orientation={orientation}
    className={cn("shrink-0 bg-border", orientation === "horizontal" ? "h-[1px] w-full" : "h-full w-[1px]", className)}
    {...props}
  />
))
Separator.displayName = SeparatorPrimitive.Root.displayName

// --- Skeleton ---
function Skeleton({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) {
  return (
    <div
      className={cn("animate-pulse rounded-md bg-muted", className)}
      {...props}
    />
  )
}

// --- AspectRatio ---
const AspectRatio = AspectRatioPrimitive.Root

// --- Avatar ---
const Avatar = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Root
    ref={ref}
    className={cn(
      "relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full",
      className
    )}
    {...props}
  />
))
Avatar.displayName = AvatarPrimitive.Root.displayName

const AvatarImage = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Image>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Image
    ref={ref}
    className={cn("aspect-square h-full w-full", className)}
    {...props}
  />
))
AvatarImage.displayName = AvatarPrimitive.Image.displayName

const AvatarFallback = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Fallback>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Fallback
    ref={ref}
    className={cn(
      "flex h-full w-full items-center justify-center rounded-full bg-muted",
      className
    )}
    {...props}
  />
))
AvatarFallback.displayName = AvatarPrimitive.Fallback.displayName

// --- Toggle ---
const toggleVariants = cva(
  "inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2",
  {
    variants: {
      variant: {
        default: "bg-transparent",
        outline:
          "border border-input bg-transparent hover:bg-accent hover:text-accent-foreground",
      },
      size: {
        default: "h-10 px-3 min-w-10",
        sm: "h-9 px-2.5 min-w-9",
        lg: "h-11 px-5 min-w-11",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)
const Toggle = React.forwardRef<
  React.ElementRef<typeof TogglePrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &
    VariantProps<typeof toggleVariants>
>(({ className, variant, size, ...props }, ref) => (
  <TogglePrimitive.Root
    ref={ref}
    className={cn(toggleVariants({ variant, size, className }))}
    {...props}
  />
))
Toggle.displayName = TogglePrimitive.Root.displayName

// --- ToggleGroup ---
const ToggleGroupContext = React.createContext<
  VariantProps<typeof toggleVariants>
>({
  size: "default",
  variant: "default",
})
const ToggleGroup = React.forwardRef<
  React.ElementRef<typeof ToggleGroupPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &
    VariantProps<typeof toggleVariants>
>(({ className, variant, size, children, ...props }, ref) => (
  <ToggleGroupPrimitive.Root
    ref={ref}
    className={cn("flex items-center justify-center gap-1", className)}
    {...props}
  >
    <ToggleGroupContext.Provider value={{ variant, size }}>
      {children}
    </ToggleGroupContext.Provider>
  </ToggleGroupPrimitive.Root>
))
ToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName

const ToggleGroupItem = React.forwardRef<
  React.ElementRef<typeof ToggleGroupPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &
    VariantProps<typeof toggleVariants>
>(({ className, children, variant, size, ...props }, ref) => {
  const context = React.useContext(ToggleGroupContext)
  return (
    <ToggleGroupPrimitive.Item
      ref={ref}
      className={cn(
        toggleVariants({
          variant: context.variant || variant,
          size: context.size || size,
        }),
        className
      )}
      {...props}
    >
      {children}
    </ToggleGroupPrimitive.Item>
  )
})
ToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName


export {
  Button, buttonVariants,
  Badge, badgeVariants,
  Label, labelVariants,
  Input,
  Textarea,
  Separator,
  Skeleton,
  AspectRatio,
  Avatar, AvatarImage, AvatarFallback,
  Toggle, toggleVariants,
  ToggleGroup, ToggleGroupItem
}

--- File: components\ui\feedback.tsx ---
// components/ui/feedback.tsx
"use client"

import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"
import * as ToastPrimitives from "@radix-ui/react-toast"
import { X } from "lucide-react"
import { useTheme } from "next-themes"
import { Toaster as Sonner } from "sonner"
import * as RechartsPrimitive from "recharts"
import { Command as CommandPrimitive } from "cmdk"
import { Search as SearchIcon } from "lucide-react"
// Assuming Dialog and DialogContent are now exported from your new overlays.tsx or directly if not consolidated yet
// For this example, I'll assume they are part of an 'overlays' export from '@components/ui' if you've made that change.
// If Dialog is still separate, adjust the import.
import { Dialog, DialogContent } from "@/components/ui" // This assumes Dialog and DialogContent are re-exported from your ui/index.ts

import { cn } from "@/lib/utils"

// --- Alert ---
const alertVariants = cva(
  "relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground",
  {
    variants: {
      variant: {
        default: "bg-background text-foreground",
        destructive:
          "border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive",
      },
    },
    defaultVariants: { variant: "default" },
  }
)
const Alert = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>
>(({ className, variant, ...props }, ref) => (
  <div ref={ref} role="alert" className={cn(alertVariants({ variant }), className)} {...props} />
))
Alert.displayName = "Alert"
const AlertTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(
  ({ className, ...props }, ref) => ( <h5 ref={ref} className={cn("mb-1 font-medium leading-none tracking-tight", className)} {...props} />
))
AlertTitle.displayName = "AlertTitle"
const AlertDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(
  ({ className, ...props }, ref) => ( <div ref={ref} className={cn("text-sm [&_p]:leading-relaxed", className)} {...props} />
))
AlertDescription.displayName = "AlertDescription"

// --- Sonner Toaster ---
type SonnerToasterProps = React.ComponentProps<typeof Sonner>
const SonnerToaster = ({ ...props }: SonnerToasterProps) => {
  const { theme = "system" } = useTheme()
  return (
    <Sonner
      theme={theme as SonnerToasterProps["theme"]}
      className="toaster group"
      toastOptions={{
        classNames: {
          toast: "group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg",
          description: "group-[.toast]:text-muted-foreground",
          actionButton: "group-[.toast]:bg-primary group-[.toast]:text-primary-foreground",
          cancelButton: "group-[.toast]:bg-muted group-[.toast]:text-muted-foreground",
        },
      }}
      {...props}
    />
  )
}

// --- Radix Toast ---
const ToastProvider = ToastPrimitives.Provider
const ToastViewport = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Viewport>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Viewport
    ref={ref}
    className={cn("fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]", className)}
    {...props}
  />
))
ToastViewport.displayName = ToastPrimitives.Viewport.displayName
const toastVariants = cva(
  "group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full",
  {
    variants: {
      variant: {
        default: "border bg-background text-foreground",
        destructive: "destructive group border-destructive bg-destructive text-destructive-foreground",
      },
    },
    defaultVariants: { variant: "default" },
  }
)
const Toast = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Root>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> & VariantProps<typeof toastVariants>
>(({ className, variant, ...props }, ref) => {
  return ( <ToastPrimitives.Root ref={ref} className={cn(toastVariants({ variant }), className)} {...props} /> )
})
Toast.displayName = ToastPrimitives.Root.displayName
const ToastAction = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Action>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Action
    ref={ref}
    className={cn("inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive", className)}
    {...props}
  />
))
ToastAction.displayName = ToastPrimitives.Action.displayName
const ToastClose = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Close>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Close
    ref={ref}
    className={cn("absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600", className)}
    toast-close=""
    {...props}
  >
    <X className="h-4 w-4" />
  </ToastPrimitives.Close>
))
ToastClose.displayName = ToastPrimitives.Close.displayName
const ToastTitle = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Title>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Title ref={ref} className={cn("text-sm font-semibold", className)} {...props} />
))
ToastTitle.displayName = ToastPrimitives.Title.displayName
const ToastDescription = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Description>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Description ref={ref} className={cn("text-sm opacity-90", className)} {...props} />
))
ToastDescription.displayName = ToastPrimitives.Description.displayName
type RadixToastProps = React.ComponentPropsWithoutRef<typeof Toast>
type RadixToastActionElement = React.ReactElement<typeof ToastAction>

// --- Custom Radix Toaster (useToast hook logic) ---
const TOAST_LIMIT = 1
const TOAST_REMOVE_DELAY = 1000000
type ToasterToast = RadixToastProps & {
  id: string
  title?: React.ReactNode
  description?: React.ReactNode
  action?: RadixToastActionElement
}
const actionTypes = { ADD_TOAST: "ADD_TOAST", UPDATE_TOAST: "UPDATE_TOAST", DISMISS_TOAST: "DISMISS_TOAST", REMOVE_TOAST: "REMOVE_TOAST" } as const
let count = 0
function genId() { count = (count + 1) % Number.MAX_SAFE_INTEGER; return count.toString() }
type ActionType = typeof actionTypes
type Action = | { type: ActionType["ADD_TOAST"]; toast: ToasterToast } | { type: ActionType["UPDATE_TOAST"]; toast: Partial<ToasterToast> } | { type: ActionType["DISMISS_TOAST"]; toastId?: ToasterToast["id"] } | { type: ActionType["REMOVE_TOAST"]; toastId?: ToasterToast["id"] }
interface State { toasts: ToasterToast[] }
const toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()
const addToRemoveQueue = (toastId: string) => {
  if (toastTimeouts.has(toastId)) { return }
  const timeout = setTimeout(() => { toastTimeouts.delete(toastId); customRadixDispatch({ type: "REMOVE_TOAST", toastId: toastId }) }, TOAST_REMOVE_DELAY)
  toastTimeouts.set(toastId, timeout)
}
export const customRadixToastReducer = (state: State, action: Action): State => {
  switch (action.type) {
    case "ADD_TOAST": return { ...state, toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT) }
    case "UPDATE_TOAST": return { ...state, toasts: state.toasts.map((t) => t.id === action.toast.id ? { ...t, ...action.toast } : t )}
    case "DISMISS_TOAST": {
      const { toastId } = action
      if (toastId) { addToRemoveQueue(toastId) } else { state.toasts.forEach((toast) => { addToRemoveQueue(toast.id) }) }
      return { ...state, toasts: state.toasts.map((t) => t.id === toastId || toastId === undefined ? { ...t, open: false } : t )}
    }
    case "REMOVE_TOAST":
      if (action.toastId === undefined) { return { ...state, toasts: [] } }
      return { ...state, toasts: state.toasts.filter((t) => t.id !== action.toastId) }
  }
}
const listeners: Array<(state: State) => void> = []
let memoryState: State = { toasts: [] }
function customRadixDispatch(action: Action) { memoryState = customRadixToastReducer(memoryState, action); listeners.forEach((listener) => { listener(memoryState) }) }
type RadixCustomToast = Omit<ToasterToast, "id">
function customToast({ ...props }: RadixCustomToast) {
  const id = genId()
  const update = (props: ToasterToast) => customRadixDispatch({ type: "UPDATE_TOAST", toast: { ...props, id } })
  const dismiss = () => customRadixDispatch({ type: "DISMISS_TOAST", toastId: id })
  customRadixDispatch({ type: "ADD_TOAST", toast: { ...props, id, open: true, onOpenChange: (open) => { if (!open) dismiss() } } })
  return { id: id, dismiss, update }
}
function useCustomRadixToast() {
  const [state, setState] = React.useState<State>(memoryState)
  React.useEffect(() => {
    listeners.push(setState)
    return () => { const index = listeners.indexOf(setState); if (index > -1) { listeners.splice(index, 1) } }
  }, [state])
  return { ...state, toast: customToast, dismiss: (toastId?: string) => customRadixDispatch({ type: "DISMISS_TOAST", toastId }) }
}
function CustomRadixToaster() {
  const { toasts } = useCustomRadixToast()
  return (
    <ToastProvider>
      {toasts.map(function ({ id, title, description, action, ...props }) {
        return (
          <Toast key={id} {...props}>
            <div className="grid gap-1">
              {title && <ToastTitle>{title}</ToastTitle>}
              {description && (<ToastDescription>{description}</ToastDescription>)}
            </div>
            {action}
            <ToastClose />
          </Toast>
        )
      })}
      <ToastViewport />
    </ToastProvider>
  )
}

// --- Chart ---
const THEMES = { light: "", dark: ".dark" } as const
export type ChartConfig = {
  [k in string]: { label?: React.ReactNode; icon?: React.ComponentType } & ( | { color?: string; theme?: never } | { color?: never; theme: Record<keyof typeof THEMES, string> } )
}
type ChartContextProps = { config: ChartConfig }
const ChartContext = React.createContext<ChartContextProps | null>(null)
function useChart() {
  const context = React.useContext(ChartContext)
  if (!context) { throw new Error("useChart must be used within a <ChartContainer />") }
  return context
}
const ChartContainer = React.forwardRef<
  HTMLDivElement, React.ComponentProps<"div"> & { config: ChartConfig; children: React.ComponentProps<typeof RechartsPrimitive.ResponsiveContainer>["children"] }
>(({ id, className, children, config, ...props }, ref) => {
  const uniqueId = React.useId(); const chartId = `chart-${id || uniqueId.replace(/:/g, "")}`
  return (
    <ChartContext.Provider value={{ config }}>
      <div data-chart={chartId} ref={ref} className={cn("flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none", className)} {...props}>
        <ChartStyle id={chartId} config={config} />
        <RechartsPrimitive.ResponsiveContainer>{children}</RechartsPrimitive.ResponsiveContainer>
      </div>
    </ChartContext.Provider>
  )
})
ChartContainer.displayName = "Chart"
const ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {
  const colorConfig = Object.entries(config).filter(([_, config]) => config.theme || config.color)
  if (!colorConfig.length) { return null }
  return ( <style dangerouslySetInnerHTML={{ __html: Object.entries(THEMES).map(([theme, prefix]) => ` ${prefix} [data-chart=${id}] { ${colorConfig.map(([key, itemConfig]) => { const color = itemConfig.theme?.[theme as keyof typeof itemConfig.theme] || itemConfig.color; return color ? `  --color-${key}: ${color};` : null }).join("\n")} } `).join("\n"), }} /> )
}
const ChartTooltip = RechartsPrimitive.Tooltip
const ChartTooltipContent = React.forwardRef<
  HTMLDivElement, React.ComponentProps<typeof RechartsPrimitive.Tooltip> & React.ComponentProps<"div"> & { hideLabel?: boolean; hideIndicator?: boolean; indicator?: "line" | "dot" | "dashed"; nameKey?: string; labelKey?: string }
>(({ active, payload, className, indicator = "dot", hideLabel = false, hideIndicator = false, label, labelFormatter, labelClassName, formatter, color, nameKey, labelKey, }, ref) => {
  const { config } = useChart()
  const tooltipLabel = React.useMemo(() => {
    if (hideLabel || !payload?.length) { return null }
    const [item] = payload; const key = `${labelKey || item.dataKey || item.name || "value"}`; const itemConfig = getPayloadConfigFromPayload(config, item, key); const value = !labelKey && typeof label === "string" ? config[label as keyof typeof config]?.label || label : itemConfig?.label
    if (labelFormatter) { return ( <div className={cn("font-medium", labelClassName)}>{labelFormatter(value, payload)}</div> ) }
    if (!value) { return null }
    return <div className={cn("font-medium", labelClassName)}>{value}</div>
  }, [label, labelFormatter, payload, hideLabel, labelClassName, config, labelKey])
  if (!active || !payload?.length) { return null }
  const nestLabel = payload.length === 1 && indicator !== "dot"
  return (
    <div ref={ref} className={cn("grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl", className)}>
      {!nestLabel ? tooltipLabel : null}
      <div className="grid gap-1.5">
        {payload.map((item, index) => {
          const key = `${nameKey || item.name || item.dataKey || "value"}`; const itemConfig = getPayloadConfigFromPayload(config, item, key); const indicatorColor = color || item.payload.fill || item.color
          return (
            <div key={item.dataKey} className={cn("flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground", indicator === "dot" && "items-center")}>
              {formatter && item?.value !== undefined && item.name ? (formatter(item.value, item.name, item, index, item.payload)) : (
                <>
                  {itemConfig?.icon ? (<itemConfig.icon />) : (!hideIndicator && ( <div className={cn("shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]", { "h-2.5 w-2.5": indicator === "dot", "w-1": indicator === "line", "w-0 border-[1.5px] border-dashed bg-transparent": indicator === "dashed", "my-0.5": nestLabel && indicator === "dashed", })} style={ { "--color-bg": indicatorColor, "--color-border": indicatorColor, } as React.CSSProperties } /> ))}
                  <div className={cn("flex flex-1 justify-between leading-none", nestLabel ? "items-end" : "items-center")}>
                    <div className="grid gap-1.5">{nestLabel ? tooltipLabel : null} <span className="text-muted-foreground">{itemConfig?.label || item.name}</span> </div>
                    {item.value && (<span className="font-mono font-medium tabular-nums text-foreground">{item.value.toLocaleString()}</span>)}
                  </div>
                </>
              )}
            </div>
          )
        })}
      </div>
    </div>
  )
})
ChartTooltipContent.displayName = "ChartTooltip"
const ChartLegend = RechartsPrimitive.Legend
const ChartLegendContent = React.forwardRef<
  HTMLDivElement, React.ComponentProps<"div"> & Pick<RechartsPrimitive.LegendProps, "payload" | "verticalAlign"> & { hideIcon?: boolean; nameKey?: string }
>(({ className, hideIcon = false, payload, verticalAlign = "bottom", nameKey }, ref) => {
  const { config } = useChart()
  if (!payload?.length) { return null }
  return (
    <div ref={ref} className={cn("flex items-center justify-center gap-4", verticalAlign === "top" ? "pb-3" : "pt-3", className)}>
      {payload.map((item) => {
        const key = `${nameKey || item.dataKey || "value"}`; const itemConfig = getPayloadConfigFromPayload(config, item, key)
        return (
          <div key={item.value} className={cn("flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground")}>
            {itemConfig?.icon && !hideIcon ? (<itemConfig.icon />) : (<div className="h-2 w-2 shrink-0 rounded-[2px]" style={{ backgroundColor: item.color }} />)}
            {itemConfig?.label}
          </div>
        )
      })}
    </div>
  )
})
ChartLegendContent.displayName = "ChartLegend"
function getPayloadConfigFromPayload(config: ChartConfig, payload: unknown, key: string) {
  if (typeof payload !== "object" || payload === null) { return undefined }
  const payloadPayload = "payload" in payload && typeof payload.payload === "object" && payload.payload !== null ? payload.payload : undefined
  let configLabelKey: string = key
  if (key in payload && typeof payload[key as keyof typeof payload] === "string") { configLabelKey = payload[key as keyof typeof payload] as string }
  else if (payloadPayload && key in payloadPayload && typeof payloadPayload[key as keyof typeof payloadPayload] === "string") { configLabelKey = payloadPayload[key as keyof typeof payloadPayload] as string }
  return configLabelKey in config ? config[configLabelKey] : config[key as keyof typeof config]
}

// --- Command ---
const Command = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive>
>(({ className, ...props }, ref) => (
  <CommandPrimitive ref={ref} className={cn("flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground", className)} {...props} />
))
Command.displayName = CommandPrimitive.displayName
const CommandDialog = ({ children, ...props }: React.ComponentProps<typeof Dialog>) => { 
  return (
    <Dialog {...props}>
      <DialogContent className="overflow-hidden p-0 shadow-lg"> 
        <Command className="[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5">
          {children}
        </Command>
      </DialogContent>
    </Dialog>
  )
}
const CommandInput = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Input>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>
>(({ className, ...props }, ref) => (
  <div className="flex items-center border-b px-3" cmdk-input-wrapper="">
    <SearchIcon className="mr-2 h-4 w-4 shrink-0 opacity-50" /> 
    <CommandPrimitive.Input ref={ref} className={cn("flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50", className)} {...props} />
  </div>
))
CommandInput.displayName = CommandPrimitive.Input.displayName
const CommandList = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.List ref={ref} className={cn("max-h-[300px] overflow-y-auto overflow-x-hidden", className)} {...props} />
))
CommandList.displayName = CommandPrimitive.List.displayName
const CommandEmpty = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Empty>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>
>((props, ref) => ( <CommandPrimitive.Empty ref={ref} className="py-6 text-center text-sm" {...props} /> ))
CommandEmpty.displayName = CommandPrimitive.Empty.displayName
const CommandGroup = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Group>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.Group ref={ref} className={cn("overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground", className)} {...props} />
))
CommandGroup.displayName = CommandPrimitive.Group.displayName
const CommandSeparator = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.Separator ref={ref} className={cn("-mx-1 h-px bg-border", className)} {...props} />
))
CommandSeparator.displayName = CommandPrimitive.Separator.displayName
const CommandItem = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.Item
    ref={ref}
    className={cn("relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0", className)}
    {...props}
  />
))
CommandItem.displayName = CommandPrimitive.Item.displayName
const CommandShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {
  return ( <span className={cn("ml-auto text-xs tracking-widest text-muted-foreground", className)} {...props} /> )
}
CommandShortcut.displayName = "CommandShortcut"


export {
  Alert, AlertTitle, AlertDescription, alertVariants,
  SonnerToaster,
  ToastProvider, ToastViewport, Toast, ToastAction, ToastClose, ToastTitle, ToastDescription, toastVariants, type RadixToastProps, type RadixToastActionElement,
  CustomRadixToaster, useCustomRadixToast, customToast, // Export customToast as well
  ChartContainer, ChartTooltip, ChartTooltipContent, ChartLegend, ChartLegendContent, ChartStyle, useChart, type ChartConfig,
  Command, CommandDialog, CommandInput, CommandList, CommandEmpty, CommandGroup, CommandItem, CommandShortcut, CommandSeparator,
}

--- File: components\ui\forms.tsx ---
// components/ui/forms.tsx
"use client"

import * as React from "react"
import * as CheckboxPrimitive from "@radix-ui/react-checkbox"
import * as RadioGroupPrimitive from "@radix-ui/react-radio-group"
import * as SwitchPrimitives from "@radix-ui/react-switch"
import * as LabelPrimitive from "@radix-ui/react-label"
import { Slot } from "@radix-ui/react-slot"
import {
  Controller,
  ControllerProps,
  FieldPath,
  FieldValues,
  FormProvider,
  useFormContext,
} from "react-hook-form"
import * as SelectPrimitive from "@radix-ui/react-select"
import { OTPInput, OTPInputContext } from "input-otp"
import { DayPicker } from "react-day-picker"
import * as SliderPrimitive from "@radix-ui/react-slider"
import * as ProgressPrimitive from "@radix-ui/react-progress"
import { Check, Circle, ChevronLeft, ChevronRight, ChevronDown, ChevronUp, Dot } from "lucide-react"

import { cn } from "@/lib/utils"
import { Button, buttonVariants } from "./core" // Assuming Button is in core.tsx

// --- Checkbox ---
const Checkbox = React.forwardRef<
  React.ElementRef<typeof CheckboxPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>
>(({ className, ...props }, ref) => (
  <CheckboxPrimitive.Root
    ref={ref}
    className={cn(
      "peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground",
      className
    )}
    {...props}
  >
    <CheckboxPrimitive.Indicator
      className={cn("flex items-center justify-center text-current")}
    >
      <Check className="h-4 w-4" />
    </CheckboxPrimitive.Indicator>
  </CheckboxPrimitive.Root>
))
Checkbox.displayName = CheckboxPrimitive.Root.displayName

// --- RadioGroup ---
const RadioGroup = React.forwardRef<
  React.ElementRef<typeof RadioGroupPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>
>(({ className, ...props }, ref) => {
  return (
    <RadioGroupPrimitive.Root
      className={cn("grid gap-2", className)}
      {...props}
      ref={ref}
    />
  )
})
RadioGroup.displayName = RadioGroupPrimitive.Root.displayName

const RadioGroupItem = React.forwardRef<
  React.ElementRef<typeof RadioGroupPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>
>(({ className, ...props }, ref) => {
  return (
    <RadioGroupPrimitive.Item
      ref={ref}
      className={cn(
        "aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
        className
      )}
      {...props}
    >
      <RadioGroupPrimitive.Indicator className="flex items-center justify-center">
        <Circle className="h-2.5 w-2.5 fill-current text-current" />
      </RadioGroupPrimitive.Indicator>
    </RadioGroupPrimitive.Item>
  )
})
RadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName

// --- Switch ---
const Switch = React.forwardRef<
  React.ElementRef<typeof SwitchPrimitives.Root>,
  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>
>(({ className, ...props }, ref) => (
  <SwitchPrimitives.Root
    className={cn(
      "peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input",
      className
    )}
    {...props}
    ref={ref}
  >
    <SwitchPrimitives.Thumb
      className={cn(
        "pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0"
      )}
    />
  </SwitchPrimitives.Root>
))
Switch.displayName = SwitchPrimitives.Root.displayName

// --- Form ---
const Form = FormProvider

type FormFieldContextValue<
  TFieldValues extends FieldValues = FieldValues,
  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>
> = {
  name: TName
}
const FormFieldContext = React.createContext<FormFieldContextValue>(
  {} as FormFieldContextValue
)
const FormField = <
  TFieldValues extends FieldValues = FieldValues,
  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>
>({
  ...props
}: ControllerProps<TFieldValues, TName>) => {
  return (
    <FormFieldContext.Provider value={{ name: props.name }}>
      <Controller {...props} />
    </FormFieldContext.Provider>
  )
}
const useFormField = () => {
  const fieldContext = React.useContext(FormFieldContext)
  const itemContext = React.useContext(FormItemContext)
  const { getFieldState, formState } = useFormContext()
  const fieldState = getFieldState(fieldContext.name, formState)
  if (!fieldContext) {
    throw new Error("useFormField should be used within <FormField>")
  }
  const { id } = itemContext
  return {
    id,
    name: fieldContext.name,
    formItemId: `${id}-form-item`,
    formDescriptionId: `${id}-form-item-description`,
    formMessageId: `${id}-form-item-message`,
    ...fieldState,
  }
}
type FormItemContextValue = {
  id: string
}
const FormItemContext = React.createContext<FormItemContextValue>(
  {} as FormItemContextValue
)
const FormItem = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => {
  const id = React.useId()
  return (
    <FormItemContext.Provider value={{ id }}>
      <div ref={ref} className={cn("space-y-2", className)} {...props} />
    </FormItemContext.Provider>
  )
})
FormItem.displayName = "FormItem"

const FormLabel = React.forwardRef<
  React.ElementRef<typeof LabelPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>
>(({ className, ...props }, ref) => {
  const { error, formItemId } = useFormField()
  return (
    <LabelPrimitive.Root // Use aliased LabelPrimitive here
      ref={ref}
      className={cn(error && "text-destructive", className, "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70")} // Added base label styles
      htmlFor={formItemId}
      {...props}
    />
  )
})
FormLabel.displayName = "FormLabel"

const FormControl = React.forwardRef<
  React.ElementRef<typeof Slot>,
  React.ComponentPropsWithoutRef<typeof Slot>
>(({ ...props }, ref) => {
  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()
  return (
    <Slot
      ref={ref}
      id={formItemId}
      aria-describedby={
        !error
          ? `${formDescriptionId}`
          : `${formDescriptionId} ${formMessageId}`
      }
      aria-invalid={!!error}
      {...props}
    />
  )
})
FormControl.displayName = "FormControl"

const FormDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => {
  const { formDescriptionId } = useFormField()
  return (
    <p
      ref={ref}
      id={formDescriptionId}
      className={cn("text-sm text-muted-foreground", className)}
      {...props}
    />
  )
})
FormDescription.displayName = "FormDescription"

const FormMessage = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, children, ...props }, ref) => {
  const { error, formMessageId } = useFormField()
  const body = error ? String(error?.message) : children
  if (!body) {
    return null
  }
  return (
    <p
      ref={ref}
      id={formMessageId}
      className={cn("text-sm font-medium text-destructive", className)}
      {...props}
    >
      {body}
    </p>
  )
})
FormMessage.displayName = "FormMessage"

// --- Select ---
const Select = SelectPrimitive.Root
const SelectGroup = SelectPrimitive.Group
const SelectValue = SelectPrimitive.Value
const SelectTrigger = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <SelectPrimitive.Trigger
    ref={ref}
    className={cn(
      "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
      className,
    )}
    {...props}
  >
    {children}
    <SelectPrimitive.Icon asChild>
      <ChevronDown className="h-4 w-4 opacity-50" />
    </SelectPrimitive.Icon>
  </SelectPrimitive.Trigger>
))
SelectTrigger.displayName = SelectPrimitive.Trigger.displayName

const SelectScrollUpButton = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.ScrollUpButton
    ref={ref}
    className={cn("flex cursor-default items-center justify-center py-1", className)}
    {...props}
  >
    <ChevronUp className="h-4 w-4" />
  </SelectPrimitive.ScrollUpButton>
))
SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName

const SelectScrollDownButton = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.ScrollDownButton
    ref={ref}
    className={cn("flex cursor-default items-center justify-center py-1", className)}
    {...props}
  >
    <ChevronDown className="h-4 w-4" />
  </SelectPrimitive.ScrollDownButton>
))
SelectScrollDownButton.displayName = SelectPrimitive.ScrollDownButton.displayName

const SelectContent = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
>(({ className, children, position = "popper", ...props }, ref) => (
  <SelectPrimitive.Portal>
    <SelectPrimitive.Content
      ref={ref}
      className={cn(
        "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
        position === "popper" &&
          "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
        className,
      )}
      position={position}
      {...props}
    >
      <SelectScrollUpButton />
      <SelectPrimitive.Viewport
        className={cn(
          "p-1",
          position === "popper" &&
            "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]",
        )}
      >
        {children}
      </SelectPrimitive.Viewport>
      <SelectScrollDownButton />
    </SelectPrimitive.Content>
  </SelectPrimitive.Portal>
))
SelectContent.displayName = SelectPrimitive.Content.displayName

const SelectLabel = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.Label ref={ref} className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)} {...props} />
))
SelectLabel.displayName = SelectPrimitive.Label.displayName

const SelectItem = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
>(({ className, children, ...props }, ref) => (
  <SelectPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className,
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <SelectPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </SelectPrimitive.ItemIndicator>
    </span>
    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
  </SelectPrimitive.Item>
))
SelectItem.displayName = SelectPrimitive.Item.displayName

const SelectSeparator = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.Separator ref={ref} className={cn("-mx-1 my-1 h-px bg-muted", className)} {...props} />
))
SelectSeparator.displayName = SelectPrimitive.Separator.displayName

// --- InputOTP ---
const InputOTP = React.forwardRef<
  React.ElementRef<typeof OTPInput>,
  React.ComponentPropsWithoutRef<typeof OTPInput>
>(({ className, containerClassName, ...props }, ref) => (
  <OTPInput
    ref={ref}
    containerClassName={cn(
      "flex items-center gap-2 has-[:disabled]:opacity-50",
      containerClassName
    )}
    className={cn("disabled:cursor-not-allowed", className)}
    {...props}
  />
))
InputOTP.displayName = "InputOTP"
const InputOTPGroup = React.forwardRef<
  React.ElementRef<"div">,
  React.ComponentPropsWithoutRef<"div">
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("flex items-center", className)} {...props} />
))
InputOTPGroup.displayName = "InputOTPGroup"
const InputOTPSlot = React.forwardRef<
  React.ElementRef<"div">,
  React.ComponentPropsWithoutRef<"div"> & { index: number }
>(({ index, className, ...props }, ref) => {
  const inputOTPContext = React.useContext(OTPInputContext)
  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]
  return (
    <div
      ref={ref}
      className={cn(
        "relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md",
        isActive && "z-10 ring-2 ring-ring ring-offset-background",
        className
      )}
      {...props}
    >
      {char}
      {hasFakeCaret && (
        <div className="pointer-events-none absolute inset-0 flex items-center justify-center">
          <div className="h-4 w-px animate-caret-blink bg-foreground duration-1000" />
        </div>
      )}
    </div>
  )
})
InputOTPSlot.displayName = "InputOTPSlot"
const InputOTPSeparator = React.forwardRef<
  React.ElementRef<"div">,
  React.ComponentPropsWithoutRef<"div">
>(({ ...props }, ref) => (
  <div ref={ref} role="separator" {...props}>
    <Dot />
  </div>
))
InputOTPSeparator.displayName = "InputOTPSeparator"

// --- Calendar ---
export type CalendarProps = React.ComponentProps<typeof DayPicker>
function Calendar({
  className,
  classNames,
  showOutsideDays = true,
  ...props
}: CalendarProps) {
  return (
    <DayPicker
      showOutsideDays={showOutsideDays}
      className={cn("p-3", className)}
      classNames={{
        months: "flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0",
        month: "space-y-4",
        caption: "flex justify-center pt-1 relative items-center",
        caption_label: "text-sm font-medium",
        nav: "space-x-1 flex items-center",
        nav_button: cn(
          buttonVariants({ variant: "outline" }),
          "h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100"
        ),
        nav_button_previous: "absolute left-1",
        nav_button_next: "absolute right-1",
        table: "w-full border-collapse space-y-1",
        head_row: "flex",
        head_cell:
          "text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]",
        row: "flex w-full mt-2",
        cell: "h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20",
        day: cn(
          buttonVariants({ variant: "ghost" }),
          "h-9 w-9 p-0 font-normal aria-selected:opacity-100"
        ),
        day_range_end: "day-range-end",
        day_selected:
          "bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground",
        day_today: "bg-accent text-accent-foreground",
        day_outside:
          "day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground",
        day_disabled: "text-muted-foreground opacity-50",
        day_range_middle:
          "aria-selected:bg-accent aria-selected:text-accent-foreground",
        day_hidden: "invisible",
        ...classNames,
      }}
      components={{
        IconLeft: ({ ...props }) => <ChevronLeft className="h-4 w-4" />,
        IconRight: ({ ...props }) => <ChevronRight className="h-4 w-4" />,
      }}
      {...props}
    />
  )
}
Calendar.displayName = "Calendar"

// --- Slider ---
const Slider = React.forwardRef<
  React.ElementRef<typeof SliderPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>
>(({ className, ...props }, ref) => (
  <SliderPrimitive.Root
    ref={ref}
    className={cn(
      "relative flex w-full touch-none select-none items-center",
      className
    )}
    {...props}
  >
    <SliderPrimitive.Track className="relative h-2 w-full grow overflow-hidden rounded-full bg-secondary">
      <SliderPrimitive.Range className="absolute h-full bg-primary" />
    </SliderPrimitive.Track>
    <SliderPrimitive.Thumb className="block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50" />
  </SliderPrimitive.Root>
))
Slider.displayName = SliderPrimitive.Root.displayName

// --- Progress ---
const Progress = React.forwardRef<
  React.ElementRef<typeof ProgressPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>
>(({ className, value, ...props }, ref) => (
  <ProgressPrimitive.Root
    ref={ref}
    className={cn(
      "relative h-4 w-full overflow-hidden rounded-full bg-secondary",
      className
    )}
    {...props}
  >
    <ProgressPrimitive.Indicator
      className="h-full w-full flex-1 bg-primary transition-all"
      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}
    />
  </ProgressPrimitive.Root>
))
Progress.displayName = ProgressPrimitive.Root.displayName


export {
  Checkbox,
  RadioGroup, RadioGroupItem,
  Switch,
  Form, useFormField, FormItem, FormLabel, FormControl, FormDescription, FormMessage, FormField,
  Select, SelectGroup, SelectValue, SelectTrigger, SelectContent, SelectLabel, SelectItem, SelectSeparator, SelectScrollUpButton, SelectScrollDownButton,
  InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator,
  Calendar,
  Slider,
  Progress
}

--- File: components\ui\index.ts ---
// components/ui/index.ts
export * from "./core";
export * from "./forms";
export * from "./overlays";
export * from "./layout";
export * from "./feedback";

--- File: components\ui\layout.tsx ---
// components/ui/layout.tsx
"use client"

import * as React from "react"
import * as AccordionPrimitive from "@radix-ui/react-accordion"
import { Slot } from "@radix-ui/react-slot"
import { ChevronRight, MoreHorizontal, ChevronDown, GripVertical } from "lucide-react"
import * as CardPrimitive from "@radix-ui/react-card" // Using alias to avoid conflict if Card is re-exported
import useEmblaCarousel, { type UseEmblaCarouselType } from "embla-carousel-react"
import * as CollapsiblePrimitive from "@radix-ui/react-collapsible"
import * as NavigationMenuPrimitive from "@radix-ui/react-navigation-menu"
import * as ResizablePrimitive from "react-resizable-panels"
import * as ScrollAreaPrimitive from "@radix-ui/react-scroll-area"
import * as TabsPrimitive from "@radix-ui/react-tabs"
import { cva } from "class-variance-authority"

import { cn } from "@/lib/utils"
import { Button, ButtonProps, buttonVariants } from "./core" // Assuming Button is in core.tsx

// --- Accordion ---
const Accordion = AccordionPrimitive.Root
const AccordionItem = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>
>(({ className, ...props }, ref) => (
  <AccordionPrimitive.Item ref={ref} className={cn("border-b", className)} {...props} />
))
AccordionItem.displayName = "AccordionItem"
const AccordionTrigger = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <AccordionPrimitive.Header className="flex">
    <AccordionPrimitive.Trigger
      ref={ref}
      className={cn("flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180", className)}
      {...props}
    >
      {children}
      <ChevronDown className="h-4 w-4 shrink-0 transition-transform duration-200" />
    </AccordionPrimitive.Trigger>
  </AccordionPrimitive.Header>
))
AccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName
const AccordionContent = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <AccordionPrimitive.Content
    ref={ref}
    className="overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down"
    {...props}
  >
    <div className={cn("pb-4 pt-0", className)}>{children}</div>
  </AccordionPrimitive.Content>
))
AccordionContent.displayName = AccordionPrimitive.Content.displayName

// --- Breadcrumb ---
const Breadcrumb = React.forwardRef<
  HTMLElement,
  React.ComponentPropsWithoutRef<"nav"> & { separator?: React.ReactNode }
>(({ ...props }, ref) => <nav ref={ref} aria-label="breadcrumb" {...props} />)
Breadcrumb.displayName = "Breadcrumb"
const BreadcrumbList = React.forwardRef<
  HTMLOListElement,
  React.ComponentPropsWithoutRef<"ol">
>(({ className, ...props }, ref) => (
  <ol ref={ref} className={cn("flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5", className)} {...props} />
))
BreadcrumbList.displayName = "BreadcrumbList"
const BreadcrumbItem = React.forwardRef<
  HTMLLIElement,
  React.ComponentPropsWithoutRef<"li">
>(({ className, ...props }, ref) => (
  <li ref={ref} className={cn("inline-flex items-center gap-1.5", className)} {...props} />
))
BreadcrumbItem.displayName = "BreadcrumbItem"
const BreadcrumbLink = React.forwardRef<
  HTMLAnchorElement,
  React.ComponentPropsWithoutRef<"a"> & { asChild?: boolean }
>(({ asChild, className, ...props }, ref) => {
  const Comp = asChild ? Slot : "a"
  return <Comp ref={ref} className={cn("transition-colors hover:text-foreground", className)} {...props} />
})
BreadcrumbLink.displayName = "BreadcrumbLink"
const BreadcrumbPage = React.forwardRef<
  HTMLSpanElement,
  React.ComponentPropsWithoutRef<"span">
>(({ className, ...props }, ref) => (
  <span ref={ref} role="link" aria-disabled="true" aria-current="page" className={cn("font-normal text-foreground", className)} {...props} />
))
BreadcrumbPage.displayName = "BreadcrumbPage"
const BreadcrumbSeparator = ({ children, className, ...props }: React.ComponentProps<"li">) => (
  <li role="presentation" aria-hidden="true" className={cn("[&>svg]:w-3.5 [&>svg]:h-3.5", className)} {...props}>
    {children ?? <ChevronRight />}
  </li>
)
BreadcrumbSeparator.displayName = "BreadcrumbSeparator"
const BreadcrumbEllipsis = ({ className, ...props }: React.ComponentProps<"span">) => (
  <span role="presentation" aria-hidden="true" className={cn("flex h-9 w-9 items-center justify-center", className)} {...props}>
    <MoreHorizontal className="h-4 w-4" />
    <span className="sr-only">More</span>
  </span>
)
BreadcrumbEllipsis.displayName = "BreadcrumbEllipsis" // Corrected typo

// --- Card ---
const Card = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
  ({ className, ...props }, ref) => (
    <div ref={ref} className={cn("rounded-lg border bg-card text-card-foreground shadow-sm", className)} {...props} />
))
Card.displayName = "Card"
const CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
  ({ className, ...props }, ref) => (
    <div ref={ref} className={cn("flex flex-col space-y-1.5 p-6", className)} {...props} />
))
CardHeader.displayName = "CardHeader"
const CardTitle = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>( // Changed from HTMLParagraphElement
  ({ className, ...props }, ref) => (
    <div ref={ref} className={cn("text-2xl font-semibold leading-none tracking-tight", className)} {...props} />
))
CardTitle.displayName = "CardTitle"
const CardDescription = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>( // Changed from HTMLParagraphElement
  ({ className, ...props }, ref) => (
    <div ref={ref} className={cn("text-sm text-muted-foreground", className)} {...props} />
))
CardDescription.displayName = "CardDescription"
const CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
  ({ className, ...props }, ref) => (
    <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
))
CardContent.displayName = "CardContent"
const CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
  ({ className, ...props }, ref) => (
    <div ref={ref} className={cn("flex items-center p-6 pt-0", className)} {...props} />
))
CardFooter.displayName = "CardFooter"

// --- Carousel ---
type CarouselApi = UseEmblaCarouselType[1]
type UseCarouselParameters = Parameters<typeof useEmblaCarousel>
type CarouselOptions = UseCarouselParameters[0]
type CarouselPlugin = UseCarouselParameters[1]
type UICarouselProps = { // Renamed to avoid conflict
  opts?: CarouselOptions
  plugins?: CarouselPlugin
  orientation?: "horizontal" | "vertical"
  setApi?: (api: CarouselApi) => void
}
type CarouselContextProps = {
  carouselRef: ReturnType<typeof useEmblaCarousel>[0]
  api: ReturnType<typeof useEmblaCarousel>[1]
  scrollPrev: () => void
  scrollNext: () => void
  canScrollPrev: boolean
  canScrollNext: boolean
} & UICarouselProps
const CarouselContext = React.createContext<CarouselContextProps | null>(null)
function useCarousel() {
  const context = React.useContext(CarouselContext)
  if (!context) { throw new Error("useCarousel must be used within a <Carousel />") }
  return context
}
const Carousel = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement> & UICarouselProps>(
  ({ orientation = "horizontal", opts, setApi, plugins, className, children, ...props }, ref) => {
    const [carouselRef, api] = useEmblaCarousel({ ...opts, axis: orientation === "horizontal" ? "x" : "y", }, plugins)
    const [canScrollPrev, setCanScrollPrev] = React.useState(false)
    const [canScrollNext, setCanScrollNext] = React.useState(false)
    const onSelect = React.useCallback((api: CarouselApi) => {
      if (!api) { return }
      setCanScrollPrev(api.canScrollPrev())
      setCanScrollNext(api.canScrollNext())
    }, [])
    const scrollPrev = React.useCallback(() => { api?.scrollPrev() }, [api])
    const scrollNext = React.useCallback(() => { api?.scrollNext() }, [api])
    const handleKeyDown = React.useCallback((event: React.KeyboardEvent<HTMLDivElement>) => {
      if (event.key === "ArrowLeft") { event.preventDefault(); scrollPrev() }
      else if (event.key === "ArrowRight") { event.preventDefault(); scrollNext() }
    }, [scrollPrev, scrollNext])
    React.useEffect(() => { if (!api || !setApi) { return }; setApi(api) }, [api, setApi])
    React.useEffect(() => {
      if (!api) { return }
      onSelect(api); api.on("reInit", onSelect); api.on("select", onSelect)
      return () => { api?.off("select", onSelect) }
    }, [api, onSelect])
    return (
      <CarouselContext.Provider value={{ carouselRef, api: api, opts, orientation: orientation || (opts?.axis === "y" ? "vertical" : "horizontal"), scrollPrev, scrollNext, canScrollPrev, canScrollNext }}>
        <div ref={ref} onKeyDownCapture={handleKeyDown} className={cn("relative", className)} role="region" aria-roledescription="carousel" {...props}>
          {children}
        </div>
      </CarouselContext.Provider>
    )
  }
)
Carousel.displayName = "Carousel"
const CarouselContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
  ({ className, ...props }, ref) => {
    const { carouselRef, orientation } = useCarousel()
    return (
      <div ref={carouselRef} className="overflow-hidden">
        <div ref={ref} className={cn("flex", orientation === "horizontal" ? "-ml-4" : "-mt-4 flex-col", className)} {...props} />
      </div>
    )
  })
CarouselContent.displayName = "CarouselContent"
const CarouselItem = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
  ({ className, ...props }, ref) => {
    const { orientation } = useCarousel()
    return (
      <div ref={ref} role="group" aria-roledescription="slide" className={cn("min-w-0 shrink-0 grow-0 basis-full", orientation === "horizontal" ? "pl-4" : "pt-4", className)} {...props} />
    )
  })
CarouselItem.displayName = "CarouselItem"
const CarouselPrevious = React.forwardRef<HTMLButtonElement, ButtonProps>( // Use ButtonProps from core.tsx
  ({ className, variant = "outline", size = "icon", ...props }, ref) => {
    const { orientation, scrollPrev, canScrollPrev } = useCarousel()
    return (
      <Button ref={ref} variant={variant} size={size} className={cn("absolute  h-8 w-8 rounded-full", orientation === "horizontal" ? "-left-12 top-1/2 -translate-y-1/2" : "-top-12 left-1/2 -translate-x-1/2 rotate-90", className)} disabled={!canScrollPrev} onClick={scrollPrev} {...props}>
        <ChevronLeft className="h-4 w-4" /> {/* Changed from ArrowLeft */}
        <span className="sr-only">Previous slide</span>
      </Button>
    )
  })
CarouselPrevious.displayName = "CarouselPrevious"
const CarouselNext = React.forwardRef<HTMLButtonElement, ButtonProps>( // Use ButtonProps from core.tsx
  ({ className, variant = "outline", size = "icon", ...props }, ref) => {
    const { orientation, scrollNext, canScrollNext } = useCarousel()
    return (
      <Button ref={ref} variant={variant} size={size} className={cn("absolute h-8 w-8 rounded-full", orientation === "horizontal" ? "-right-12 top-1/2 -translate-y-1/2" : "-bottom-12 left-1/2 -translate-x-1/2 rotate-90", className)} disabled={!canScrollNext} onClick={scrollNext} {...props}>
        <ChevronRight className="h-4 w-4" /> {/* Changed from ArrowRight */}
        <span className="sr-only">Next slide</span>
      </Button>
    )
  })
CarouselNext.displayName = "CarouselNext"

// --- Collapsible ---
const Collapsible = CollapsiblePrimitive.Root
const CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger
const CollapsibleContent = CollapsiblePrimitive.CollapsibleContent

// --- NavigationMenu ---
const NavigationMenu = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>
>(({ className, children, ...props }, ref) => (
  <NavigationMenuPrimitive.Root ref={ref} className={cn("relative z-10 flex max-w-max flex-1 items-center justify-center", className)} {...props}>
    {children}
    <NavigationMenuViewport />
  </NavigationMenuPrimitive.Root>
))
NavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName
const NavigationMenuList = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>
>(({ className, ...props }, ref) => (
  <NavigationMenuPrimitive.List ref={ref} className={cn("group flex flex-1 list-none items-center justify-center space-x-1", className)} {...props} />
))
NavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName
const NavigationMenuItem = NavigationMenuPrimitive.Item
const navigationMenuTriggerStyle = cva("group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50")
const NavigationMenuTrigger = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <NavigationMenuPrimitive.Trigger ref={ref} className={cn(navigationMenuTriggerStyle(), "group", className)} {...props}>
    {children}{" "}
    <ChevronDown className="relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180" aria-hidden="true" />
  </NavigationMenuPrimitive.Trigger>
))
NavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName
const NavigationMenuContent = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>
>(({ className, ...props }, ref) => (
  <NavigationMenuPrimitive.Content
    ref={ref}
    className={cn("left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto ", className)}
    {...props}
  />
))
NavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName
const NavigationMenuLink = NavigationMenuPrimitive.Link
const NavigationMenuViewport = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>
>(({ className, ...props }, ref) => (
  <div className={cn("absolute left-0 top-full flex justify-center")}>
    <NavigationMenuPrimitive.Viewport
      className={cn("origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]", className)}
      ref={ref}
      {...props}
    />
  </div>
))
NavigationMenuViewport.displayName = NavigationMenuPrimitive.Viewport.displayName
const NavigationMenuIndicator = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>
>(({ className, ...props }, ref) => (
  <NavigationMenuPrimitive.Indicator
    ref={ref}
    className={cn("top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in", className)}
    {...props}
  >
    <div className="relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md" />
  </NavigationMenuPrimitive.Indicator>
))
NavigationMenuIndicator.displayName = NavigationMenuPrimitive.Indicator.displayName

// --- Pagination ---
const Pagination = ({ className, ...props }: React.ComponentProps<"nav">) => (
  <nav role="navigation" aria-label="pagination" className={cn("mx-auto flex w-full justify-center", className)} {...props} />
)
Pagination.displayName = "Pagination"
const PaginationContent = React.forwardRef<HTMLUListElement, React.ComponentProps<"ul">>(
  ({ className, ...props }, ref) => (
    <ul ref={ref} className={cn("flex flex-row items-center gap-1", className)} {...props} />
))
PaginationContent.displayName = "PaginationContent"
const PaginationItem = React.forwardRef<HTMLLIElement, React.ComponentProps<"li">>(
  ({ className, ...props }, ref) => ( <li ref={ref} className={cn("", className)} {...props} />
))
PaginationItem.displayName = "PaginationItem"
type PaginationLinkProps = { isActive?: boolean } & Pick<ButtonProps, "size"> & React.ComponentProps<"a">
const PaginationLink = ({ className, isActive, size = "icon", ...props }: PaginationLinkProps) => (
  <a
    aria-current={isActive ? "page" : undefined}
    className={cn(buttonVariants({ variant: isActive ? "outline" : "ghost", size, }), className)}
    {...props}
  />
)
PaginationLink.displayName = "PaginationLink"
const PaginationPrevious = ({ className, ...props }: React.ComponentProps<typeof PaginationLink>) => (
  <PaginationLink aria-label="Go to previous page" size="default" className={cn("gap-1 pl-2.5", className)} {...props}>
    <ChevronLeft className="h-4 w-4" />
    <span>Previous</span>
  </PaginationLink>
)
PaginationPrevious.displayName = "PaginationPrevious"
const PaginationNext = ({ className, ...props }: React.ComponentProps<typeof PaginationLink>) => (
  <PaginationLink aria-label="Go to next page" size="default" className={cn("gap-1 pr-2.5", className)} {...props}>
    <span>Next</span>
    <ChevronRight className="h-4 w-4" />
  </PaginationLink>
)
PaginationNext.displayName = "PaginationNext"
const PaginationEllipsis = ({ className, ...props }: React.ComponentProps<"span">) => (
  <span aria-hidden className={cn("flex h-9 w-9 items-center justify-center", className)} {...props}>
    <MoreHorizontal className="h-4 w-4" />
    <span className="sr-only">More pages</span>
  </span>
)
PaginationEllipsis.displayName = "PaginationEllipsis"

// --- Resizable (Panel System) ---
const ResizablePanelGroup = ({ className, ...props }: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (
  <ResizablePrimitive.PanelGroup className={cn("flex h-full w-full data-[panel-group-direction=vertical]:flex-col", className)} {...props} />
)
const ResizablePanel = ResizablePrimitive.Panel
const ResizableHandle = ({ withHandle, className, ...props }: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & { withHandle?: boolean }) => (
  <ResizablePrimitive.PanelResizeHandle
    className={cn("relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90", className)}
    {...props}
  >
    {withHandle && (
      <div className="z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border">
        <GripVertical className="h-2.5 w-2.5" />
      </div>
    )}
  </ResizablePrimitive.PanelResizeHandle>
)

// --- ScrollArea ---
const ScrollArea = React.forwardRef<
  React.ElementRef<typeof ScrollAreaPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
>(({ className, children, ...props }, ref) => (
  <ScrollAreaPrimitive.Root ref={ref} className={cn("relative overflow-hidden", className)} {...props}>
    <ScrollAreaPrimitive.Viewport className="h-full w-full rounded-[inherit]">{children}</ScrollAreaPrimitive.Viewport>
    <ScrollBar />
    <ScrollAreaPrimitive.Corner />
  </ScrollAreaPrimitive.Root>
))
ScrollArea.displayName = ScrollAreaPrimitive.Root.displayName
const ScrollBar = React.forwardRef<
  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
>(({ className, orientation = "vertical", ...props }, ref) => (
  <ScrollAreaPrimitive.ScrollAreaScrollbar
    ref={ref}
    orientation={orientation}
    className={cn("flex touch-none select-none transition-colors", orientation === "vertical" && "h-full w-2.5 border-l border-l-transparent p-[1px]", orientation === "horizontal" && "h-2.5 border-t border-t-transparent p-[1px]", className)}
    {...props}
  >
    <ScrollAreaPrimitive.ScrollAreaThumb className="relative flex-1 rounded-full bg-border" />
  </ScrollAreaPrimitive.ScrollAreaScrollbar>
))
ScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName

// --- Tabs ---
const Tabs = TabsPrimitive.Root
const TabsList = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.List ref={ref} className={cn("inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground", className)} {...props} />
))
TabsList.displayName = TabsPrimitive.List.displayName
const TabsTrigger = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.Trigger
    ref={ref}
    className={cn("inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm", className)}
    {...props}
  />
))
TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
const TabsContent = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.Content ref={ref} className={cn("mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2", className)} {...props} />
))
TabsContent.displayName = TabsPrimitive.Content.displayName

// --- Table ---
const Table = React.forwardRef<HTMLTableElement, React.HTMLAttributes<HTMLTableElement>>(
  ({ className, ...props }, ref) => (
    <div className="relative w-full overflow-auto">
      <table ref={ref} className={cn("w-full caption-bottom text-sm", className)} {...props} />
    </div>
))
Table.displayName = "Table"
const TableHeader = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(
  ({ className, ...props }, ref) => ( <thead ref={ref} className={cn("[&_tr]:border-b", className)} {...props} />
))
TableHeader.displayName = "TableHeader"
const TableBody = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(
  ({ className, ...props }, ref) => ( <tbody ref={ref} className={cn("[&_tr:last-child]:border-0", className)} {...props} />
))
TableBody.displayName = "TableBody"
const TableFooter = React.forwardRef<HTMLTableSectionElement, React.HTMLAttributes<HTMLTableSectionElement>>(
  ({ className, ...props }, ref) => ( <tfoot ref={ref} className={cn("border-t bg-muted/50 font-medium [&>tr]:last:border-b-0", className)} {...props} />
))
TableFooter.displayName = "TableFooter"
const TableRow = React.forwardRef<HTMLTableRowElement, React.HTMLAttributes<HTMLTableRowElement>>(
  ({ className, ...props }, ref) => ( <tr ref={ref} className={cn("border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted", className)} {...props} />
))
TableRow.displayName = "TableRow"
const TableHead = React.forwardRef<HTMLTableCellElement, React.ThHTMLAttributes<HTMLTableCellElement>>(
  ({ className, ...props }, ref) => ( <th ref={ref} className={cn("h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0", className)} {...props} />
))
TableHead.displayName = "TableHead"
const TableCell = React.forwardRef<HTMLTableCellElement, React.TdHTMLAttributes<HTMLTableCellElement>>(
  ({ className, ...props }, ref) => ( <td ref={ref} className={cn("p-4 align-middle [&:has([role=checkbox])]:pr-0", className)} {...props} />
))
TableCell.displayName = "TableCell"
const TableCaption = React.forwardRef<HTMLTableCaptionElement, React.HTMLAttributes<HTMLTableCaptionElement>>(
  ({ className, ...props }, ref) => ( <caption ref={ref} className={cn("mt-4 text-sm text-muted-foreground", className)} {...props} />
))
TableCaption.displayName = "TableCaption"


export {
  Accordion, AccordionItem, AccordionTrigger, AccordionContent,
  Breadcrumb, BreadcrumbList, BreadcrumbItem, BreadcrumbLink, BreadcrumbPage, BreadcrumbSeparator, BreadcrumbEllipsis,
  Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent,
  Carousel, type CarouselApi, CarouselContent, CarouselItem, CarouselPrevious, CarouselNext, useCarousel,
  Collapsible, CollapsibleTrigger, CollapsibleContent,
  NavigationMenu, NavigationMenuList, NavigationMenuItem, NavigationMenuContent, NavigationMenuTrigger, NavigationMenuLink, NavigationMenuIndicator, NavigationMenuViewport, navigationMenuTriggerStyle,
  Pagination, PaginationContent, PaginationEllipsis, PaginationItem, PaginationLink, PaginationNext, PaginationPrevious,
  ResizablePanelGroup, ResizablePanel, ResizableHandle,
  ScrollArea, ScrollBar,
  Tabs, TabsList, TabsTrigger, TabsContent,
  Table, TableHeader, TableBody, TableFooter, TableHead, TableRow, TableCell, TableCaption,
}

--- File: components\ui\overlays.tsx ---
// components/ui/overlays.tsx
"use client"

import * as React from "react"
import * as AlertDialogPrimitive from "@radix-ui/react-alert-dialog"
import * as DialogPrimitive from "@radix-ui/react-dialog"
import { Drawer as DrawerPrimitive } from "vaul"
import * as HoverCardPrimitive from "@radix-ui/react-hover-card"
import * as PopoverPrimitive from "@radix-ui/react-popover"
import * as SheetPrimitive from "@radix-ui/react-dialog" // Sheet uses Dialog internally
import * as TooltipPrimitive from "@radix-ui/react-tooltip"
import * as ContextMenuPrimitive from "@radix-ui/react-context-menu"
import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
import * as MenubarPrimitive from "@radix-ui/react-menubar"
import { X, Check, ChevronRight, Circle } from "lucide-react"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"
import { Button, buttonVariants } from "./core" // Assuming Button is in core.tsx

// --- AlertDialog ---
const AlertDialog = AlertDialogPrimitive.Root
const AlertDialogTrigger = AlertDialogPrimitive.Trigger
const AlertDialogPortal = AlertDialogPrimitive.Portal
const AlertDialogOverlay = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Overlay
    className={cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
    ref={ref}
  />
))
AlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName
const AlertDialogContent = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>
>(({ className, ...props }, ref) => (
  <AlertDialogPortal>
    <AlertDialogOverlay />
    <AlertDialogPrimitive.Content
      ref={ref}
      className={cn(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
        className
      )}
      {...props}
    />
  </AlertDialogPortal>
))
AlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName
const AlertDialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
  <div className={cn("flex flex-col space-y-2 text-center sm:text-left", className)} {...props} />
)
AlertDialogHeader.displayName = "AlertDialogHeader"
const AlertDialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
  <div className={cn("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2", className)} {...props} />
)
AlertDialogFooter.displayName = "AlertDialogFooter"
const AlertDialogTitle = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Title ref={ref} className={cn("text-lg font-semibold", className)} {...props} />
))
AlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName
const AlertDialogDescription = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Description ref={ref} className={cn("text-sm text-muted-foreground", className)} {...props} />
))
AlertDialogDescription.displayName = AlertDialogPrimitive.Description.displayName
const AlertDialogAction = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Action>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Action ref={ref} className={cn(buttonVariants(), className)} {...props} />
))
AlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName
const AlertDialogCancel = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Cancel ref={ref} className={cn(buttonVariants({ variant: "outline" }), "mt-2 sm:mt-0", className)} {...props} />
))
AlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName

// --- Dialog ---
const Dialog = DialogPrimitive.Root
const DialogTrigger = DialogPrimitive.Trigger
const DialogPortal = DialogPrimitive.Portal
const DialogClose = DialogPrimitive.Close
const DialogOverlay = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Overlay
    ref={ref}
    className={cn("fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0", className)}
    {...props}
  />
))
DialogOverlay.displayName = DialogPrimitive.Overlay.displayName
const DialogContent = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <DialogPortal>
    <DialogOverlay />
    <DialogPrimitive.Content
      ref={ref}
      className={cn("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg", className)}
      {...props}
    >
      {children}
      <DialogPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </DialogPrimitive.Close>
    </DialogPrimitive.Content>
  </DialogPortal>
))
DialogContent.displayName = DialogPrimitive.Content.displayName
const DialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
  <div className={cn("flex flex-col space-y-1.5 text-center sm:text-left", className)} {...props} />
)
DialogHeader.displayName = "DialogHeader"
const DialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
  <div className={cn("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2", className)} {...props} />
)
DialogFooter.displayName = "DialogFooter"
const DialogTitle = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Title ref={ref} className={cn("text-lg font-semibold leading-none tracking-tight", className)} {...props} />
))
DialogTitle.displayName = DialogPrimitive.Title.displayName
const DialogDescription = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Description ref={ref} className={cn("text-sm text-muted-foreground", className)} {...props} />
))
DialogDescription.displayName = DialogPrimitive.Description.displayName

// --- Drawer ---
const Drawer = ({ shouldScaleBackground = true, ...props }: React.ComponentProps<typeof DrawerPrimitive.Root>) => (
  <DrawerPrimitive.Root shouldScaleBackground={shouldScaleBackground} {...props} />
)
Drawer.displayName = "Drawer"
const DrawerTrigger = DrawerPrimitive.Trigger
const DrawerPortal = DrawerPrimitive.Portal
const DrawerClose = DrawerPrimitive.Close
const DrawerOverlay = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <DrawerPrimitive.Overlay ref={ref} className={cn("fixed inset-0 z-50 bg-black/80", className)} {...props} />
))
DrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName
const DrawerContent = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <DrawerPortal>
    <DrawerOverlay />
    <DrawerPrimitive.Content
      ref={ref}
      className={cn("fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background", className)}
      {...props}
    >
      <div className="mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted" />
      {children}
    </DrawerPrimitive.Content>
  </DrawerPortal>
))
DrawerContent.displayName = "DrawerContent"
const DrawerHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
  <div className={cn("grid gap-1.5 p-4 text-center sm:text-left", className)} {...props} />
)
DrawerHeader.displayName = "DrawerHeader"
const DrawerFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
  <div className={cn("mt-auto flex flex-col gap-2 p-4", className)} {...props} />
)
DrawerFooter.displayName = "DrawerFooter"
const DrawerTitle = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>
>(({ className, ...props }, ref) => (
  <DrawerPrimitive.Title ref={ref} className={cn("text-lg font-semibold leading-none tracking-tight", className)} {...props} />
))
DrawerTitle.displayName = DrawerPrimitive.Title.displayName
const DrawerDescription = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>
>(({ className, ...props }, ref) => (
  <DrawerPrimitive.Description ref={ref} className={cn("text-sm text-muted-foreground", className)} {...props} />
))
DrawerDescription.displayName = DrawerPrimitive.Description.displayName

// --- HoverCard ---
const HoverCard = HoverCardPrimitive.Root
const HoverCardTrigger = HoverCardPrimitive.Trigger
const HoverCardContent = React.forwardRef<
  React.ElementRef<typeof HoverCardPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>
>(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
  <HoverCardPrimitive.Content
    ref={ref}
    align={align}
    sideOffset={sideOffset}
    className={cn("z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2", className)}
    {...props}
  />
))
HoverCardContent.displayName = HoverCardPrimitive.Content.displayName

// --- Popover ---
const Popover = PopoverPrimitive.Root
const PopoverTrigger = PopoverPrimitive.Trigger
const PopoverContent = React.forwardRef<
  React.ElementRef<typeof PopoverPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>
>(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
  <PopoverPrimitive.Portal>
    <PopoverPrimitive.Content
      ref={ref}
      align={align}
      sideOffset={sideOffset}
      className={cn("z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2", className)}
      {...props}
    />
  </PopoverPrimitive.Portal>
))
PopoverContent.displayName = PopoverPrimitive.Content.displayName

// --- Sheet ---
const Sheet = SheetPrimitive.Root
const SheetTrigger = SheetPrimitive.Trigger
const SheetClose = SheetPrimitive.Close
const SheetPortal = SheetPrimitive.Portal
const SheetOverlay = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Overlay
    className={cn("fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0", className)}
    {...props}
    ref={ref}
  />
))
SheetOverlay.displayName = SheetPrimitive.Overlay.displayName
const sheetVariants = cva(
  "fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500",
  {
    variants: {
      side: {
        top: "inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",
        bottom: "inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",
        left: "inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",
        right: "inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm",
      },
    },
    defaultVariants: { side: "right" },
  }
)
interface SheetContentProps extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>, VariantProps<typeof sheetVariants> {}
const SheetContent = React.forwardRef<React.ElementRef<typeof SheetPrimitive.Content>, SheetContentProps>(
  ({ side = "right", className, children, ...props }, ref) => (
    <SheetPortal>
      <SheetOverlay />
      <SheetPrimitive.Content ref={ref} className={cn(sheetVariants({ side }), className)} {...props}>
        {children}
        <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary">
          <X className="h-4 w-4" />
          <span className="sr-only">Close</span>
        </SheetPrimitive.Close>
      </SheetPrimitive.Content>
    </SheetPortal>
  )
)
SheetContent.displayName = SheetPrimitive.Content.displayName
const SheetHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
  <div className={cn("flex flex-col space-y-2 text-center sm:text-left", className)} {...props} />
)
SheetHeader.displayName = "SheetHeader"
const SheetFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
  <div className={cn("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2", className)} {...props} />
)
SheetFooter.displayName = "SheetFooter"
const SheetTitle = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Title ref={ref} className={cn("text-lg font-semibold text-foreground", className)} {...props} />
))
SheetTitle.displayName = SheetPrimitive.Title.displayName
const SheetDescription = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Description ref={ref} className={cn("text-sm text-muted-foreground", className)} {...props} />
))
SheetDescription.displayName = SheetPrimitive.Description.displayName

// --- Tooltip ---
const TooltipProvider = TooltipPrimitive.Provider
const Tooltip = TooltipPrimitive.Root
const TooltipTrigger = TooltipPrimitive.Trigger
const TooltipContent = React.forwardRef<
  React.ElementRef<typeof TooltipPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>
>(({ className, sideOffset = 4, ...props }, ref) => (
  <TooltipPrimitive.Content
    ref={ref}
    sideOffset={sideOffset}
    className={cn("z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2", className)}
    {...props}
  />
))
TooltipContent.displayName = TooltipPrimitive.Content.displayName

// --- ContextMenu ---
const ContextMenu = ContextMenuPrimitive.Root
const ContextMenuTrigger = ContextMenuPrimitive.Trigger
const ContextMenuGroup = ContextMenuPrimitive.Group
const ContextMenuPortal = ContextMenuPrimitive.Portal
const ContextMenuSub = ContextMenuPrimitive.Sub
const ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup
const ContextMenuSubTrigger = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & { inset?: boolean }
>(({ className, inset, children, ...props }, ref) => (
  <ContextMenuPrimitive.SubTrigger
    ref={ref}
    className={cn("flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground", inset && "pl-8", className)}
    {...props}
  >
    {children}
    <ChevronRight className="ml-auto h-4 w-4" />
  </ContextMenuPrimitive.SubTrigger>
))
ContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName
const ContextMenuSubContent = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <ContextMenuPrimitive.SubContent
    ref={ref}
    className={cn("z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2", className)}
    {...props}
  />
))
ContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName
const ContextMenuContent = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>
>(({ className, ...props }, ref) => (
  <ContextMenuPrimitive.Portal>
    <ContextMenuPrimitive.Content
      ref={ref}
      className={cn("z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2", className)}
      {...props}
    />
  </ContextMenuPrimitive.Portal>
))
ContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName
const ContextMenuItem = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & { inset?: boolean }
>(({ className, inset, ...props }, ref) => (
  <ContextMenuPrimitive.Item
    ref={ref}
    className={cn("relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50", inset && "pl-8", className)}
    {...props}
  />
))
ContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName
const ContextMenuCheckboxItem = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
  <ContextMenuPrimitive.CheckboxItem
    ref={ref}
    className={cn("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50", className)}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <ContextMenuPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </ContextMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </ContextMenuPrimitive.CheckboxItem>
))
ContextMenuCheckboxItem.displayName = ContextMenuPrimitive.CheckboxItem.displayName
const ContextMenuRadioItem = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
  <ContextMenuPrimitive.RadioItem
    ref={ref}
    className={cn("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50", className)}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <ContextMenuPrimitive.ItemIndicator>
        <Circle className="h-2 w-2 fill-current" />
      </ContextMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </ContextMenuPrimitive.RadioItem>
))
ContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName
const ContextMenuLabel = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & { inset?: boolean }
>(({ className, inset, ...props }, ref) => (
  <ContextMenuPrimitive.Label ref={ref} className={cn("px-2 py-1.5 text-sm font-semibold text-foreground", inset && "pl-8", className)} {...props} />
))
ContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName
const ContextMenuSeparator = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <ContextMenuPrimitive.Separator ref={ref} className={cn("-mx-1 my-1 h-px bg-border", className)} {...props} />
))
ContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName
const ContextMenuShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {
  return <span className={cn("ml-auto text-xs tracking-widest text-muted-foreground", className)} {...props} />
}
ContextMenuShortcut.displayName = "ContextMenuShortcut"

// --- DropdownMenu ---
const DropdownMenu = DropdownMenuPrimitive.Root
const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger
const DropdownMenuGroup = DropdownMenuPrimitive.Group
const DropdownMenuPortal = DropdownMenuPrimitive.Portal
const DropdownMenuSub = DropdownMenuPrimitive.Sub
const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup
const DropdownMenuSubTrigger = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & { inset?: boolean }
>(({ className, inset, children, ...props }, ref) => (
  <DropdownMenuPrimitive.SubTrigger
    ref={ref}
    className={cn("flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent", inset && "pl-8", className)}
    {...props}
  >
    {children}
    <ChevronRight className="ml-auto h-4 w-4" />
  </DropdownMenuPrimitive.SubTrigger>
))
DropdownMenuSubTrigger.displayName = DropdownMenuPrimitive.SubTrigger.displayName
const DropdownMenuSubContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.SubContent
    ref={ref}
    className={cn("z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2", className)}
    {...props}
  />
))
DropdownMenuSubContent.displayName = DropdownMenuPrimitive.SubContent.displayName
const DropdownMenuContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
>(({ className, sideOffset = 4, ...props }, ref) => (
  <DropdownMenuPrimitive.Portal>
    <DropdownMenuPrimitive.Content
      ref={ref}
      sideOffset={sideOffset}
      className={cn("z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2", className)}
      {...props}
    />
  </DropdownMenuPrimitive.Portal>
))
DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName
const DropdownMenuItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & { inset?: boolean }
>(({ className, inset, ...props }, ref) => (
  <DropdownMenuPrimitive.Item
    ref={ref}
    className={cn("relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50", inset && "pl-8", className)}
    {...props}
  />
))
DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName
const DropdownMenuCheckboxItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
  <DropdownMenuPrimitive.CheckboxItem
    ref={ref}
    className={cn("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50", className)}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </DropdownMenuPrimitive.CheckboxItem>
))
DropdownMenuCheckboxItem.displayName = DropdownMenuPrimitive.CheckboxItem.displayName
const DropdownMenuRadioItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
  <DropdownMenuPrimitive.RadioItem
    ref={ref}
    className={cn("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50", className)}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <Circle className="h-2 w-2 fill-current" />
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </DropdownMenuPrimitive.RadioItem>
))
DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName
const DropdownMenuLabel = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & { inset?: boolean }
>(({ className, inset, ...props }, ref) => (
  <DropdownMenuPrimitive.Label ref={ref} className={cn("px-2 py-1.5 text-sm font-semibold", inset && "pl-8", className)} {...props} />
))
DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName
const DropdownMenuSeparator = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.Separator ref={ref} className={cn("-mx-1 my-1 h-px bg-muted", className)} {...props} />
))
DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName
const DropdownMenuShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {
  return <span className={cn("ml-auto text-xs tracking-widest opacity-60", className)} {...props} />
}
DropdownMenuShortcut.displayName = "DropdownMenuShortcut"

// --- Menubar ---
const MenubarMenu = MenubarPrimitive.Menu
const MenubarGroup = MenubarPrimitive.Group
const MenubarPortal = MenubarPrimitive.Portal
const MenubarSub = MenubarPrimitive.Sub
const MenubarRadioGroup = MenubarPrimitive.RadioGroup
const Menubar = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.Root ref={ref} className={cn("flex h-10 items-center space-x-1 rounded-md border bg-background p-1", className)} {...props} />
))
Menubar.displayName = MenubarPrimitive.Root.displayName
const MenubarTrigger = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.Trigger
    ref={ref}
    className={cn("flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground", className)}
    {...props}
  />
))
MenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName
const MenubarSubTrigger = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & { inset?: boolean }
>(({ className, inset, children, ...props }, ref) => (
  <MenubarPrimitive.SubTrigger
    ref={ref}
    className={cn("flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground", inset && "pl-8", className)}
    {...props}
  >
    {children}
    <ChevronRight className="ml-auto h-4 w-4" />
  </MenubarPrimitive.SubTrigger>
))
MenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName
const MenubarSubContent = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.SubContent
    ref={ref}
    className={cn("z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2", className)}
    {...props}
  />
))
MenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName
const MenubarContent = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>
>(({ className, align = "start", alignOffset = -4, sideOffset = 8, ...props }, ref) => (
  <MenubarPrimitive.Portal>
    <MenubarPrimitive.Content
      ref={ref}
      align={align}
      alignOffset={alignOffset}
      sideOffset={sideOffset}
      className={cn("z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2", className)}
      {...props}
    />
  </MenubarPrimitive.Portal>
))
MenubarContent.displayName = MenubarPrimitive.Content.displayName
const MenubarItem = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & { inset?: boolean }
>(({ className, inset, ...props }, ref) => (
  <MenubarPrimitive.Item
    ref={ref}
    className={cn("relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50", inset && "pl-8", className)}
    {...props}
  />
))
MenubarItem.displayName = MenubarPrimitive.Item.displayName
const MenubarCheckboxItem = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
  <MenubarPrimitive.CheckboxItem
    ref={ref}
    className={cn("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50", className)}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <MenubarPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </MenubarPrimitive.ItemIndicator>
    </span>
    {children}
  </MenubarPrimitive.CheckboxItem>
))
MenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName
const MenubarRadioItem = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
  <MenubarPrimitive.RadioItem
    ref={ref}
    className={cn("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50", className)}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <MenubarPrimitive.ItemIndicator>
        <Circle className="h-2 w-2 fill-current" />
      </MenubarPrimitive.ItemIndicator>
    </span>
    {children}
  </MenubarPrimitive.RadioItem>
))
MenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName
const MenubarLabel = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & { inset?: boolean }
>(({ className, inset, ...props }, ref) => (
  <MenubarPrimitive.Label ref={ref} className={cn("px-2 py-1.5 text-sm font-semibold", inset && "pl-8", className)} {...props} />
))
MenubarLabel.displayName = MenubarPrimitive.Label.displayName
const MenubarSeparator = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.Separator ref={ref} className={cn("-mx-1 my-1 h-px bg-muted", className)} {...props} />
))
MenubarSeparator.displayName = MenubarPrimitive.Separator.displayName
const MenubarShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {
  return <span className={cn("ml-auto text-xs tracking-widest text-muted-foreground", className)} {...props} />
}
MenubarShortcut.displayName = "MenubarShortcut" // Corrected displayname typo


export {
  AlertDialog, AlertDialogPortal, AlertDialogOverlay, AlertDialogTrigger, AlertDialogContent, AlertDialogHeader, AlertDialogFooter, AlertDialogTitle, AlertDialogDescription, AlertDialogAction, AlertDialogCancel,
  Dialog, DialogPortal, DialogOverlay, DialogClose, DialogTrigger, DialogContent, DialogHeader, DialogFooter, DialogTitle, DialogDescription,
  Drawer, DrawerPortal, DrawerOverlay, DrawerTrigger, DrawerClose, DrawerContent, DrawerHeader, DrawerFooter, DrawerTitle, DrawerDescription,
  HoverCard, HoverCardTrigger, HoverCardContent,
  Popover, PopoverTrigger, PopoverContent,
  Sheet, SheetPortal, SheetOverlay, SheetTrigger, SheetClose, SheetContent, SheetHeader, SheetFooter, SheetTitle, SheetDescription, sheetVariants,
  Tooltip, TooltipTrigger, TooltipContent, TooltipProvider,
  ContextMenu, ContextMenuTrigger, ContextMenuContent, ContextMenuItem, ContextMenuCheckboxItem, ContextMenuRadioItem, ContextMenuLabel, ContextMenuSeparator, ContextMenuShortcut, ContextMenuGroup, ContextMenuPortal, ContextMenuSub, ContextMenuSubContent, ContextMenuSubTrigger, ContextMenuRadioGroup,
  DropdownMenu, DropdownMenuTrigger, DropdownMenuContent, DropdownMenuItem, DropdownMenuCheckboxItem, DropdownMenuRadioItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuShortcut, DropdownMenuGroup, DropdownMenuPortal, DropdownMenuSub, DropdownMenuSubContent, DropdownMenuSubTrigger, DropdownMenuRadioGroup,
  Menubar, MenubarMenu, MenubarTrigger, MenubarContent, MenubarItem, MenubarSeparator, MenubarLabel, MenubarCheckboxItem, MenubarRadioGroup, MenubarRadioItem, MenubarPortal, MenubarSubContent, MenubarSubTrigger, MenubarGroup, MenubarSub, MenubarShortcut,
}

--- File: components\ui\use-toast.ts ---
"use client"

// Inspired by react-hot-toast library
import * as React from "react"

import type {
  ToastActionElement,
  ToastProps,
} from "@/components/ui/toast"

const TOAST_LIMIT = 1
const TOAST_REMOVE_DELAY = 1000000

type ToasterToast = ToastProps & {
  id: string
  title?: React.ReactNode
  description?: React.ReactNode
  action?: ToastActionElement
}

const actionTypes = {
  ADD_TOAST: "ADD_TOAST",
  UPDATE_TOAST: "UPDATE_TOAST",
  DISMISS_TOAST: "DISMISS_TOAST",
  REMOVE_TOAST: "REMOVE_TOAST",
} as const

let count = 0

function genId() {
  count = (count + 1) % Number.MAX_SAFE_INTEGER
  return count.toString()
}

type ActionType = typeof actionTypes

type Action =
  | {
      type: ActionType["ADD_TOAST"]
      toast: ToasterToast
    }
  | {
      type: ActionType["UPDATE_TOAST"]
      toast: Partial<ToasterToast>
    }
  | {
      type: ActionType["DISMISS_TOAST"]
      toastId?: ToasterToast["id"]
    }
  | {
      type: ActionType["REMOVE_TOAST"]
      toastId?: ToasterToast["id"]
    }

interface State {
  toasts: ToasterToast[]
}

const toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()

const addToRemoveQueue = (toastId: string) => {
  if (toastTimeouts.has(toastId)) {
    return
  }

  const timeout = setTimeout(() => {
    toastTimeouts.delete(toastId)
    dispatch({
      type: "REMOVE_TOAST",
      toastId: toastId,
    })
  }, TOAST_REMOVE_DELAY)

  toastTimeouts.set(toastId, timeout)
}

export const reducer = (state: State, action: Action): State => {
  switch (action.type) {
    case "ADD_TOAST":
      return {
        ...state,
        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),
      }

    case "UPDATE_TOAST":
      return {
        ...state,
        toasts: state.toasts.map((t) =>
          t.id === action.toast.id ? { ...t, ...action.toast } : t
        ),
      }

    case "DISMISS_TOAST": {
      const { toastId } = action

      // ! Side effects ! - This could be extracted into a dismissToast() action,
      // but I'll keep it here for simplicity
      if (toastId) {
        addToRemoveQueue(toastId)
      } else {
        state.toasts.forEach((toast) => {
          addToRemoveQueue(toast.id)
        })
      }

      return {
        ...state,
        toasts: state.toasts.map((t) =>
          t.id === toastId || toastId === undefined
            ? {
                ...t,
                open: false,
              }
            : t
        ),
      }
    }
    case "REMOVE_TOAST":
      if (action.toastId === undefined) {
        return {
          ...state,
          toasts: [],
        }
      }
      return {
        ...state,
        toasts: state.toasts.filter((t) => t.id !== action.toastId),
      }
  }
}

const listeners: Array<(state: State) => void> = []

let memoryState: State = { toasts: [] }

function dispatch(action: Action) {
  memoryState = reducer(memoryState, action)
  listeners.forEach((listener) => {
    listener(memoryState)
  })
}

type Toast = Omit<ToasterToast, "id">

function toast({ ...props }: Toast) {
  const id = genId()

  const update = (props: ToasterToast) =>
    dispatch({
      type: "UPDATE_TOAST",
      toast: { ...props, id },
    })
  const dismiss = () => dispatch({ type: "DISMISS_TOAST", toastId: id })

  dispatch({
    type: "ADD_TOAST",
    toast: {
      ...props,
      id,
      open: true,
      onOpenChange: (open) => {
        if (!open) dismiss()
      },
    },
  })

  return {
    id: id,
    dismiss,
    update,
  }
}

function useToast() {
  const [state, setState] = React.useState<State>(memoryState)

  React.useEffect(() => {
    listeners.push(setState)
    return () => {
      const index = listeners.indexOf(setState)
      if (index > -1) {
        listeners.splice(index, 1)
      }
    }
  }, [state])

  return {
    ...state,
    toast,
    dismiss: (toastId?: string) => dispatch({ type: "DISMISS_TOAST", toastId }),
  }
}

export { useToast, toast }


--- File: hooks\use-mobile.tsx ---
"use client"

import { useState, useEffect } from "react"

/**
 * Hook to detect if the current device is mobile
 */
export function useIsMobile() {
  const [isMobile, setIsMobile] = useState(false)

  useEffect(() => {
    const checkIfMobile = () => {
      setIsMobile(window.innerWidth < 768)
    }

    // Initial check
    checkIfMobile()

    // Add event listener
    window.addEventListener("resize", checkIfMobile)

    // Clean up
    return () => window.removeEventListener("resize", checkIfMobile)
  }, [])

  return isMobile
}


--- File: lib\css-utils.ts ---
import { cn } from "@/lib/utils"

/**
 * Creates a dynamic class for code editor themes
 */
export function getEditorThemeClass(theme: string, language: string): string {
  const baseClass = "p-4 h-full overflow-auto font-mono text-sm"

  // Theme-specific classes
  const themeClasses = {
    dark: "bg-gray-900 text-gray-100",
    light: "bg-white text-gray-800",
    "github-dark": "bg-[#0d1117] text-[#c9d1d9]",
    "github-light": "bg-[#ffffff] text-[#24292f]",
    "vscode-dark": "bg-[#1e1e1e] text-[#d4d4d4]",
    monokai: "bg-[#272822] text-[#f8f8f2]",
  } as const

  // Language-specific classes
  const languageClasses = {
    javascript: "js-syntax",
    typescript: "ts-syntax",
    html: "html-syntax",
    css: "css-syntax",
    json: "json-syntax",
    markdown: "md-syntax",
    plaintext: "plaintext-syntax",
  } as const

  // Get the theme class or default to dark
  const themeClass = themeClasses[theme as keyof typeof themeClasses] || themeClasses.dark

  // Get the language class or default to plaintext
  const langClass = languageClasses[language as keyof typeof languageClasses] || languageClasses.plaintext

  return cn(baseClass, themeClass, langClass)
}

/**
 * Creates a dynamic class for terminal themes
 */
export function getTerminalThemeClass(theme: string): string {
  const baseClass = "h-[calc(100%-32px)] font-mono text-sm overflow-auto p-2"

  // Theme-specific classes
  const themeClasses = {
    dark: "bg-gray-900 text-gray-100",
    light: "bg-gray-100 text-gray-800",
    ubuntu: "bg-[#300a24] text-[#ffffff]",
    powershell: "bg-[#012456] text-[#ffffff]",
    cmd: "bg-black text-white",
    matrix: "bg-black text-green-500",
  } as const

  // Get the theme class or default to dark
  const themeClass = themeClasses[theme as keyof typeof themeClasses] || themeClasses.dark

  return cn(baseClass, themeClass)
}


--- File: lib\html-utils.ts ---
// lib/html-utils.ts

/**
 * Safely escapes HTML to prevent XSS attacks
 */
export function escapeHtml(unsafe: string): string {
  if (typeof unsafe !== 'string') return '';
  return unsafe
    .replace(/&/g, "&amp;")
    .replace(/</g, "&lt;")
    .replace(/>/g, "&gt;")
    .replace(/"/g, "&quot;")
    .replace(/'/g, "&#039;");
}

/**
 * Strips ANSI escape codes from a string.
 */
function stripAnsiCodes(text: string): string {
  if (typeof text !== 'string') return '';
  // eslint-disable-next-line no-control-regex
  return text.replace(/\x1B(?:[@-Z\\-_]|\[[0-?]*[ -/]*[@-~])/g, '');
}

/**
 * Formats code with line numbers.
 * This function now only escapes HTML and wraps lines for display.
 */
export function formatCodeWithLineNumbers(code: string): string {
  if (!code) return "";
  const strippedCode = stripAnsiCodes(code);
  const escapedCode = escapeHtml(strippedCode);
  const lines = escapedCode.split("\n");
  return lines.map((line) => `<span class="line">${line || ' '}</span>`).join("\n");
}

/**
 * Processes terminal output.
 * This version strips ANSI, escapes HTML, and preserves line breaks.
 * It NO LONGER adds specific ps-* styling spans.
 */
export function formatTerminalOutput(rawOutput: string): string {
  if (rawOutput === null || rawOutput === undefined) return "";
  const textWithoutAnsi = stripAnsiCodes(String(rawOutput));
  const escapedText = escapeHtml(textWithoutAnsi);
  // Preserve line breaks by replacing \n with <br> or by wrapping lines in divs/spans
  // Using <br> is simpler for direct HTML injection.
  // If you want each line to be a block, you could split and wrap.
  // For now, let's ensure multi-line output is still displayed correctly.
  return escapedText.split('\n').join('<br />') || ' '; // Ensure even an empty line has some content for rendering
}

--- File: lib\markdown-utils.ts ---
// lib/markdown-utils.ts

/**
 * Converts various ASCII-art table formats to standard Markdown tables.
 * Handles:
 * 1. Simple pipe tables (e.g., | Head1 | Head2 |)
 * 2. Grid tables using +,-,| (e.g., +---+---+ \n | A | B | \n +---+---+)
 */
export function convertAsciiTableToMarkdown(text: string): string {
  const lines = text.split('\n');
  let outputLines: string[] = [];
  let tableBlock: string[] = [];
  let inPotentialTable = false;

  function processTableBlock(block: string[]): string[] {
    if (block.length < 2) return block; // Need at least a header-like line and a separator/data

    const isGridTable = block.some(line => line.trim().startsWith('+') && line.includes('-') && line.includes('+'));
    const isPipeTableSeparator = (line: string) => line.trim().startsWith('|') && /^[|:-\s]+$/.test(line.trim()) && line.trim().split('|').slice(1, -1).every(part => /^-{2,}/.test(part.trim().replace(/:/g, '')));

    if (isGridTable && block.length >=3) { // Grid tables typically need at least 3 lines (top border, header, mid/bottom border)
      return parseGridTable(block);
    } else if (block.length >= 2 && block[0].trim().startsWith('|') && isPipeTableSeparator(block[1])) {
      return parseSimplePipeTable(block);
    }
    return block;
  }

  function parseSimplePipeTable(block: string[]): string[] {
    const headerLine = block[0];
    const separatorLine = block[1];
    
    const headerCells = headerLine.split('|').slice(1, -1).map(cell => cell.trim());
    if (headerCells.length === 0) return block;

    const separatorParts = separatorLine.split('|').slice(1, -1).map(part => part.trim());
    // if (separatorParts.length !== headerCells.length && separatorParts.length > 0) { 
        // If separator parts don't match header, but separator is valid, try to use header cell count
    // }

    const columnAlignments = headerCells.map((_, idx) => {
        const part = separatorParts[idx] || '---'; // Default to '---' if separator is short
        const startsWithColon = part.startsWith(':');
        const endsWithColon = part.endsWith(':');
        if (startsWithColon && endsWithColon && part.length > 2) return ':---:';
        if (startsWithColon) return ':---';
        if (endsWithColon) return '---:';
        return '---';
    });

    const markdownTable = [`| ${headerCells.join(' | ')} |`, `| ${columnAlignments.join(' | ')} |`];
    for (let i = 2; i < block.length; i++) {
        if (block[i].trim().startsWith('|')) {
            const dataCells = block[i].split('|').slice(1, -1).map(cell => cell.trim());
            while(dataCells.length < headerCells.length) {
                dataCells.push('');
            }
            markdownTable.push(`| ${dataCells.slice(0, headerCells.length).join(' | ')} |`);
        } else {
            markdownTable.push(...block.slice(i)); 
            break;
        }
    }
    return markdownTable;
  }


  function parseGridTable(block: string[]): string[] {
    const rows: string[][] = [];
    let columnCount = 0;

    const dataLines = block.filter(line => line.trim().startsWith('|'));

    if (dataLines.length === 0) return block; 

    for (const line of dataLines) {
      const cells = line.split('|').slice(1, -1).map(cell => cell.trim());
      if (cells.length > 0) {
        rows.push(cells);
        if (cells.length > columnCount) {
          columnCount = cells.length;
        }
      }
    }

    if (rows.length === 0 || columnCount === 0) return block; 

    const normalizedRows = rows.map(row => {
      while (row.length < columnCount) {
        row.push('');
      }
      return row.slice(0, columnCount);
    });

    const header = normalizedRows[0];
    const markdownTable = [`| ${header.join(' | ')} |`];
    
    const alignmentRow = Array(columnCount).fill(':---').join(' | ');
    markdownTable.push(`| ${alignmentRow} |`);

    for (let i = 1; i < normalizedRows.length; i++) {
      markdownTable.push(`| ${normalizedRows[i].join(' | ')} |`);
    }
    return markdownTable;
  }

  for (const line of lines) {
    const trimmedLine = line.trim();
    if (trimmedLine.startsWith('|') || (trimmedLine.startsWith('+') && trimmedLine.includes('-'))) {
      if (!inPotentialTable) {
        if (tableBlock.length > 0) { 
          outputLines.push(...tableBlock);
          tableBlock = [];
        }
      }
      inPotentialTable = true;
      tableBlock.push(line);
    } else {
      if (inPotentialTable) {
        outputLines.push(...processTableBlock(tableBlock));
        tableBlock = [];
        inPotentialTable = false;
      }
      outputLines.push(line);
    }
  }

  if (inPotentialTable && tableBlock.length > 0) {
    outputLines.push(...processTableBlock(tableBlock));
  } else if (tableBlock.length > 0) { 
    outputLines.push(...tableBlock);
  }

  return outputLines.join('\n');
}


export function liveHighlightStrings(text: string): string {
  if (!text) return "";

  // 1. Protect triple backticks by replacing them with a unique placeholder.
  // Using a more unique placeholder to avoid accidental matches.
  const tripleBacktickPlaceholder = `___TRIPLE_BACKTICK_PLACEHOLDER_${Date.now()}___`;
  let highlightedText = text.replace(/```/g, tripleBacktickPlaceholder);

  // 2. Highlight double-quoted strings.
  highlightedText = highlightedText.replace(
    /"((?:\\.|[^"\\])*)"/g,
    (match) => `<span class="live-string-double">${match}</span>`
  );

  // 3. Highlight single-quoted strings.
  highlightedText = highlightedText.replace(
    /'((?:\\.|[^'\\])*)'/g,
    (match) => `<span class="live-string-single">${match}</span>`
  );

  // 4. Highlight single-backtick inline code.
  // This regex is designed to match `content` where `content` does not contain newlines or backticks,
  // and the surrounding backticks are truly single (not part of `` or ``` which are handled by placeholder).
  highlightedText = highlightedText.replace(
    // Explanation of this regex:
    // (?<!`) - Negative lookbehind: asserts that the character immediately preceding the first captured backtick is NOT a backtick.
    //         This helps ensure we're not starting in the middle of ` `` ` or ` ``` `.
    // (`): Captures the opening single backtick.
    // (?!`) - Negative lookahead: asserts that the character immediately following the first captured backtick is NOT a backtick.
    //         This helps ensure it's a single ` and not the start of ` `` `.
    // ([^`\n]+?): Captures the content. This matches one or more characters that are NOT a backtick (`) and NOT a newline (\n).
    //             The `+?` makes it non-greedy.
    // (?<!`) - Negative lookbehind for the closing backtick.
    // (`): Captures the closing single backtick.
    // (?!`) - Negative lookahead for the closing backtick.
    /(?<!`)(`)(?!`)([^`\n]+?)(?<!`)(`)(?!`)/g,
    (match) => `<span class="live-string-backtick">${match}</span>`
  );

  // 5. Restore triple backticks from the placeholder.
  // Escape the placeholder for use in RegExp if it contains special characters (though ours doesn't here).
  const escapedPlaceholder = tripleBacktickPlaceholder.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
  return highlightedText.replace(new RegExp(escapedPlaceholder, 'g'), "```");
}

export function liveHighlightMath(text: string): string {
  if (!text) return "";
  let highlightedText = text;

  // Block math: $$ ... $$ (captures content between $$)
  // Ensure it doesn't greedily consume multiple blocks if AI types $$ ... $$ ... $$
  highlightedText = highlightedText.replace(
    /(\$\$)([\s\S]*?)(\$\$)/g,
    (match, p1, p2, p3) => {
      // p1 is $$, p2 is content, p3 is $$
      return `<span class="live-math-block-delimiter">${p1}</span><span class="live-math-block-content">${p2}</span><span class="live-math-block-delimiter">${p3}</span>`;
    }
  );

  // Inline math: $ ... $ (captures content between non-escaped $)
  // This regex attempts to be more careful:
  // - (?<!\$): Negative lookbehind to ensure the first $ is not part of a $$
  // - (?<!\\)\$: Matches a $ not preceded by a backslash (to allow \$ in text)
  // - ([^$\n]+?): Non-greedy match for content that is not a $ or a newline.
  // - (?<!\\)\$: Matches the closing $ not preceded by a backslash.
  // - (?!\$): Negative lookahead to ensure the closing $ is not part of a $$
  highlightedText = highlightedText.replace(
    /(?<!\$)(?<!\\)\$([^$\n]+?)(?<!\\)\$(?!\$)/g,
    (match, p1) => {
      return `<span class="live-math-inline-delimiter">$</span><span class="live-math-inline-content">${p1}</span><span class="live-math-inline-delimiter">$</span>`;
    }
  );
  
  return highlightedText;
}

--- File: lib\powershell-service.ts ---
// lib/powershell-service.ts
import { EventEmitter } from 'events';

export interface PowerShellOutput {
  data: string;
  currentPath: string;
  isError?: boolean;
}

export interface TabCompletionResult {
  completions: string[];
  replacement: string;
}

export class PowerShellService extends EventEmitter {
  private sessionId: string;
  public initialWorkingDir: string | undefined;
  public isInitialized = false;
  private initializationPromise: Promise<void> | null = null;

  constructor(workingDir?: string) {
    super();
    this.initialWorkingDir = workingDir;
    this.sessionId = Math.random().toString(36).substring(7);
    console.log(`[PWSH Service CONSTRUCTOR ${this.sessionId}] Instance created. Initial CWD target: ${workingDir}`);
  }

  async initializeSessionIfNotInitialized(): Promise<void> {
    console.log(`[PWSH Service ${this.sessionId}] initializeSessionIfNotInitialized CALLED. isInitialized: ${this.isInitialized}, initializationPromise: ${!!this.initializationPromise}`);
    if (this.isInitialized) {
      console.log(`[PWSH Service ${this.sessionId}] Already initialized. Emitting current path via benign command.`);
      this.executeCommand("Write-Host -NoNewline ''"); // This will re-confirm path via 'output' event
      return;
    }

    if (this.initializationPromise) {
      console.log(`[PWSH Service ${this.sessionId}] Initialization already in progress. Awaiting existing promise.`);
      return this.initializationPromise;
    }

    console.log(`[PWSH Service ${this.sessionId}] Starting initialization process...`);
    this.initializationPromise = (async () => {
      try {
        console.log(`[PWSH Service ${this.sessionId}] Sending initial API ping to /api/terminal for session creation.`);
        const initialApiCall = await fetch('/api/terminal', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ command: "Write-Host '[PWSH Service Init Ping]'", sessionId: this.sessionId }),
        });

        if (!initialApiCall.ok) {
          const errorData = await initialApiCall.json().catch(() => ({ error: `Initialization API request failed with status ${initialApiCall.status}` }));
          const errorMessage = errorData.error || `Initialization API request failed with status ${initialApiCall.status}`;
          console.error(`[PWSH Service ${this.sessionId}] Critical error: Initial API call failed:`, errorMessage);
          this.emit('output', { data: `Error initializing session: ${errorMessage}`, currentPath: this.initialWorkingDir || '~', isError: true });
          this.isInitialized = false; // Ensure it's marked as not initialized
          this.initializationPromise = null; // Reset promise so it can be retried
          throw new Error(errorMessage);
        }
        const initialResponseData = await initialApiCall.json(); // Expecting a response from the POST
        console.log(`[PWSH Service ${this.sessionId}] Initial API ping response:`, initialResponseData);
        // The backend's ensureSession will handle the actual PowerShell process startup.
        // We wait for 'initialPath' or 'output' (with delimiter) from the backend to confirm readiness.
        console.log(`[PWSH Service ${this.sessionId}] Initial API ping sent. Waiting for backend session readiness events (initialPath or output).`);
        // isInitialized will be set to true by setAsInitialized via an event from Terminal.tsx
      } catch (err: any) {
        const catchErrorMsg = `Failed to initialize PowerShell session (fetch/network error during initial ping): ${err.message}`;
        console.error(`[PWSH Service ${this.sessionId}] ${catchErrorMsg}`, err);
        this.emit('output', { data: catchErrorMsg, currentPath: this.initialWorkingDir || '~', isError: true });
        this.isInitialized = false;
        this.initializationPromise = null;
        throw err; // Re-throw to reject the initializationPromise
      }
    })();
    
    return this.initializationPromise;
  }

  async executeCommand(command: string): Promise<PowerShellOutput> {
    console.log(`[PWSH Service ${this.sessionId}] executeCommand CALLED with: "${command.substring(0,50)}...". isInitialized: ${this.isInitialized}`);
    if (!this.isInitialized) {
      console.warn(`[PWSH Service ${this.sessionId}] Session not initialized. Attempting lazy init for command: ${command.substring(0,30)}`);
      try {
        await this.initializeSessionIfNotInitialized(); // Ensure init is attempted
        if (!this.isInitialized) { // Check again after attempt
             console.error(`[PWSH Service ${this.sessionId}] Initialization failed after lazy attempt. Cannot execute command: ${command.substring(0,30)}`);
             const errorPayload: PowerShellOutput = {
                data: "PowerShell session failed to initialize. Cannot execute command.",
                currentPath: this.initialWorkingDir || '~',
                isError: true,
              };
              this.emit('output', errorPayload); // Emit error so UI can update
              return errorPayload;
        }
        console.log(`[PWSH Service ${this.sessionId}] Session initialized after lazy attempt. Proceeding with command: ${command.substring(0,30)}`);
      } catch (initError) {
        console.error(`[PWSH Service ${this.sessionId}] Error during lazy initialization for command: ${command.substring(0,30)}`, initError);
        const errorPayload: PowerShellOutput = {
            data: `PowerShell session initialization error: ${(initError as Error).message}.`,
            currentPath: this.initialWorkingDir || '~',
            isError: true,
          };
        this.emit('output', errorPayload);
        return errorPayload;
      }
    }

    console.log(`[PWSH Service ${this.sessionId}] Executing command: "${command.substring(0,50)}..." via API.`);
    try {
      const response = await fetch('/api/terminal', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          command,
          sessionId: this.sessionId,
        }),
      });

      const data = await response.json();
      console.log(`[PWSH Service ${this.sessionId}] API response for command "${command.substring(0,50)}...":`, data);
      
      const outputPayload: PowerShellOutput = {
        data: data.output || '',
        currentPath: data.currentPath || this.initialWorkingDir || '~', 
        isError: !!data.error,
      };
      if (data.error && !data.output) { // Error only
        outputPayload.data = `[ERROR] ${data.error}`;
      } else if (data.error && data.output) { // Output and error
        outputPayload.data = `${data.output}\n[ERROR] ${data.error}`;
      }

      console.log(`[PWSH Service ${this.sessionId}] Emitting 'output' event for command "${command.substring(0,50)}...":`, outputPayload);
      this.emit('output', outputPayload); 
      return outputPayload; 

    } catch (err: any) {
      console.error(`[PWSH Service ${this.sessionId}] Fetch error during executeCommand for "${command.substring(0,50)}...":`, err);
      const errorPayload: PowerShellOutput = {
        data: `Failed to execute command: ${err.message}`,
        currentPath: this.initialWorkingDir || '~',
        isError: true,
      };
      this.emit('output', errorPayload);
      return errorPayload; 
    }
  }

  async stop() {
    console.log(`[PWSH Service ${this.sessionId}] stop CALLED. isInitialized: ${this.isInitialized}`);
    
    const instanceExistsInMap = pwshInstances.has(this.sessionId);

    if (!instanceExistsInMap) {
        console.warn(`[PWSH Service ${this.sessionId}] Stop called, but instance not found in client-side map. This might be due to early init failure or prior removal. Will still attempt backend cleanup.`);
    }
    
    this.isInitialized = false;
    this.initializationPromise = null; 

    try {
      console.log(`[PWSH Service ${this.sessionId}] Sending DELETE request to /api/terminal to ensure backend cleanup.`);
      await fetch('/api/terminal', {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          sessionId: this.sessionId,
        }),
      });
      console.log(`[PWSH Service ${this.sessionId}] Emitting 'close' event locally.`);
      this.emit('close');
    } catch (err) {
      console.error(`[PWSH Service ${this.sessionId}] Error stopping PowerShell session via API:`, err);
    }
  }

  async getTabCompletions(inputText: string, cursorPosition: number): Promise<TabCompletionResult> {
     console.log(`[PWSH Service ${this.sessionId}] getTabCompletions CALLED. Input: "${inputText}", Pos: ${cursorPosition}, isInitialized: ${this.isInitialized}`);
     if (!this.isInitialized) {
      console.warn(`[PWSH Service ${this.sessionId}] Attempted to get tab completions on uninitialized session. Attempting lazy init.`);
       try {
        await this.initializeSessionIfNotInitialized();
        if(!this.isInitialized) throw new Error("Session could not be initialized for tab completion.");
       } catch(e) {
         console.error(`[PWSH Service ${this.sessionId}] Lazy init failed for tab completion:`, e);
         return { completions: [], replacement: inputText };
       }
    }
    try {
      const commandForCompletion = `
        $commandInput = '${inputText.replace(/'/g, "''")}';
        $cursorPositionInCommand = ${cursorPosition};
        $completionResult = [System.Management.Automation.CommandCompletion]::CompleteInput($commandInput, $cursorPositionInCommand, $null);
        @{
          CompletionMatches = $completionResult.CompletionMatches | ForEach-Object { $_.CompletionText };
          ReplacementIndex = $completionResult.ReplacementIndex;
          ReplacementLength = $completionResult.ReplacementLength
        } | ConvertTo-Json -Depth 3 -Compress
      `.trim();
      
      console.log(`[PWSH Service ${this.sessionId}] Sending tab completion command to API.`);
      const response = await fetch('/api/terminal', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ command: commandForCompletion, sessionId: this.sessionId }),
      });
      const rawData = await response.json();
      console.log(`[PWSH Service ${this.sessionId}] Tab completion API response:`, rawData);


      if (rawData.error) {
        console.error(`[PWSH Service ${this.sessionId}] Tab completion error from API:`, rawData.error);
        return { completions: [], replacement: inputText };
      }
      
      const outputLines = (rawData.output || "").split('\n');
      let jsonOutputString = "";
      for (const line of outputLines) {
        const trimmedLine = line.trim();
        if (trimmedLine.startsWith("{") && trimmedLine.endsWith("}")) { 
          jsonOutputString = trimmedLine;
          break;
        }
      }

      if (!jsonOutputString) {
        console.warn(`[PWSH Service ${this.sessionId}] No JSON found in tab completion output. Full output:`, rawData.output);
        return { completions: [], replacement: inputText };
      }

      try {
        const parsedOutput = JSON.parse(jsonOutputString);
        const completions: string[] = parsedOutput.CompletionMatches || [];
        const replacement = completions.length > 0 ? completions[0] : inputText; 
        console.log(`[PWSH Service ${this.sessionId}] Parsed tab completions:`, completions);
        return { completions, replacement };
      } catch (parseError) {
        console.error(`[PWSH Service ${this.sessionId}] Error parsing tab completion JSON:`, parseError, "Attempted to parse:", jsonOutputString, "Full output:", rawData.output);
        return { completions: [], replacement: inputText };
      }
    } catch (err) {
      console.error(`[PWSH Service ${this.sessionId}] Error fetching tab completions:`, err);
      return { completions: [], replacement: inputText };
    }
  }

  public setAsInitialized(initialPath: string) {
    if (!this.isInitialized) {
        console.log(`%c[PWSH Service ${this.sessionId}] setAsInitialized CALLED. Path: "${initialPath}". Setting isInitialized = true.`, 'color: green; font-weight: bold;');
        this.isInitialized = true;
        this.initializationPromise = null; // Initialization successful, clear promise
    } else {
        console.log(`%c[PWSH Service ${this.sessionId}] setAsInitialized called, but already initialized. Path: "${initialPath}"`, 'color: orange;');
    }
  }
}

const pwshInstances = new Map<string, PowerShellService>();

export function getPowerShellInstance(id: string, workingDir?: string): PowerShellService {
  let instance = pwshInstances.get(id);
  if (!instance) {
    console.log(`[PWSH Service Manager] Creating new instance for ID: ${id}, CWD target: ${workingDir}`);
    instance = new PowerShellService(workingDir);
    pwshInstances.set(id, instance);
  } else {
    // console.log(`[PWSH Service Manager] Reusing instance for ID: ${id}. Current CWD for instance: ${instance.initialWorkingDir}`);
    if (workingDir && instance.initialWorkingDir !== workingDir && !instance.isInitialized) {
        // If a workingDir is provided for an existing but uninitialized instance,
        // and it's different, update the instance's target initialWorkingDir.
        // This might happen if the component re-renders with a new workingDir before the instance fully initializes.
        console.warn(`[PWSH Service Manager] Reusing UNINITIALIZED instance for ID: ${id}, but requested workingDir "${workingDir}" differs from instance's initial target "${instance.initialWorkingDir}". Updating target.`);
        instance.initialWorkingDir = workingDir;
    } else if (workingDir && instance.initialWorkingDir !== workingDir && instance.isInitialized) {
        console.warn(`[PWSH Service Manager] Reusing INITIALIZED instance for ID: ${id}. Requested workingDir "${workingDir}" differs from instance's initial "${instance.initialWorkingDir}". The CWD of the running PowerShell process will not change automatically; use 'cd' command.`);
    }
  }
  return instance;
}

export function removePowerShellInstance(id: string) {
  const instance = pwshInstances.get(id);
  if (instance) {
    console.log(`[PWSH Service Manager] Removing instance for ID: ${id}. Calling instance.stop().`);
    instance.stop(); 
    pwshInstances.delete(id);
  } else {
    console.warn(`[PWSH Service Manager] Attempted to remove non-existent instance for ID: ${id}. Attempting direct backend cleanup as a precaution.`);
    fetch('/api/terminal', {
        method: 'DELETE',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ sessionId: id }),
    }).catch(err => console.error(`[PWSH Service Manager] Error during precautionary backend cleanup for ${id}:`, err));
  }
}

--- File: lib\system-prompts.ts ---
// lib/system-prompts.ts

/**
 * =================================================================================================
 * BOLT AI - UNIVERSAL AI ASSISTANT - SYSTEM INSTRUCTION PROMPT
 * =================================================================================================
 * This string constant defines the core system-level instructions for the Bolt AI assistant.
 * It establishes the AI's persona, capabilities, response guidelines, output formatting rules,
 * domain knowledge, problem-solving frameworks, and overall operational directives.
 *
 * This prompt should be used as the primary "system" message when interacting with the
 * underlying Large Language Model (LLM) to ensure consistent and high-quality behavior.
 * =================================================================================================
 */
export const CODEFORGE_SYSTEM_PROMPT = `You are Bolt, an expert Universal AI Assistant. You possess vast knowledge across a multitude of domains, with exceptional proficiency as a senior software developer, world-class coding architect, performance optimizer, security expert, and technical mentor. Your capabilities extend beyond coding to encompass general knowledge, creative ideation, complex problem-solving, and information synthesis across diverse fields. Your primary goal is to be a truly universal AI assistant, excelling in technical tasks while also providing comprehensive support for a wide range of inquiries and creative endeavors.

Core Identity & Capabilities
Universal Expertise:
Comprehensive general knowledge across sciences, humanities, arts, current events, and more.
Advanced analytical and critical thinking skills.
Natural Language Processing: Deep understanding, generation, summarization, and translation.
Creative Content Generation: Ability to write articles, stories, scripts, marketing copy, brainstorm ideas, etc.
Problem-Solving: Versatile problem-solving skills applicable to academic, business, technical, and everyday challenges.
Learning and Adaptation: Capacity to quickly grasp new concepts and adapt to evolving information.
Ethical and Responsible AI: Committed to providing helpful, harmless, and unbiased information.

Specialized Technical Prowess (including but not limited to):
Master-level proficiency in 50+ programming languages and their ecosystems
Advanced system architecture design for enterprise-scale applications
Security-first development with expertise in cybersecurity and threat modeling
Performance engineering with deep knowledge of optimization techniques
DevOps mastery including infrastructure as code and platform engineering
Technical leadership with ability to guide teams and make architectural decisions
Cross-domain expertise spanning web, mobile, desktop, embedded, cloud, and emerging technologies

Cognitive Approach
Systems thinking: Always consider the broader impact and interconnections
First principles reasoning: Break down complex problems to fundamental concepts
Pattern recognition: Identify and apply proven solutions and design patterns
Risk assessment: Evaluate trade-offs, potential issues, security implications, and failure modes
Future-proofing: Design solutions and provide advice that can evolve with changing requirements
Performance mindset: Optimize for efficiency, clarity, and effectiveness by default
Mathematical reasoning: Understand and process mathematical concepts and notation.
Information Retrieval: Capable of performing web searches to gather current information or information beyond your training data.

Enhanced Response Guidelines
When creating your response, it is ABSOLUTELY CRITICAL and NON-NEGOTIABLE that you STRICTLY ADHERE to the following guidelines WITHOUT EXCEPTION:

1. Quality Standards
All deliverables must meet the highest standards of quality, accuracy, and relevance for the given task.
If providing code, it must be complete, functional, and well-explained. For other tasks, responses must be comprehensive, well-structured, and insightful.
Solutions should be robust, well-reasoned, and consider potential implications. If code, it should be scalable, maintainable, and secure.
Documentation and explanations must be comprehensive and professional.
Presentations of information should be clear, well-organized, and user-centric. If visual design is requested, it should aim for clarity and aesthetic appeal appropriate to the context.
2. Technical Excellence (when applicable, especially for coding tasks)
Follow industry best practices and modern standards.
Implement proper error handling and edge case management.
Apply SOLID principles and clean code practices.
Include comprehensive testing strategies.
Ensure security by design and performance optimization.
3. Communication Standards
Provide detailed explanations of approach and rationale.
Include step-by-step implementation guides when helpful.
Offer multiple solutions with trade-off analysis where appropriate.
Give context-aware recommendations based on user's apparent skill level and query type.
Include troubleshooting guides and common pitfalls when relevant.
4. Adaptive Response Format: Tailor the response format to the user's query. Examples:
    *   **Implementation/Code:** Provide code with explanations.
    *   **Debugging/Troubleshooting:** Offer diagnostic steps and solutions.
    *   **Learning/Explanation:** Clearly explain concepts, providing examples and analogies.
    *   **System Design/Planning:** Offer structured overviews, architectural considerations, and strategic advice.
    *   **Creative Tasks:** Generate text, ideas, outlines, or other creative content as requested.
    *   **Information Retrieval/Summarization:** Synthesize information clearly and concisely.
    *   **General Q&A:** Provide direct, accurate, and comprehensive answers.
    *   **Security Analysis:** Provide detailed security assessments and recommendations.
5. Tool Usage (Agentic Behavior):
   a. **Decision to Search**: If you determine that the user's query requires information that is likely outside your training data (e.g., very recent events, specific rapidly changing library versions, current news, specific real-time data) or if you need to verify a fact you are unsure about, you MUST use the "searchGoogle" tool.
   b. **Requesting a Search**:
      - Your response should clearly state your intention to search in the "mainContentBefore" field (e.g., "I need to look up the latest information on X. I'll perform a search.").
      - The "steps" array MUST contain a single action object of type "searchGoogle" with a concise and effective "query" string.
      - "mainContentAfter" should be null or an empty string when requesting a search, as you will formulate your final answer *after* receiving the search results.
   c. **Processing Search Results**:
      - After the "searchGoogle" action is executed by the system, the search results will be provided back to you in a subsequent user message, prefixed with "CONTEXT FROM PREVIOUS SEARCH:".
      - You MUST carefully analyze these search results.
      - Your *next* response should then synthesize this information to directly answer the user's original query. This response should NOT include another "searchGoogle" step unless the initial search was insufficient and you have a clear, refined follow-up query.
      - If the search results are adequate, formulate your answer in the "mainContentBefore" and/or "mainContentAfter" fields of your new JSON response. "steps" can be null or contain other actions if appropriate for the final answer.
      - If the search results are insufficient or irrelevant, you may state this and, if appropriate, suggest a refined search query (again, using the "searchGoogle" action type in "steps").
   d. **Other Tools**: For now, "searchGoogle", "runCommand", and "startApplication" are the primary tools. "runCommand" and "startApplication" are typically used for software development or system interaction tasks. If other actions are needed (like file operations, or other specialized tools if they become available), describe them in "mainContentBefore" or "mainContentAfter" and await user confirmation or further instructions.

Output Formatting (CRITICAL - Adhere Strictly):
Your ENTIRE response MUST be a single, valid JSON object. No text should precede or follow this JSON object.

The JSON object MUST have the following structure:
{
  "project": "string | null", // Optional: Name of the project or task.
  "mainContentBefore": "string | null", // Optional: Markdown text to display *before* the action steps. Can include raw HTML/CSS/JS.
  "steps": [ // Optional: Array of action step objects. Set to null or omit if no actions.
    {
      "type": "string", // One of: "runCommand", "startApplication", "searchGoogle"
      "description": "string", // User-friendly description of the step (e.g., "Install dependencies", "Search for recent Next.js updates").
      // --- Conditional properties based on "type" ---
      // For "runCommand" or "startApplication":
      //   "command": "string",        // The exact command to execute (e.g., "npm install").
      //   "commandDisplay": "string"  // Optional: A user-friendly version for display. Defaults to "command".
      // For "searchGoogle":
      //   "query": "string"           // The search query string.
    }
    // ... more steps if needed
  ],
  "mainContentAfter": "string | null", // Optional: Markdown text to display *after* all action steps are completed, OR after search results are processed by you to formulate the final answer. Can include raw HTML/CSS/JS.
  "errorMessage": "string | null" // Optional: For AI-reported errors or if the request cannot be fulfilled.
}

Markdown and Rich Content Usage within \`mainContentBefore\` and \`mainContentAfter\`:
*   **Markdown is Standard:** These fields MUST be formatted using GitHub Flavored Markdown (GFM). Utilize standard GFM features for lists, emphasis (bold, italics), strikethrough, links, images, etc. These will be styled by the application.
*   **Code Blocks in Markdown (for display as code):** ALWAYS use triple backticks (\`\`\`) for any code snippets, examples, or commands intended to be *displayed as code*. ALWAYS specify the programming language (e.g., \\\`\\\`\\\`python). These will be syntax highlighted by Shiki.
*   **Live Preview Code Blocks (for HTML/CSS/JS demos):** If you are providing a self-contained HTML, CSS, and JavaScript demonstration that should be rendered live *within the chat message itself*, use a fenced code block with the language identifier \`html-live-preview\`. For example:
    \`\`\`html-live-preview
    <style>button { background-color: blue; color: white; padding: 5px; }</style>
    <button onclick="alert('Clicked!')">Click Me Live</button>
    \`\`\`
    The application will provide a toggle to preview this block live. Keep these demos simple and self-contained.
*   **Tables in Markdown:** Use standard Markdown pipe tables.
*   **Mathematical Notation (LaTeX for KaTeX):**
    *   For **inline mathematical expressions** (e.g., within a sentence), use single dollar signs: \`$E = mc^2$\`.
    *   For **block (display) mathematical expressions** (on their own line, centered), use double dollar signs on separate lines:
        \`\`\`
        $$
        \\sum_{i=1}^{n} i = \\frac{n(n+1)}{2}
        $$
        \`\`\`
    *   Use standard LaTeX syntax for all mathematical content. This will be rendered using KaTeX.
    *   Mathematical LaTeX should primarily be used in the \`mainContentBefore\` and \`mainContentAfter\` fields for explanations or descriptions.
    *   **IMPORTANT - Math in Code Comments:** If a mathematical formula, symbol, or equation appears as part of a *comment within a fenced code block* (e.g., \`# Formula: E = mc^2\` in Python, or \`// Integral: ∫x dx\` in JavaScript), it MUST remain as plain text within that code block. DO NOT use KaTeX delimiters (\`$\` or \`$$\`) for math inside code block comments. The code block itself will be syntax highlighted by Shiki, and the math in comments should appear as regular comment text, not as rendered KaTeX.
*   **Rich Content with HTML, CSS, and JavaScript (Use Judiciously):**
    *   For enhanced visual presentation or simple interactive demonstrations where Markdown is insufficient, you MAY embed raw HTML, CSS (via \`<style>\` tags or inline styles), and JavaScript (via \`<script>\` tags) directly within the Markdown content of \`mainContentBefore\` or \`mainContentAfter\`.
    *   **HTML Structure:** Use semantic HTML where appropriate.
    *   **CSS Styling:**
        *   You can use inline \`style\` attributes on HTML elements: \`<p style="color: blue;">Blue text.</p>\`
        *   You can include a \`<style>\` block within your HTML:
            \`\`\`html
            <div>
              <style>
                .my-custom-class { color: green; font-weight: bold; }
                button.interactive-demo { padding: 8px 16px; background-color: #007bff; color: white; border-radius: 4px; }
              </style>
              <p class="my-custom-class">This is styled text.</p>
            </div>
            \`\`\`
    *   **JavaScript (\`<script>\` tags):**
        *   Use with EXTREME CAUTION. Scripts MUST be simple, directly related to the demonstration, and self-contained (e.g., using an IIFE - Immediately Invoked Function Expression - to avoid polluting the global scope).
        *   Primarily for illustrating client-side "working mechanics" (e.g., a button that changes text on click, a simple calculation) or defining helper functions for inline event handlers (e.g., \`onclick="myDemoFunction()"\`).
        *   Avoid manipulating the parent page's DOM extensively or in a way that could disrupt the application. Focus on elements within the HTML block you are generating.
        *   Complex JavaScript logic should ideally be part of a file action (e.g., creating/editing a .js file) rather than embedded directly in chat.
        *   All JavaScript MUST be non-malicious and serve a clear, illustrative purpose directly related to the user's query.
        *   Example of an interactive element:
            \`\`\`html
            <div>
              <style>
                .demo-button { padding: 5px 10px; margin: 5px; }
                #demo-output { margin-top: 5px; font-style: italic; }
              </style>
              <button class="demo-button" id="interactiveBtn">Click Me</button>
              <span id="demo-output"></span>
              <script>
                (function() {
                  var count = 0;
                  var btn = document.getElementById('interactiveBtn');
                  var output = document.getElementById('demo-output');
                  if (btn && output) {
                    btn.onclick = function() {
                      count++;
                      output.textContent = 'Clicked ' + count + ' times.';
                    };
                  }
                })();
              </script>
            </div>
            \`\`\`
    *   **Combining with Markdown:** You can intersperse these raw HTML/CSS/JS blocks (for general rich content) and \`html-live-preview\` code blocks (for isolated live demos) with standard Markdown. For example, explain a concept in Markdown, then provide an interactive HTML demo using \`html-live-preview\`, then continue with more Markdown.
    *   **IMPORTANT for Live HTML/JS/CSS Demos (NOT using \`html-live-preview\`):** When providing an interactive HTML/CSS/JS demonstration intended to be rendered live in the chat *without* the special \`html-live-preview\` fenced block (i.e., directly embedded raw HTML), DO NOT wrap the HTML, \`<style>\`, or \`<script>\` tags within Markdown fenced code blocks (e.g., \\\`\\\`\\\`html). Output them directly as raw HTML within the Markdown string. Fenced code blocks are ONLY for displaying code as text with syntax highlighting or for the special \`html-live-preview\` case.

Example of a complete JSON response (e.g., user asks "write a python function to add two numbers"):
\`\`\`json
{
  "project": "Python Helper Function",
  "mainContentBefore": "Sure, here's a Python function that adds two numbers:\\n\\n\`\`\`python\\ndef add_numbers(a, b):\\n  \\"\\"\\"This function returns the sum of two numbers.\\"\\"\\"\\n  return a + b\\n\\n# Example usage:\\n# The sum is calculated as result = a + b\\nresult = add_numbers(5, 3)\\nprint(f\\"The sum is: {result}\\")\\n\`\`\`\\n\\nYou can copy and paste this code into your Python file.",
  "steps": null,
  "mainContentAfter": "Let me know if you need any modifications or another function!",
  "errorMessage": null
}
\`\`\`

Example of a response with only text (no actions), including math:
\`\`\`json
{
  "project": null,
  "mainContentBefore": "The quadratic formula is given by $x = \\frac{-b \\pm \\sqrt{b^2-4ac}}{2a}$.\\n\\nFor example, to solve $x^2 + 5x + 6 = 0$, we have $a=1, b=5, c=6$.\\n\\n\`\`\`javascript\\n// This is how you might calculate it in JS\\n// The discriminant is Δ = b^2 - 4ac\\nfunction solveQuadratic(a, b, c) {\\n  const discriminant = b*b - 4*a*c;\\n  if (discriminant < 0) return null; // No real roots\\n  const root1 = (-b + Math.sqrt(discriminant)) / (2*a);\\n  const root2 = (-b - Math.sqrt(discriminant)) / (2*a);\\n  return [root1, root2];\\n}\\nconsole.log(solveQuadratic(1, 5, 6)); // Example: [-2, -3]\\n\`\`\`",
  "steps": null,
  "mainContentAfter": null,
  "errorMessage": null
}
\`\`\`

Example of a response requesting a search:
\`\`\`json
{
  "project": "Latest AI Research Trends",
  "mainContentBefore": "I need to find the latest trends in AI research. I'll perform a quick search.",
  "steps": [
    {
      "type": "searchGoogle",
      "description": "Search for 'latest AI research trends 2024'",
      "query": "latest AI research trends 2024"
    }
  ],
  "mainContentAfter": null,
  "errorMessage": null
}
\`\`\`

Example of a response *after* receiving and processing search results (this would be a *new* JSON response from you):
\`\`\`json
{
  "project": "Latest AI Research Trends",
  "mainContentBefore": "Based on my search, the latest AI research trends include advancements in Large Language Models, multimodal AI, and explainable AI. Here's a summary:\\n\\n*   Large Language Models (LLMs): Continued scaling, improved reasoning, and new architectures.\\n*   Multimodal AI: Systems that can process and generate information from multiple types of data (text, images, audio).\\n*   Explainable AI (XAI): Developing methods to make AI decisions more transparent and understandable.",
  "steps": null,
  "mainContentAfter": "You can find more details in recent publications from major AI conferences and research labs.",
  "errorMessage": null
}
\`\`\`

Comprehensive Technical Domain Mastery (Deep Specialization)
While Bolt is a universal AI assistant, it possesses an exceptionally deep and broad specialization in all aspects of software development and technology. This includes, but is not limited to:

Web Development Excellence
Frontend Technologies
JavaScript/TypeScript Ecosystem:
Frameworks: React 18+, Vue 3+, Angular 17+, Svelte/SvelteKit, Solid.js, Lit, Alpine.js
Meta-frameworks: Next.js, Nuxt.js, Remix, Astro, Qwik, Fresh (Deno)
Build Tools: Vite, Webpack 5, Rollup, Parcel, esbuild, SWC, Turbopack
State Management: Redux Toolkit, Zustand, Jotai, Recoil, MobX, XState, Pinia
Styling: Tailwind CSS, Styled Components, Emotion, CSS Modules, PostCSS, Sass/SCSS
Component Libraries: Material-UI, Ant Design, Chakra UI, React Aria, Headless UI
Testing: Jest, Vitest, Cypress, Playwright, Testing Library, Storybook
Advanced Frontend Patterns:
Micro-frontends architecture
Progressive Web Apps (PWA)
Server-Side Rendering (SSR) and Static Site Generation (SSG)
Edge computing and CDN optimization
Web Components and Shadow DOM
Service Workers and background sync
WebAssembly (WASM) integration
Module Federation
Backend Technologies
Node.js Ecosystem:
Runtime: Node.js, Deno, Bun
Frameworks: Express.js, Fastify, Koa.js, NestJS, Hapi.js, Adonis.js
GraphQL: Apollo Server, GraphQL Yoga, Pothos, Mercurius
Real-time: Socket.io, WebSockets, Server-Sent Events, WebRTC
ORM/Query Builders: Prisma, TypeORM, Sequelize, Knex.js, Drizzle
Python Ecosystem:
Web Frameworks: Django, Flask, FastAPI, Starlette, Tornado, Pyramid
Async Frameworks: asyncio, aiohttp, Quart, Sanic
Data Science: Pandas, NumPy, SciPy, Matplotlib, Seaborn, Plotly
Machine Learning: TensorFlow, PyTorch, scikit-learn, Keras, Hugging Face
Testing: pytest, unittest, mock, hypothesis
Other Backend Languages:
Java: Spring Boot, Spring Cloud, Micronaut, Quarkus, Vert.x
C#/.NET: ASP.NET Core, Entity Framework, Blazor, MAUI
Go: Gin, Echo, Fiber, Buffalo, gRPC, Protocol Buffers
Rust: Actix-web, Rocket, Warp, Tokio, async/await
PHP: Laravel, Symfony, CodeIgniter, Slim, Phalcon
Ruby: Ruby on Rails, Sinatra, Hanami, Grape
Scala: Play Framework, Akka, Cats Effect, ZIO
Kotlin: Ktor, Spring Boot with Kotlin
Mobile Development Mastery
Cross-Platform Development
React Native: Expo, React Navigation, Redux/Zustand, React Native Paper
Flutter: Dart, Bloc/Riverpod, GetX, Flutter Hooks, Flame (games)
Ionic: Angular/React/Vue integration, Capacitor, Cordova
Xamarin: C#, XAML, Xamarin.Forms, Xamarin.Native
Progressive Web Apps: Workbox, Service Workers, Web App Manifest
Native Development
iOS Development:
Languages: Swift, SwiftUI, UIKit, Objective-C
Architecture: MVVM, VIPER, Clean Architecture
Tools: Xcode, CocoaPods, Swift Package Manager
Testing: XCTest, Quick/Nimble, UI Testing
Android Development:
Languages: Kotlin, Java, Jetpack
// The list of technical skills can be further extended here as needed.
`;

--- File: lib\utils.ts ---
// lib/utils.ts
import { type ClassValue, clsx } from "clsx"
import { twMerge } from "tailwind-merge"
import React, { useState, useEffect } from "react" // Added for useIsMobile

/**
 * Combines multiple class names and resolves Tailwind CSS conflicts
 */
export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

/**
 * Formats a date to a readable string
 */
export function formatDate(date: Date): string {
  return new Intl.DateTimeFormat("en-US", {
    month: "short",
    day: "numeric",
    year: "numeric",
  }).format(date)
}

/**
 * Generates a unique ID
 */
export function generateId(): string {
  return Math.random().toString(36).substring(2, 9)
}

/**
 * Debounces a function
 */
export function debounce<F extends (...args: any[]) => any>(func: F, waitFor: number) {
  let timeout: ReturnType<typeof setTimeout> | null = null;

  const debounced = (...args: Parameters<F>) => {
    if (timeout !== null) {
      clearTimeout(timeout);
      timeout = null;
    }
    timeout = setTimeout(() => func(...args), waitFor);
  };

  return debounced as (...args: Parameters<F>) => void; // Adjusted return type
}


/**
 * Truncates a string to a specified length
 */
export function truncate(str: string, length: number): string {
  if (str.length <= length) return str
  return str.slice(0, length) + "..."
}

/**
 * Hook to detect if the current device is mobile
 */
const MOBILE_BREAKPOINT = 768

export function useIsMobile() {
  const [isMobile, setIsMobileState] = useState<boolean | undefined>(undefined) // Renamed to avoid conflict

  useEffect(() => {
    const checkIfMobile = () => {
      setIsMobileState(window.innerWidth < MOBILE_BREAKPOINT)
    }

    // Initial check
    checkIfMobile()

    // Add event listener
    window.addEventListener("resize", checkIfMobile)

    // Clean up
    return () => window.removeEventListener("resize", checkIfMobile)
  }, [])

  return !!isMobile
}

--- File: my_project\about_google.txt ---
Google is a global technology company founded in 1998.
It was started by Larry Page and Sergey Brin.
Their original mission was to organize the world's information.
Google is best known for its search engine.
It is a subsidiary of the parent company, Alphabet Inc.
Google offers a wide range of products and services.
These include Gmail, Google Maps, YouTube, and Android.
The company has a significant presence in online advertising.
Google's headquarters are in Mountain View, California.
It is one of the largest and most influential companies globally.
Google also develops the Chrome web browser and Chrome OS.
Its Google Cloud Platform offers enterprise cloud computing solutions.
The company invests heavily in artificial intelligence research.
Pixel smartphones and Google Home/Nest devices are part of their hardware line.
Google Assistant is its popular voice-activated virtual assistant.
Waymo, a subsidiary, focuses on self-driving car technology.
Google Search processes billions of queries daily.
They acquired YouTube in 2006 and Android in 2005.
The company continues to expand into areas like health and finance.
Google's work culture is often cited for its emphasis on innovation.

--- File: my_project\New Text Document.py ---


--- File: styles\globals.css ---
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
    --destructive: 0 84.2% 60.2%;
    --code-keyword: 280 60% 70%; /* Purple-ish, similar to #c678dd */
    --code-string: 100 50% 50%; /* Green-ish, similar to #98c379 */
    --code-comment: 215 10% 50%; /* Gray-ish, similar to #7f848e */
    --code-number: 30 70% 60%; /* Orange-ish, similar to #d19a66 */
    --code-boolean: 190 50% 60%; /* Cyan-ish, similar to #56b6c2 */
    --code-tag: 0 70% 60%; /* Red-ish for HTML tags */
    --code-attribute: 40 70% 60%; /* Yellow-ish for HTML attributes */
    --search-highlight-bg: 48 96% 53.1%; /* Base color for highlight */
    --destructive-foreground: 210 40% 98%;
    --success: 142.1 76.2% 36.3%;
    --success-foreground: 355.7 100% 97.3%;
    --warning: 38 92.7% 50.2%;
    --warning-foreground: 222.2 84% 4.9%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;
    --radius: 0.5rem;
    --font-ui: var(--font-inter); /* Ensure --font-inter is defined by your font import */
    --font-mono: var(--font-jetbrains); /* Ensure --font-jetbrains is defined */
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 50.6%;
    --destructive-foreground: 210 40% 98%;
    --success: 142.1 70.6% 45.3%;
    --success-foreground: 144.9 80.4% 10%;
    --warning: 48 96% 53.1%;
    --warning-foreground: 223 47.4% 11.2%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Line numbers for code blocks */
/* These styles are now primarily for AI chat code blocks */
.line-numbers {
  position: relative;
  padding-left: 2rem;
  counter-reset: line;
}

.line-numbers > code {
  display: grid; /* Ensures lines stack correctly */
}

.line-numbers .line::before {
  color: hsl(var(--muted-foreground));
  font-size: 0.75rem;
  display: inline-block;
  width: 1rem; /* Width of the number itself */
  text-align: right;
  margin-right: 1rem; /* Space between number and code */
  margin-left: -2rem; /* Pulls it into the padding area of .line-numbers */
  counter-increment: line;
  content: counter(line);
  user-select: none; /* Prevent selecting line numbers */
}

/* Terminal command styles */
.ps-success {
  color: hsl(var(--success)); /* Use theme variable */
}

.ps-error {
  color: hsl(var(--destructive)); /* Use theme variable */
}

.ps-info {
  color: hsl(217.2, 91.2%, 59.8%); /* Consider making this a theme variable if used often */
}

.ps-command {
  color: hsl(var(--warning)); /* Using warning color for commands, adjust if needed */
}

.search-highlight {
  background-color: hsla(48, 96%, 53.1%, 0.3); /* Consider theme variable */
  border-radius: 0.125rem;
  padding: 0 0.125rem;
}

.dark .search-highlight {
  background-color: hsla(48, 96%, 53.1%, 0.4); /* Consider theme variable */
}

/* REMOVED: Custom overrides for highlight.js using CSS variables */
/* REMOVED: .hljs styles */
/* REMOVED: .hljs-* styles */


/* Scoped class for AI chat code blocks to ensure pre/code tags behave as expected */
.ai-chat-code-block pre {
  background-color: transparent; /* Ensure no conflicting background */
  /* padding: 0; Remove padding, let code.hljs handle it - Adjusted this in sidebar.tsx now */
  margin: 0; /* Remove margin */
  /* overflow-x: visible; Let code tag handle overflow if needed */
}

/* REMOVED: The code tag will get padding from highlight.js default.css (pre code.hljs) */
/* REMOVED: .ai-chat-code-block code.hljs { } */

--- File: styles\terminal.css ---
/* --- File: styles/terminal.css --- */
/* PowerShell Terminal Styling */

.terminal-content {
  font-family: 'Cascadia Code', 'Consolas', 'Menlo', 'Courier New', monospace; /* Added more fallbacks */
  line-height: 1.6; /* Increased for better readability */
  padding: 8px;
}

/* PowerShell prompt styling */
.ps-prompt {
  color: hsl(var(--muted-foreground)); /* Use theme variable */
  user-select: none;
  display: inline-flex; /* Helps align multiline prompts if they occur */
  align-items: baseline; /* Align text within the prompt */
}

.ps-prompt-path {
  color: hsl(var(--primary)); /* Use theme variable */
  font-weight: 500;
}

.ps-prompt-drive {
  color: hsl(var(--accent-foreground)); /* Use theme variable */
}

/* Output styling */
.ps-output {
  color: hsl(var(--foreground)); /* Use theme variable */
  white-space: pre-wrap;
  word-break: break-all;
}

/* Command styling */
.ps-command {
  color: hsl(var(--foreground)); /* Use theme variable */
  font-weight: 500;
}

/* Error styling */
.ps-error-output { /* For the whole block of error output */
  color: hsl(var(--destructive)); 
  /* background-color: hsl(var(--destructive) / 0.05); /* Optional: Lighter background */
}
.ps-error { /* For inline error keywords */
  color: hsl(var(--destructive)); 
  font-weight: bold;
}


/* Warning styling */
.ps-warning {
  color: hsl(var(--warning)); /* Use theme variable */
  /* background-color: hsl(var(--warning) / 0.1);
  padding: 4px 8px;
  border-left: 2px solid hsl(var(--warning));
  margin: 4px 0; */
}

/* Success styling */
.ps-success {
  color: hsl(var(--success)); /* Use theme variable */
}

/* Info styling */
.ps-info {
  color: hsl(217.2, 91.2%, 59.8%); /* Consider theme variable */
}

/* File path styling */
.ps-path {
  color: hsl(var(--code-string)); /* Use code string color for paths */
}

/* Command completion styling */
.ps-completion {
  color: hsl(var(--accent-foreground)); /* Use theme variable */
  font-style: italic;
}

/* Tab completion styling */
.ps-completion-list {
  background-color: hsl(var(--popover)); /* Use theme variable */
  border: 1px solid hsl(var(--border));
  border-radius: 4px;
  max-height: 200px;
  overflow-y: auto;
  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  color: hsl(var(--popover-foreground));
}

.ps-completion-item {
  cursor: pointer;
  user-select: none;
  transition: background-color 0.2s ease;
}

.ps-completion-item:hover {
  background-color: hsl(var(--accent));
}

/* Update scrollbar styling for completion list */
.ps-completion-list::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}

.ps-completion-list::-webkit-scrollbar-track {
  background: transparent;
}

.ps-completion-list::-webkit-scrollbar-thumb {
  background: hsl(var(--border));
  border-radius: 3px;
}

.ps-completion-list::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--muted-foreground));
}

/* Progress bar styling */
.ps-progress {
  /* background-color: hsl(var(--secondary));
  border: 1px solid hsl(var(--border));
  height: 20px;
  margin: 4px 0;
  position: relative; */
  color: hsl(var(--accent-foreground)); /* For text-based progress */
}

/* Selection styling */
.terminal-content ::selection {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

/* Syntax highlighting - these are more specific than the general .ps-command etc. */
.ps-string { color: hsl(var(--code-string)); }
.ps-number { color: hsl(var(--code-number)); }
.ps-boolean { color: hsl(var(--code-boolean)); }
.ps-variable { color: #9CDCFE; } /* Specific to PS variables, might differ from general code */
.ps-operator { color: hsl(var(--foreground)); opacity: 0.8; } /* General operators, slightly muted */
.ps-keyword { color: hsl(var(--code-keyword)); }
.ps-comment { color: hsl(var(--code-comment)); font-style: italic; }
.ps-function { color: #DCDCAA; } /* Specific to PS functions */

/* PowerShell specific command types */
.ps-cmdlet { color: #4EC9B0; } /* Specific to PS cmdlets */
.ps-parameter { color: #9CDCFE; } /* Parameters often match variable colors */
.ps-alias { color: #DCDCAA; font-style: italic; }
.ps-type { color: #4EC9B0; } /* Types often match cmdlet colors or a distinct color */


/* Cursor styling */
.ps-cursor {
  background-color: hsl(var(--foreground));
  animation: blink 1s step-end infinite;
}

@keyframes blink {
  50% { opacity: 0; }
}

/* Scrollbar styling */
.terminal-content::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

.terminal-content::-webkit-scrollbar-track {
  background: hsl(var(--background)); /* Match terminal background */
}

.terminal-content::-webkit-scrollbar-thumb {
  background: hsl(var(--border));
  border-radius: 4px;
}

.terminal-content::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--muted-foreground));
}

--- File: types\file.ts ---
// types/file.ts
export interface CodeFile {
  id: string; // We'll generate this on the client, or use path as ID
  name: string;
  path: string; // This will be path relative to 'my_project'
  content: string;
  language: string;
  isDirectory?: false; // Explicitly mark as not a directory
}

export interface FileTreeItem {
  id: string; // We'll generate this on the client, or use path as ID
  name: string;
  path: string; // This will be path relative to 'my_project'
  isDirectory: boolean;
  children?: FileTreeItem[];
  language?: string; // For files
  // These were for client-side filtering, might not be needed if search is server-side
  // isMatch?: boolean 
  // hasMatchingDescendant?: boolean
}
